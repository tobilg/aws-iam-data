[
  {
    "dateOfChange": "2024-05-07",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Connect": [
        "connect:AdminGetEmergencyAccessToken"
      ],
      "Amazon Personalize": [
        "personalize:CreateDataDeletionJob",
        "personalize:DescribeDataDeletionJob",
        "personalize:ListDataDeletionJobs"
      ]
    },
    "removedActions": {
      "Amazon Connect": [
        "connect:GetFederationTokens"
      ]
    }
  },
  {
    "dateOfChange": "2024-05-03",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Pinpoint SMS Voice V2": [
        "sms-voice:AssociateProtectConfiguration",
        "sms-voice:CreateProtectConfiguration",
        "sms-voice:DeleteAccountDefaultProtectConfiguration",
        "sms-voice:DeleteMediaMessageSpendLimitOverride",
        "sms-voice:DeleteProtectConfiguration",
        "sms-voice:DescribeProtectConfigurations",
        "sms-voice:DisassociateProtectConfiguration",
        "sms-voice:GetProtectConfigurationCountryRuleSet",
        "sms-voice:SendMediaMessage",
        "sms-voice:SetAccountDefaultProtectConfiguration",
        "sms-voice:SetMediaMessageSpendLimitOverride",
        "sms-voice:UpdateProtectConfiguration",
        "sms-voice:UpdateProtectConfigurationCountryRuleSet"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-05-01",
    "addedServices": [
      "Amazon Q Business Q Apps"
    ],
    "removedServices": [],
    "addedActions": {
      "Amazon Q Business": [
        "qbusiness:CancelSubscription",
        "qbusiness:CreateSubscription",
        "qbusiness:ListSubscriptions",
        "qbusiness:UpdateSubscription"
      ],
      "Amazon Timestream": [
        "timestream:DescribeAccountSettings",
        "timestream:UpdateAccountSettings"
      ],
      "Amazon Q Business Q Apps": [
        "qapps:AssociateQAppWithUser",
        "qapps:CopyQApp",
        "qapps:CreateLibraryItem",
        "qapps:CreateLibraryItemReview",
        "qapps:CreateQApp",
        "qapps:CreateSubscriptionToken",
        "qapps:DeleteLibraryItem",
        "qapps:DeleteQApp",
        "qapps:DisassociateQAppFromUser",
        "qapps:GetLibraryItem",
        "qapps:GetQApp",
        "qapps:ImportDocumentToQApp",
        "qapps:ImportDocumentToQAppSession",
        "qapps:ListLibraryItems",
        "qapps:ListQApps",
        "qapps:PredictProblemStatementFromConversation",
        "qapps:PredictQAppFromProblemStatement",
        "qapps:StartQAppSession",
        "qapps:StopQAppSession",
        "qapps:UpdateLibraryItem",
        "qapps:UpdateQApp"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-30",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS CodePipeline": [
        "codepipeline:RollbackStage"
      ],
      "AWS HealthLake": [
        "healthlake:SearchEverything"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-27",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {},
    "removedActions": {
      "Amazon WorkMail": [
        "workmail:AddMembersToGroup",
        "workmail:DescribeDirectories",
        "workmail:DescribeKmsKeys",
        "workmail:DescribeMailGroups",
        "workmail:DescribeMailUsers",
        "workmail:DescribeOrganizations",
        "workmail:GetMailGroupDetails",
        "workmail:ListMembersInMailGroup",
        "workmail:RemoveMembersFromGroup",
        "workmail:ResetUserPassword",
        "workmail:SetAdmin"
      ]
    }
  },
  {
    "dateOfChange": "2024-04-26",
    "addedServices": [
      "AWS Signin"
    ],
    "removedServices": [],
    "addedActions": {
      "AWS App Mesh Preview": [
        "appmesh-preview:DeleteMeshPolicy",
        "appmesh-preview:GetMeshPolicy",
        "appmesh-preview:PutMeshPolicy"
      ],
      "Amazon Connect Cases": [
        "cases:DeleteField",
        "cases:DeleteLayout",
        "cases:DeleteTemplate"
      ],
      "Amazon GameLift": [
        "gamelift:CreateContainerGroupDefinition",
        "gamelift:DeleteContainerGroupDefinition",
        "gamelift:DescribeContainerGroupDefinition",
        "gamelift:ListContainerGroupDefinitions"
      ],
      "Amazon QuickSight": [
        "quicksight:UpdateSPICECapacityConfiguration"
      ],
      "AWS Step Functions": [
        "states:ValidateStateMachineDefinition"
      ],
      "Amazon WorkDocs": [
        "workdocs:DescribeInstanceExports",
        "workdocs:StartInstanceExport"
      ],
      "AWS Signin": [
        "signin:CreateTrustedIdentityPropagationApplicationForConsole",
        "signin:ListTrustedIdentityPropagationApplicationsForConsole"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-24",
    "addedServices": [
      "Amazon Route 53 Profiles enables sharing DNS settings with VPCs"
    ],
    "removedServices": [],
    "addedActions": {
      "Amazon Bedrock": [
        "bedrock:ApplyGuardrail",
        "bedrock:CreateEvaluationJob",
        "bedrock:GetEvaluationJob",
        "bedrock:ListEvaluationJobs",
        "bedrock:StopEvaluationJob"
      ],
      "AWS Identity and Access Management Roles Anywhere": [
        "rolesanywhere:DeleteAttributeMapping",
        "rolesanywhere:PutAttributeMapping"
      ],
      "Amazon Route 53 Profiles enables sharing DNS settings with VPCs": [
        "route53profiles:AssociateProfile",
        "route53profiles:AssociateResourceToProfile",
        "route53profiles:CreateProfile",
        "route53profiles:DeleteProfile",
        "route53profiles:DisassociateProfile",
        "route53profiles:DisassociateResourceFromProfile",
        "route53profiles:GetProfile",
        "route53profiles:GetProfileAssociation",
        "route53profiles:GetProfileResourceAssociation",
        "route53profiles:ListProfileAssociations",
        "route53profiles:ListProfileResourceAssociations",
        "route53profiles:ListProfiles",
        "route53profiles:ListTagsForResource",
        "route53profiles:TagResource",
        "route53profiles:UntagResource",
        "route53profiles:UpdateProfileResourceAssociation"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-23",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS App Mesh": [
        "appmesh:DeleteMeshPolicy",
        "appmesh:GetMeshPolicy",
        "appmesh:PutMeshPolicy"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-20",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Q": [
        "q:GetIdentityMetadata",
        "q:PassRequest",
        "q:UpdateTroubleshootingCommandResult"
      ],
      "Amazon WorkSpaces": [
        "workspaces:AcceptAccountLinkInvitation",
        "workspaces:CreateAccountLinkInvitation",
        "workspaces:DeleteAccountLinkInvitation",
        "workspaces:GetAccountLink",
        "workspaces:ListAccountLinks",
        "workspaces:RejectAccountLinkInvitation"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-18",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon CloudWatch Internet Monitor": [
        "internetmonitor:GetInternetEvent",
        "internetmonitor:ListInternetEvents"
      ],
      "Amazon EMR on EKS (EMR Containers)": [
        "emr-containers:CreateSecurityConfiguration",
        "emr-containers:DescribeSecurityConfiguration",
        "emr-containers:ListSecurityConfigurations"
      ],
      "AWS Outposts": [
        "outposts:CancelCapacityTask",
        "outposts:GetCapacityTask",
        "outposts:GetOutpostSupportedInstanceTypes",
        "outposts:ListCapacityTasks",
        "outposts:StartCapacityTask"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-17",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Key Management Service": [
        "kms:ListKeyRotations",
        "kms:RotateKeyOnDemand"
      ],
      "AWS Well-Architected Tool": [
        "wellarchitected:ConfigureIntegration",
        "wellarchitected:GetGlobalSettings",
        "wellarchitected:UpdateIntegration"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-13",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Glue": [
        "glue:BatchGetStageFiles",
        "glue:GetEnvironment",
        "glue:GetExecutors",
        "glue:GetExecutorsThreads",
        "glue:GetLogParsingStatus",
        "glue:GetQueries",
        "glue:GetQuery",
        "glue:GetStage",
        "glue:GetStageAttempt",
        "glue:GetStageAttemptTaskList",
        "glue:GetStageAttemptTaskSummary",
        "glue:GetStageFiles",
        "glue:GetStages",
        "glue:GetStorage",
        "glue:GetStorageUnit",
        "glue:RequestLogParsing"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-12",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Elemental MediaLive": [
        "medialive:CreateCloudWatchAlarmTemplate",
        "medialive:CreateCloudWatchAlarmTemplateGroup",
        "medialive:CreateEventBridgeRuleTemplate",
        "medialive:CreateEventBridgeRuleTemplateGroup",
        "medialive:CreateSignalMap",
        "medialive:DeleteCloudWatchAlarmTemplate",
        "medialive:DeleteCloudWatchAlarmTemplateGroup",
        "medialive:DeleteEventBridgeRuleTemplate",
        "medialive:DeleteEventBridgeRuleTemplateGroup",
        "medialive:DeleteSignalMap",
        "medialive:GetCloudWatchAlarmTemplate",
        "medialive:GetCloudWatchAlarmTemplateGroup",
        "medialive:GetEventBridgeRuleTemplate",
        "medialive:GetEventBridgeRuleTemplateGroup",
        "medialive:GetSignalMap",
        "medialive:ListCloudWatchAlarmTemplateGroups",
        "medialive:ListCloudWatchAlarmTemplates",
        "medialive:ListEventBridgeRuleTemplateGroups",
        "medialive:ListEventBridgeRuleTemplates",
        "medialive:ListSignalMaps",
        "medialive:StartDeleteMonitorDeployment",
        "medialive:StartMonitorDeployment",
        "medialive:StartUpdateSignalMap",
        "medialive:UpdateCloudWatchAlarmTemplate",
        "medialive:UpdateCloudWatchAlarmTemplateGroup",
        "medialive:UpdateEventBridgeRuleTemplate",
        "medialive:UpdateEventBridgeRuleTemplateGroup"
      ],
      "Amazon Q in Connect": [
        "wisdom:UpdateSession"
      ],
      "AWS Supply Chain": [
        "scn:SendDataIntegrationEvent"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-11",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon DataZone": [
        "datazone:AddPolicyGrant",
        "datazone:ListPolicyGrants",
        "datazone:RemovePolicyGrant",
        "datazone:UpdateDataSourceRunActivities"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-10",
    "addedServices": [
      "AWS Control Catalog"
    ],
    "removedServices": [],
    "addedActions": {
      "AWS Control Catalog": [
        "controlcatalog:ListCommonControls",
        "controlcatalog:ListDomains",
        "controlcatalog:ListObjectives"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-09",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Neptune Analytics": [
        "neptune-graph:StartImportTask"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-06",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Clean Rooms": [
        "cleanrooms:BatchGetSchemaAnalysisRule"
      ],
      "Amazon RDS": [
        "rds:ModifyIntegration"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-05",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon DocumentDB Elastic Clusters": [
        "docdb-elastic:CopyClusterSnapshot",
        "docdb-elastic:StartCluster",
        "docdb-elastic:StopCluster"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-04",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Entity Resolution": [
        "entityresolution:AddPolicyStatement",
        "entityresolution:CreateIdNamespace",
        "entityresolution:DeleteIdNamespace",
        "entityresolution:DeletePolicyStatement",
        "entityresolution:GetIdNamespace",
        "entityresolution:GetPolicy",
        "entityresolution:ListIdNamespaces",
        "entityresolution:PutPolicy",
        "entityresolution:UpdateIdNamespace",
        "entityresolution:UseIdNamespace"
      ],
      "AWS Marketplace Catalog": [
        "aws-marketplace:DescribeAssessment",
        "aws-marketplace:ListAssessments"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-03",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS CloudFormation": [
        "cloudformation:ListStackSetAutoDeploymentTargets"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-04-02",
    "addedServices": [
      "AWS CodeConnections",
      "AWS Deadline Cloud"
    ],
    "removedServices": [],
    "addedActions": {
      "Amazon DataZone": [
        "datazone:DeleteTimeSeriesDataPoints",
        "datazone:GetTimeSeriesDataPoint",
        "datazone:ListTimeSeriesDataPoints",
        "datazone:PostTimeSeriesDataPoints"
      ],
      "AWS IoT Wireless": [
        "iotwireless:GetMetricConfiguration",
        "iotwireless:GetMetrics",
        "iotwireless:UpdateMetricConfiguration"
      ],
      "AWS CodeConnections": [
        "codeconnections:CreateConnection",
        "codeconnections:CreateHost",
        "codeconnections:CreateRepositoryLink",
        "codeconnections:CreateSyncConfiguration",
        "codeconnections:DeleteConnection",
        "codeconnections:DeleteHost",
        "codeconnections:DeleteRepositoryLink",
        "codeconnections:DeleteSyncConfiguration",
        "codeconnections:GetConnection",
        "codeconnections:GetHost",
        "codeconnections:GetIndividualAccessToken",
        "codeconnections:GetInstallationUrl",
        "codeconnections:GetRepositoryLink",
        "codeconnections:GetRepositorySyncStatus",
        "codeconnections:GetResourceSyncStatus",
        "codeconnections:GetSyncBlockerSummary",
        "codeconnections:GetSyncConfiguration",
        "codeconnections:ListConnections",
        "codeconnections:ListHosts",
        "codeconnections:ListInstallationTargets",
        "codeconnections:ListRepositoryLinks",
        "codeconnections:ListRepositorySyncDefinitions",
        "codeconnections:ListSyncConfigurations",
        "codeconnections:ListTagsForResource",
        "codeconnections:PassConnection",
        "codeconnections:PassRepository",
        "codeconnections:RegisterAppCode",
        "codeconnections:StartAppRegistrationHandshake",
        "codeconnections:StartOAuthHandshake",
        "codeconnections:TagResource",
        "codeconnections:UntagResource",
        "codeconnections:UpdateConnectionInstallation",
        "codeconnections:UpdateHost",
        "codeconnections:UpdateRepositoryLink",
        "codeconnections:UpdateSyncBlocker",
        "codeconnections:UpdateSyncConfiguration",
        "codeconnections:UseConnection"
      ],
      "AWS Deadline Cloud": [
        "deadline:AssociateMemberToFarm",
        "deadline:AssociateMemberToFleet",
        "deadline:AssociateMemberToJob",
        "deadline:AssociateMemberToQueue",
        "deadline:AssumeFleetRoleForRead",
        "deadline:AssumeFleetRoleForWorker",
        "deadline:AssumeQueueRoleForRead",
        "deadline:AssumeQueueRoleForUser",
        "deadline:AssumeQueueRoleForWorker",
        "deadline:BatchGetJobEntity",
        "deadline:CopyJobTemplate",
        "deadline:CreateBudget",
        "deadline:CreateFarm",
        "deadline:CreateFleet",
        "deadline:CreateJob",
        "deadline:CreateLicenseEndpoint",
        "deadline:CreateMonitor",
        "deadline:CreateQueue",
        "deadline:CreateQueueEnvironment",
        "deadline:CreateQueueFleetAssociation",
        "deadline:CreateStorageProfile",
        "deadline:CreateWorker",
        "deadline:DeleteBudget",
        "deadline:DeleteFarm",
        "deadline:DeleteFleet",
        "deadline:DeleteLicenseEndpoint",
        "deadline:DeleteMeteredProduct",
        "deadline:DeleteMonitor",
        "deadline:DeleteQueue",
        "deadline:DeleteQueueEnvironment",
        "deadline:DeleteQueueFleetAssociation",
        "deadline:DeleteStorageProfile",
        "deadline:DeleteWorker",
        "deadline:DisassociateMemberFromFarm",
        "deadline:DisassociateMemberFromFleet",
        "deadline:DisassociateMemberFromJob",
        "deadline:DisassociateMemberFromQueue",
        "deadline:GetApplicationVersion",
        "deadline:GetBudget",
        "deadline:GetFarm",
        "deadline:GetFleet",
        "deadline:GetJob",
        "deadline:GetLicenseEndpoint",
        "deadline:GetMonitor",
        "deadline:GetQueue",
        "deadline:GetQueueEnvironment",
        "deadline:GetQueueFleetAssociation",
        "deadline:GetSession",
        "deadline:GetSessionAction",
        "deadline:GetSessionsStatisticsAggregation",
        "deadline:GetStep",
        "deadline:GetStorageProfile",
        "deadline:GetStorageProfileForQueue",
        "deadline:GetTask",
        "deadline:GetWorker",
        "deadline:ListAvailableMeteredProducts",
        "deadline:ListBudgets",
        "deadline:ListFarmMembers",
        "deadline:ListFarms",
        "deadline:ListFleetMembers",
        "deadline:ListFleets",
        "deadline:ListJobMembers",
        "deadline:ListJobs",
        "deadline:ListLicenseEndpoints",
        "deadline:ListMeteredProducts",
        "deadline:ListMonitors",
        "deadline:ListQueueEnvironments",
        "deadline:ListQueueFleetAssociations",
        "deadline:ListQueueMembers",
        "deadline:ListQueues",
        "deadline:ListSessionActions",
        "deadline:ListSessions",
        "deadline:ListSessionsForWorker",
        "deadline:ListStepConsumers",
        "deadline:ListStepDependencies",
        "deadline:ListSteps",
        "deadline:ListStorageProfiles",
        "deadline:ListStorageProfilesForQueue",
        "deadline:ListTagsForResource",
        "deadline:ListTasks",
        "deadline:ListWorkers",
        "deadline:PutMeteredProduct",
        "deadline:SearchJobs",
        "deadline:SearchSteps",
        "deadline:SearchTasks",
        "deadline:SearchWorkers",
        "deadline:StartSessionsStatisticsAggregation",
        "deadline:TagResource",
        "deadline:UntagResource",
        "deadline:UpdateBudget",
        "deadline:UpdateFarm",
        "deadline:UpdateFleet",
        "deadline:UpdateJob",
        "deadline:UpdateMonitor",
        "deadline:UpdateQueue",
        "deadline:UpdateQueueEnvironment",
        "deadline:UpdateQueueFleetAssociation",
        "deadline:UpdateSession",
        "deadline:UpdateStep",
        "deadline:UpdateStorageProfile",
        "deadline:UpdateTask",
        "deadline:UpdateWorker",
        "deadline:UpdateWorkerSchedule"
      ]
    },
    "removedActions": {
      "Amazon WorkMail": [
        "workmail:CreateMailUser",
        "workmail:DisableMailGroups",
        "workmail:DisableMailUsers",
        "workmail:EnableMailGroups",
        "workmail:EnableMailUsers",
        "workmail:GetMailUserDetails",
        "workmail:SetMailGroupDetails",
        "workmail:SetMailUserDetails"
      ]
    }
  },
  {
    "dateOfChange": "2024-03-31",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon SageMaker": [
        "sagemaker:DeleteResourcePolicy",
        "sagemaker:GetResourcePolicy",
        "sagemaker:PutResourcePolicy"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-29",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon GroundTruth Labeling": [
        "groundtruthlabeling:CreateBatch",
        "groundtruthlabeling:CreateIntakeForm",
        "groundtruthlabeling:CreateProject",
        "groundtruthlabeling:CreateWorkflowDefinition",
        "groundtruthlabeling:GenerateLIDARPreviewTaskConfigJob",
        "groundtruthlabeling:GetBatch",
        "groundtruthlabeling:GetIntakeFormStatus",
        "groundtruthlabeling:ListBatches",
        "groundtruthlabeling:ListProjects",
        "groundtruthlabeling:RunGenerateManifestMetricsJob",
        "groundtruthlabeling:UpdateBatch"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-28",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon EC2": [
        "ec2:DescribeMacHosts",
        "ec2:GetInstanceMetadataDefaults",
        "ec2:ModifyInstanceMetadataDefaults"
      ],
      "Amazon FinSpace": [
        "finspace:DeleteKxClusterNode"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-27",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Cost Explorer Service": [
        "ce:ListCostAllocationTagBackfillHistory",
        "ce:StartCostAllocationTagBackfill"
      ],
      "AWS Migration Hub Orchestrator": [
        "migrationhub-orchestrator:CreateTemplate",
        "migrationhub-orchestrator:DeleteTemplate",
        "migrationhub-orchestrator:UpdateTemplate"
      ],
      "AWS Savings Plans": [
        "savingsplans:ReturnSavingsPlan"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-26",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon CloudWatch Internet Monitor": [
        "internetmonitor:Link"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-23",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS CodeArtifact": [
        "codeartifact:CreatePackageGroup",
        "codeartifact:DeletePackageGroup",
        "codeartifact:DescribePackageGroup",
        "codeartifact:GetAssociatedPackageGroup",
        "codeartifact:ListAllowedRepositoriesForGroup",
        "codeartifact:ListAssociatedPackages",
        "codeartifact:ListPackageGroups",
        "codeartifact:ListSubPackageGroups",
        "codeartifact:UpdatePackageGroup",
        "codeartifact:UpdatePackageGroupOriginConfiguration"
      ],
      "Amazon DynamoDB": [
        "dynamodb:DeleteResourcePolicy",
        "dynamodb:PutResourcePolicy",
        "dynamodb:UpdateKinesisStreamingDestination"
      ],
      "Amazon WorkMail": [
        "workmail:AllowVendedLogDeliveryForResource"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-20",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Managed Blockchain Query": [
        "managedblockchain-query:ListFilteredTransactionEvents"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-19",
    "addedServices": [
      "Amazon Timestream InfluxDB"
    ],
    "removedServices": [
      "Amazon Timestream Influxdb"
    ],
    "addedActions": {
      "Amazon Timestream InfluxDB": [
        "timestream-influxdb:CreateDbInstance",
        "timestream-influxdb:CreateDbParameterGroup",
        "timestream-influxdb:DeleteDbInstance",
        "timestream-influxdb:GetDbInstance",
        "timestream-influxdb:GetDbParameterGroup",
        "timestream-influxdb:ListDbInstances",
        "timestream-influxdb:ListDbParameterGroups",
        "timestream-influxdb:ListTagsForResource",
        "timestream-influxdb:TagResource",
        "timestream-influxdb:UntagResource",
        "timestream-influxdb:UpdateDbInstance"
      ]
    },
    "removedActions": {
      "Amazon Timestream Influxdb": [
        "timestream-influxdb:CreateDbInstance",
        "timestream-influxdb:CreateDbParameterGroup",
        "timestream-influxdb:DeleteDbInstance",
        "timestream-influxdb:GetDbInstance",
        "timestream-influxdb:GetDbParameterGroup",
        "timestream-influxdb:ListDbInstances",
        "timestream-influxdb:ListDbParameterGroups",
        "timestream-influxdb:ListTagsForResource",
        "timestream-influxdb:TagResource",
        "timestream-influxdb:UntagResource",
        "timestream-influxdb:UpdateDbInstance"
      ]
    }
  },
  {
    "dateOfChange": "2024-03-16",
    "addedServices": [
      "Amazon Timestream Influxdb"
    ],
    "removedServices": [],
    "addedActions": {
      "Amazon Timestream Influxdb": [
        "timestream-influxdb:CreateDbInstance",
        "timestream-influxdb:CreateDbParameterGroup",
        "timestream-influxdb:DeleteDbInstance",
        "timestream-influxdb:GetDbInstance",
        "timestream-influxdb:GetDbParameterGroup",
        "timestream-influxdb:ListDbInstances",
        "timestream-influxdb:ListDbParameterGroups",
        "timestream-influxdb:ListTagsForResource",
        "timestream-influxdb:TagResource",
        "timestream-influxdb:UntagResource",
        "timestream-influxdb:UpdateDbInstance"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-13",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Lightsail": [
        "lightsail:GetSetupHistory",
        "lightsail:SetupInstanceHttps"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-12",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon DataZone": [
        "datazone:CancelMetadataGenerationRun"
      ],
      "AWS Migration Hub Strategy Recommendations": [
        "migrationhub-strategy:PutLogData",
        "migrationhub-strategy:PutMetricData"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-10",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Lex V2": [
        "lex:CreateBotReplica",
        "lex:DeleteBotReplica",
        "lex:DescribeBotReplica",
        "lex:ListBotAliasReplicas",
        "lex:ListBotReplicas",
        "lex:ListBotVersionReplicas"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-08",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Elastic MapReduce": [
        "elasticmapreduce:SetUnhealthyNodeReplacement"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-07",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Identity Sync": [
        "identity-sync:AllowVendedLogDeliveryForResource"
      ],
      "Amazon Q": [
        "q:ListConversations"
      ],
      "Amazon Redshift": [
        "redshift:CreateQev2IdcApplication",
        "redshift:DeleteQev2IdcApplication",
        "redshift:DescribeQev2IdcApplications",
        "redshift:ModifyQev2IdcApplication"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-05",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Amplify UI Builder": [
        "amplifyuibuilder:ListTagsForResource",
        "amplifyuibuilder:TagResource",
        "amplifyuibuilder:UntagResource"
      ],
      "Amazon Managed Streaming for Kafka Connect": [
        "kafkaconnect:DeleteWorkerConfiguration",
        "kafkaconnect:ListTagsForResource",
        "kafkaconnect:TagResource",
        "kafkaconnect:UntagResource"
      ],
      "AWS WAF V2": [
        "wafv2:DeleteAPIKey"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-03-02",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {},
    "removedActions": {
      "AWS Database Migration Service": [
        "dms:CreateTest",
        "dms:CreateTestEnvironments",
        "dms:CreateTestPlan",
        "dms:CreateTestRun",
        "dms:DeleteTest",
        "dms:DeleteTestPlan",
        "dms:DescribeTestEnvironments",
        "dms:DescribeTestGenerationStatus",
        "dms:DescribeTestPlans",
        "dms:DescribeTestRunResultsSummaries",
        "dms:DescribeTestRuns",
        "dms:DescribeTests",
        "dms:ModifyTest",
        "dms:ModifyTestPlan",
        "dms:StartGenerateTests",
        "dms:StopGenerateTests",
        "dms:StopTestRun",
        "dms:ViewTestRunResults"
      ]
    }
  },
  {
    "dateOfChange": "2024-02-27",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Elemental MediaLive": [
        "medialive:RestartChannelPipelines"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-02-23",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Resource Groups": [
        "resource-groups:DeleteGroupPolicy",
        "resource-groups:GetGroupPolicy",
        "resource-groups:ListResourceTypes"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-02-21",
    "addedServices": [
      "Amazon Message Gateway Service"
    ],
    "removedServices": [
      "Amazon Session Manager Message Gateway Service"
    ],
    "addedActions": {
      "Amazon Message Gateway Service": [
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel"
      ]
    },
    "removedActions": {
      "Amazon Session Manager Message Gateway Service": [
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel"
      ]
    }
  },
  {
    "dateOfChange": "2024-02-18",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Bedrock": [
        "bedrock:DetectGeneratedContent"
      ],
      "AWS Control Tower": [
        "controltower:DisableBaseline",
        "controltower:EnableBaseline",
        "controltower:GetBaseline",
        "controltower:GetBaselineOperation",
        "controltower:GetEnabledBaseline",
        "controltower:ListBaselines",
        "controltower:ListEnabledBaselines",
        "controltower:ResetEnabledBaseline",
        "controltower:UpdateEnabledBaseline"
      ],
      "Amazon SageMaker": [
        "sagemaker:UpdateClusterSoftware"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-02-10",
    "addedServices": [
      "AWS Billing",
      "AWS Billing Console",
      "Tag Editor"
    ],
    "removedServices": [
      "AWS Billing and Cost Management",
      "AWS Billing and Cost Management Console"
    ],
    "addedActions": {
      "AWS CloudFormation": [
        "cloudformation:CreateGeneratedTemplate",
        "cloudformation:DeleteGeneratedTemplate",
        "cloudformation:DescribeGeneratedTemplate",
        "cloudformation:DescribeResourceScan",
        "cloudformation:GetGeneratedTemplate",
        "cloudformation:ListGeneratedTemplates",
        "cloudformation:ListResourceScanRelatedResources",
        "cloudformation:ListResourceScanResources",
        "cloudformation:ListResourceScans",
        "cloudformation:StartResourceScan",
        "cloudformation:UpdateGeneratedTemplate"
      ],
      "AWS Database Migration Service": [
        "dms:CreateTest",
        "dms:CreateTestEnvironments",
        "dms:CreateTestPlan",
        "dms:CreateTestRun",
        "dms:DeleteTest",
        "dms:DeleteTestPlan",
        "dms:DescribeTestEnvironments",
        "dms:DescribeTestGenerationStatus",
        "dms:DescribeTestPlans",
        "dms:DescribeTestRunResultsSummaries",
        "dms:DescribeTestRuns",
        "dms:DescribeTests",
        "dms:ModifyTest",
        "dms:ModifyTestPlan",
        "dms:StartGenerateTests",
        "dms:StopGenerateTests",
        "dms:StopTestRun",
        "dms:ViewTestRunResults"
      ],
      "Amazon Redshift": [
        "redshift:ListRecommendations"
      ],
      "AWS Tax Settings": [
        "tax:GetTaxInfoReportingDocument"
      ],
      "AWS Billing": [
        "billing:GetBillingData",
        "billing:GetBillingDetails",
        "billing:GetBillingNotifications",
        "billing:GetBillingPreferences",
        "billing:GetContractInformation",
        "billing:GetCredits",
        "billing:GetIAMAccessPreference",
        "billing:GetSellerOfRecord",
        "billing:ListBillingViews",
        "billing:PutContractInformation",
        "billing:RedeemCredits",
        "billing:UpdateBillingPreferences",
        "billing:UpdateIAMAccessPreference"
      ],
      "AWS Billing Console": [
        "aws-portal:GetConsoleActionSetEnforced",
        "aws-portal:ModifyAccount",
        "aws-portal:ModifyBilling",
        "aws-portal:ModifyPaymentMethods",
        "aws-portal:UpdateConsoleActionSetEnforced",
        "aws-portal:ViewAccount",
        "aws-portal:ViewBilling",
        "aws-portal:ViewPaymentMethods",
        "aws-portal:ViewUsage"
      ],
      "Tag Editor": [
        "resource-explorer:ListResourceTypes",
        "resource-explorer:ListResources",
        "resource-explorer:ListTags"
      ]
    },
    "removedActions": {
      "AWS Billing and Cost Management": [
        "billing:GetBillingData",
        "billing:GetBillingDetails",
        "billing:GetBillingNotifications",
        "billing:GetBillingPreferences",
        "billing:GetContractInformation",
        "billing:GetCredits",
        "billing:GetIAMAccessPreference",
        "billing:GetSellerOfRecord",
        "billing:ListBillingViews",
        "billing:PutContractInformation",
        "billing:RedeemCredits",
        "billing:UpdateBillingPreferences",
        "billing:UpdateIAMAccessPreference"
      ],
      "AWS Billing and Cost Management Console": [
        "aws-portal:GetConsoleActionSetEnforced",
        "aws-portal:ModifyAccount",
        "aws-portal:ModifyBilling",
        "aws-portal:ModifyPaymentMethods",
        "aws-portal:UpdateConsoleActionSetEnforced",
        "aws-portal:ViewAccount",
        "aws-portal:ViewBilling",
        "aws-portal:ViewPaymentMethods",
        "aws-portal:ViewUsage"
      ]
    }
  },
  {
    "dateOfChange": "2024-02-07",
    "addedServices": [
      "AWS Billing And Cost Management Data Exports"
    ],
    "removedServices": [
      "AWS Billing and Cost Management And Cost Management Data Exports"
    ],
    "addedActions": {
      "AWS AppSync": [
        "appsync:GetGraphqlApiEnvironmentVariables",
        "appsync:PutGraphqlApiEnvironmentVariables"
      ],
      "AWS Billing And Cost Management Data Exports": [
        "bcm-data-exports:CreateExport",
        "bcm-data-exports:DeleteExport",
        "bcm-data-exports:GetExecution",
        "bcm-data-exports:GetExport",
        "bcm-data-exports:GetTable",
        "bcm-data-exports:ListExecutions",
        "bcm-data-exports:ListExports",
        "bcm-data-exports:ListTables",
        "bcm-data-exports:ListTagsForResource",
        "bcm-data-exports:TagResource",
        "bcm-data-exports:UntagResource",
        "bcm-data-exports:UpdateExport"
      ]
    },
    "removedActions": {
      "AWS Billing and Cost Management And Cost Management Data Exports": [
        "bcm-data-exports:CreateExport",
        "bcm-data-exports:DeleteExport",
        "bcm-data-exports:GetExecution",
        "bcm-data-exports:GetExport",
        "bcm-data-exports:GetTable",
        "bcm-data-exports:ListExecutions",
        "bcm-data-exports:ListExports",
        "bcm-data-exports:ListTables",
        "bcm-data-exports:ListTagsForResource",
        "bcm-data-exports:TagResource",
        "bcm-data-exports:UntagResource",
        "bcm-data-exports:UpdateExport"
      ]
    }
  },
  {
    "dateOfChange": "2024-02-04",
    "addedServices": [
      "AWS Billing and Cost Management And Cost Management Data Exports"
    ],
    "removedServices": [
      "AWS Billing And Cost Management Data Exports"
    ],
    "addedActions": {
      "Amazon SageMaker": [
        "sagemaker:DeleteHyperParameterTuningJob"
      ],
      "AWS Billing and Cost Management And Cost Management Data Exports": [
        "bcm-data-exports:CreateExport",
        "bcm-data-exports:DeleteExport",
        "bcm-data-exports:GetExecution",
        "bcm-data-exports:GetExport",
        "bcm-data-exports:GetTable",
        "bcm-data-exports:ListExecutions",
        "bcm-data-exports:ListExports",
        "bcm-data-exports:ListTables",
        "bcm-data-exports:ListTagsForResource",
        "bcm-data-exports:TagResource",
        "bcm-data-exports:UntagResource",
        "bcm-data-exports:UpdateExport"
      ]
    },
    "removedActions": {
      "AWS Billing And Cost Management Data Exports": [
        "bcm-data-exports:CreateExport",
        "bcm-data-exports:DeleteExport",
        "bcm-data-exports:GetExecution",
        "bcm-data-exports:GetExport",
        "bcm-data-exports:GetTable",
        "bcm-data-exports:ListExecutions",
        "bcm-data-exports:ListExports",
        "bcm-data-exports:ListTables",
        "bcm-data-exports:ListTagsForResource",
        "bcm-data-exports:TagResource",
        "bcm-data-exports:UntagResource",
        "bcm-data-exports:UpdateExport"
      ]
    }
  },
  {
    "dateOfChange": "2024-02-02",
    "addedServices": [
      "AWS Billing And Cost Management Data Exports"
    ],
    "removedServices": [
      "AWS Billing and Cost Management And Cost Management Data Exports"
    ],
    "addedActions": {
      "Amazon DataZone": [
        "datazone:ListEnvironmentBlueprintConfigurationSummaries"
      ],
      "Amazon Interactive Video Service": [
        "ivs:CreatePlaybackRestrictionPolicy",
        "ivs:DeletePlaybackRestrictionPolicy",
        "ivs:GetPlaybackRestrictionPolicy",
        "ivs:ListPlaybackRestrictionPolicies",
        "ivs:UpdatePlaybackRestrictionPolicy"
      ],
      "Amazon RDS": [
        "rds:CreateDBShardGroup",
        "rds:DeleteDBShardGroup",
        "rds:DescribeDBShardGroups",
        "rds:ModifyDBShardGroup",
        "rds:RebootDBShardGroup"
      ],
      "AWS Billing And Cost Management Data Exports": [
        "bcm-data-exports:CreateExport",
        "bcm-data-exports:DeleteExport",
        "bcm-data-exports:GetExecution",
        "bcm-data-exports:GetExport",
        "bcm-data-exports:GetTable",
        "bcm-data-exports:ListExecutions",
        "bcm-data-exports:ListExports",
        "bcm-data-exports:ListTables",
        "bcm-data-exports:ListTagsForResource",
        "bcm-data-exports:TagResource",
        "bcm-data-exports:UntagResource",
        "bcm-data-exports:UpdateExport"
      ]
    },
    "removedActions": {
      "AWS Billing and Cost Management And Cost Management Data Exports": [
        "bcm-data-exports:CreateExport",
        "bcm-data-exports:DeleteExport",
        "bcm-data-exports:GetExecution",
        "bcm-data-exports:GetExport",
        "bcm-data-exports:GetTable",
        "bcm-data-exports:ListExecutions",
        "bcm-data-exports:ListExports",
        "bcm-data-exports:ListTables",
        "bcm-data-exports:ListTagsForResource",
        "bcm-data-exports:TagResource",
        "bcm-data-exports:UntagResource",
        "bcm-data-exports:UpdateExport"
      ]
    }
  },
  {
    "dateOfChange": "2024-01-31",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Elemental MediaConnect": [
        "mediaconnect:DescribeFlowSourceMetadata"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-01-25",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Inspector2": [
        "inspector2:CreateCisScanConfiguration",
        "inspector2:DeleteCisScanConfiguration",
        "inspector2:GetCisScanReport",
        "inspector2:GetCisScanResultDetails",
        "inspector2:ListCisScanConfigurations",
        "inspector2:ListCisScanResultsAggregatedByChecks",
        "inspector2:ListCisScanResultsAggregatedByTargetResource",
        "inspector2:ListCisScans",
        "inspector2:SendCisSessionHealth",
        "inspector2:SendCisSessionTelemetry",
        "inspector2:StartCisSession",
        "inspector2:StopCisSession",
        "inspector2:UpdateCisScanConfiguration"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-01-23",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS CodeBuild": [
        "codebuild:BatchGetFleets",
        "codebuild:CreateFleet",
        "codebuild:DeleteFleet",
        "codebuild:ListFleets",
        "codebuild:UpdateFleet"
      ],
      "Amazon Connect Cases": [
        "cases:GetCaseAuditEvents"
      ],
      "Amazon Elastic MapReduce": [
        "elasticmapreduce:SetKeepJobFlowAliveWhenNoSteps"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-01-17",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Supply Chain": [
        "scn:CreateBillOfMaterialsImportJob",
        "scn:GetBillOfMaterialsImportJob"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-01-12",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Lake Formation": [
        "lakeformation:CreateLakeFormationIdentityCenterConfiguration",
        "lakeformation:DeleteLakeFormationIdentityCenterConfiguration",
        "lakeformation:DescribeLakeFormationIdentityCenterConfiguration",
        "lakeformation:UpdateLakeFormationIdentityCenterConfiguration"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2024-01-06",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon DynamoDB": [
        "dynamodb:GetResourcePolicy"
      ],
      "AWS IoT": [
        "iot:CreateCertificateProvider",
        "iot:DeleteCertificateProvider",
        "iot:DescribeCertificateProvider",
        "iot:ListCertificateProviders",
        "iot:UpdateCertificateProvider"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-12-30",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon AppIntegrations": [
        "app-integrations:CreateApplicationAssociation",
        "app-integrations:DeleteApplication",
        "app-integrations:DeleteApplicationAssociation",
        "app-integrations:ListApplicationAssociations"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-12-27",
    "addedServices": [
      "Amazon CloudWatch Network Monitor"
    ],
    "removedServices": [],
    "addedActions": {
      "AWS CodeCommit": [
        "codecommit:UpdateRepositoryEncryptionKey"
      ],
      "Amazon Connect": [
        "connect:AssociateUserProficiencies",
        "connect:DisassociateUserProficiencies",
        "connect:ListUserProficiencies",
        "connect:SearchContacts",
        "connect:SearchPredefinedAttributes",
        "connect:UpdateContactRoutingData",
        "connect:UpdateUserProficiencies"
      ],
      "Amazon Elastic Kubernetes Service": [
        "eks:DescribeInsight",
        "eks:ListInsights"
      ],
      "Amazon GuardDuty": [
        "guardduty:GetOrganizationStatistics"
      ],
      "Amazon RDS": [
        "rds:DescribeDBRecommendations",
        "rds:DisableHttpEndpoint",
        "rds:EnableHttpEndpoint",
        "rds:ModifyDBRecommendation"
      ],
      "Amazon SageMaker": [
        "sagemaker:DeleteCompilationJob"
      ],
      "Amazon CloudWatch Network Monitor": [
        "networkmonitor:CreateMonitor",
        "networkmonitor:CreateProbe",
        "networkmonitor:DeleteMonitor",
        "networkmonitor:DeleteProbe",
        "networkmonitor:GetMonitor",
        "networkmonitor:GetProbe",
        "networkmonitor:ListMonitors",
        "networkmonitor:ListTagsForResource",
        "networkmonitor:TagResource",
        "networkmonitor:UntagResource",
        "networkmonitor:UpdateMonitor",
        "networkmonitor:UpdateProbe"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-12-21",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon FSx": [
        "fsx:DeleteResourcePolicy",
        "fsx:GetResourcePolicy",
        "fsx:PutResourcePolicy"
      ],
      "Amazon QuickSight": [
        "quicksight:UpdateDashboardLinks"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-12-20",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Connect": [
        "connect:PauseContact",
        "connect:ResumeContact",
        "connect:TagContact",
        "connect:UntagContact"
      ],
      "Amazon Elastic Kubernetes Service": [
        "eks:AssociateAccessPolicy",
        "eks:CreateAccessEntry",
        "eks:DeleteAccessEntry",
        "eks:DescribeAccessEntry",
        "eks:DisassociateAccessPolicy",
        "eks:ListAccessEntries",
        "eks:ListAccessPolicies",
        "eks:ListAssociatedAccessPolicies",
        "eks:UpdateAccessEntry"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-12-16",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Billing Conductor": [
        "billingconductor:GetBillingGroupCostReport"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-12-15",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon EC2 Image Builder": [
        "imagebuilder:CreateWorkflow",
        "imagebuilder:DeleteWorkflow",
        "imagebuilder:GetWorkflow",
        "imagebuilder:ListWaitingWorkflowSteps",
        "imagebuilder:ListWorkflowBuildVersions",
        "imagebuilder:ListWorkflows",
        "imagebuilder:SendWorkflowStepAction"
      ],
      "Amazon Monitron": [
        "monitron:CreateProjectUserAssociation",
        "monitron:CreateUserAccessRoleAssociation",
        "monitron:DeleteProjectUserAssociation",
        "monitron:DeleteUserAccessRoleAssociation",
        "monitron:ListProjectUserAssociations",
        "monitron:ListUserAccessRoleAssociations"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-12-13",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Lex V2": [
        "lex:DescribeBotResourceGeneration",
        "lex:GenerateBotElement",
        "lex:ListBotResourceGenerations",
        "lex:StartBotResourceGeneration"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-12-12",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Cost and Usage Report": [
        "cur:ListTagsForResource",
        "cur:TagResource",
        "cur:UntagResource"
      ],
      "Amazon FinSpace": [
        "finspace:CreateKxDataview",
        "finspace:CreateKxScalingGroup",
        "finspace:CreateKxVolume",
        "finspace:DeleteKxDataview",
        "finspace:DeleteKxScalingGroup",
        "finspace:DeleteKxVolume",
        "finspace:GetKxDataview",
        "finspace:GetKxScalingGroup",
        "finspace:GetKxVolume",
        "finspace:ListKxDataviews",
        "finspace:ListKxScalingGroups",
        "finspace:ListKxVolumes",
        "finspace:UpdateKxDataview",
        "finspace:UpdateKxVolume"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-12-09",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Athena": [
        "athena:CancelQueryExecution",
        "athena:GetCatalogs",
        "athena:GetExecutionEngine",
        "athena:GetExecutionEngines",
        "athena:GetNamespace",
        "athena:GetNamespaces",
        "athena:GetQueryExecutions",
        "athena:GetTable",
        "athena:GetTables",
        "athena:RunQuery"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-12-08",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon CloudFront": [
        "cloudfront:CreateKeyValueStore",
        "cloudfront:DeleteKeyValueStore",
        "cloudfront:DescribeKeyValueStore",
        "cloudfront:ListKeyValueStores",
        "cloudfront:UpdateKeyValueStore"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-12-07",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Connect": [
        "connect:CreatePersistentContactAssociation"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-12-06",
    "addedServices": [
      "AWS Fault Injection Service"
    ],
    "removedServices": [
      "AWS Fault Injection Simulator"
    ],
    "addedActions": {
      "AWS Glue": [
        "glue:BatchGetTableOptimizer",
        "glue:CreateTableOptimizer",
        "glue:DeleteTableOptimizer",
        "glue:GetColumnStatisticsTaskRun",
        "glue:GetColumnStatisticsTaskRuns",
        "glue:GetTableOptimizer",
        "glue:ListColumnStatisticsTaskRuns",
        "glue:ListTableOptimizerRuns",
        "glue:PassConnection",
        "glue:StartColumnStatisticsTaskRun",
        "glue:StopColumnStatisticsTaskRun",
        "glue:UpdateTableOptimizer"
      ],
      "Amazon QuickSight": [
        "quicksight:DeleteIdentityPropagationConfig",
        "quicksight:ListIdentityPropagationConfigs",
        "quicksight:UpdateIdentityPropagationConfig"
      ],
      "AWS Fault Injection Service": [
        "fis:CreateExperimentTemplate",
        "fis:CreateTargetAccountConfiguration",
        "fis:DeleteExperimentTemplate",
        "fis:DeleteTargetAccountConfiguration",
        "fis:GetAction",
        "fis:GetExperiment",
        "fis:GetExperimentTargetAccountConfiguration",
        "fis:GetExperimentTemplate",
        "fis:GetTargetAccountConfiguration",
        "fis:GetTargetResourceType",
        "fis:InjectApiInternalError",
        "fis:InjectApiThrottleError",
        "fis:InjectApiUnavailableError",
        "fis:ListActions",
        "fis:ListExperimentResolvedTargets",
        "fis:ListExperimentTargetAccountConfigurations",
        "fis:ListExperimentTemplates",
        "fis:ListExperiments",
        "fis:ListTagsForResource",
        "fis:ListTargetAccountConfigurations",
        "fis:ListTargetResourceTypes",
        "fis:StartExperiment",
        "fis:StopExperiment",
        "fis:TagResource",
        "fis:UntagResource",
        "fis:UpdateExperimentTemplate",
        "fis:UpdateTargetAccountConfiguration"
      ]
    },
    "removedActions": {
      "AWS Fault Injection Simulator": [
        "fis:CreateExperimentTemplate",
        "fis:DeleteExperimentTemplate",
        "fis:GetAction",
        "fis:GetExperiment",
        "fis:GetExperimentTemplate",
        "fis:GetTargetResourceType",
        "fis:InjectApiInternalError",
        "fis:InjectApiThrottleError",
        "fis:InjectApiUnavailableError",
        "fis:ListActions",
        "fis:ListExperimentTemplates",
        "fis:ListExperiments",
        "fis:ListTagsForResource",
        "fis:ListTargetResourceTypes",
        "fis:StartExperiment",
        "fis:StopExperiment",
        "fis:TagResource",
        "fis:UntagResource",
        "fis:UpdateExperimentTemplate"
      ]
    }
  },
  {
    "dateOfChange": "2023-12-02",
    "addedServices": [
      "AWS B2B Data Interchange",
      "AWS Billing and Cost Management And Cost Management Data Exports",
      "AWS Clean Rooms ML",
      "Amazon CloudFront KeyValueStore",
      "AWS Cost Optimization Hub",
      "AWS Diagnostic tools",
      "Amazon EKS Auth",
      "AWS IAM Identity Center OIDC service",
      "Amazon InspectorScan",
      "AWS Marketplace Deployment Service",
      "Amazon Neptune Analytics",
      "AWS Network Manager Chat",
      "Amazon One Enterprise",
      "Amazon Q",
      "Amazon Q Business",
      "Amazon Q in Connect",
      "AWS re:Post Private",
      "Amazon S3 Express",
      "Amazon WorkSpaces Thin Client"
    ],
    "removedServices": [
      "Amazon Connect Wisdom"
    ],
    "addedActions": {
      "AWS Application Transformation Service": [
        "application-transformation:GetContainerization",
        "application-transformation:GetDeployment",
        "application-transformation:StartContainerization",
        "application-transformation:StartDeployment"
      ],
      "AWS AppSync": [
        "appsync:GetDataSourceIntrospection",
        "appsync:StartDataSourceIntrospection"
      ],
      "AWS Backup": [
        "backup:CreateRestoreTestingPlan",
        "backup:CreateRestoreTestingSelection",
        "backup:DeleteRestoreTestingPlan",
        "backup:DeleteRestoreTestingSelection",
        "backup:GetRestoreJobMetadata",
        "backup:GetRestoreTestingInferredMetadata",
        "backup:GetRestoreTestingPlan",
        "backup:GetRestoreTestingSelection",
        "backup:ListRestoreJobsByProtectedResource",
        "backup:ListRestoreTestingPlans",
        "backup:ListRestoreTestingSelections",
        "backup:PutRestoreValidationResult",
        "backup:UpdateRestoreTestingPlan",
        "backup:UpdateRestoreTestingSelection"
      ],
      "Amazon Bedrock": [
        "bedrock:CreateGuardrail",
        "bedrock:CreateGuardrailVersion",
        "bedrock:CreateModelEvaluationJob",
        "bedrock:CreateModelInvocationJob",
        "bedrock:DeleteAgent",
        "bedrock:DeleteAgentActionGroup",
        "bedrock:DeleteAgentAlias",
        "bedrock:DeleteAgentVersion",
        "bedrock:DeleteGuardrail",
        "bedrock:GetGuardrail",
        "bedrock:GetModelEvaluationJob",
        "bedrock:GetModelInvocationJob",
        "bedrock:ListGuardrails",
        "bedrock:ListModelEvaluationJobs",
        "bedrock:ListModelInvocationJobs",
        "bedrock:PrepareAgent",
        "bedrock:Retrieve",
        "bedrock:RetrieveAndGenerate",
        "bedrock:StopModelInvocationJob",
        "bedrock:UpdateGuardrail"
      ],
      "AWS Clean Rooms": [
        "cleanrooms:CreateConfiguredAudienceModelAssociation",
        "cleanrooms:CreatePrivacyBudgetTemplate",
        "cleanrooms:DeleteConfiguredAudienceModelAssociation",
        "cleanrooms:DeletePrivacyBudgetTemplate",
        "cleanrooms:GetCollaborationConfiguredAudienceModelAssociation",
        "cleanrooms:GetCollaborationPrivacyBudgetTemplate",
        "cleanrooms:GetConfiguredAudienceModelAssociation",
        "cleanrooms:GetPrivacyBudgetTemplate",
        "cleanrooms:ListCollaborationConfiguredAudienceModelAssociations",
        "cleanrooms:ListCollaborationPrivacyBudgetTemplates",
        "cleanrooms:ListCollaborationPrivacyBudgets",
        "cleanrooms:ListConfiguredAudienceModelAssociations",
        "cleanrooms:ListPrivacyBudgetTemplates",
        "cleanrooms:ListPrivacyBudgets",
        "cleanrooms:PreviewPrivacyImpact",
        "cleanrooms:UpdateConfiguredAudienceModelAssociation",
        "cleanrooms:UpdatePrivacyBudgetTemplate"
      ],
      "AWS CloudTrail": [
        "cloudtrail:DisableFederation",
        "cloudtrail:EnableFederation",
        "cloudtrail:GetEventDataStoreData"
      ],
      "Amazon CloudWatch": [
        "cloudwatch:BatchGetServiceLevelIndicatorReport",
        "cloudwatch:BatchGetServiceLevelObjectiveBudgetReport",
        "cloudwatch:CreateServiceLevelObjective",
        "cloudwatch:DeleteServiceLevelObjective",
        "cloudwatch:EnableTopologyDiscovery",
        "cloudwatch:GenerateQuery",
        "cloudwatch:GetService",
        "cloudwatch:GetServiceData",
        "cloudwatch:GetServiceLevelObjective",
        "cloudwatch:GetTopologyDiscoveryStatus",
        "cloudwatch:GetTopologyMap",
        "cloudwatch:ListServiceLevelObjectives",
        "cloudwatch:ListServices",
        "cloudwatch:UpdateServiceLevelObjective"
      ],
      "Amazon CloudWatch Logs": [
        "logs:CreateLogAnomalyDetector",
        "logs:DeleteLogAnomalyDetector",
        "logs:GetLogAnomalyDetector",
        "logs:ListAnomalies",
        "logs:ListLogAnomalyDetectors",
        "logs:UpdateAnomaly",
        "logs:UpdateLogAnomalyDetector"
      ],
      "Amazon CodeCatalyst": [
        "codecatalyst:AssociateIdentityCenterApplicationToSpace",
        "codecatalyst:AssociateIdentityToIdentityCenterApplication",
        "codecatalyst:BatchAssociateIdentitiesToIdentityCenterApplication",
        "codecatalyst:BatchDisassociateIdentitiesFromIdentityCenterApplication",
        "codecatalyst:CreateIdentityCenterApplication",
        "codecatalyst:CreateSpace",
        "codecatalyst:CreateSpaceAdminRoleAssignment",
        "codecatalyst:DeleteIdentityCenterApplication",
        "codecatalyst:DisassociateIdentityCenterApplicationFromSpace",
        "codecatalyst:DisassociateIdentityFromIdentityCenterApplication",
        "codecatalyst:GetIdentityCenterApplication",
        "codecatalyst:ListIdentityCenterApplications",
        "codecatalyst:ListIdentityCenterApplicationsForSpace",
        "codecatalyst:ListSpacesForIdentityCenterApplication",
        "codecatalyst:SynchronizeIdentityCenterApplication",
        "codecatalyst:UpdateIdentityCenterApplication"
      ],
      "AWS CodeStar Connections": [
        "codestar-connections:CreateRepositoryLink",
        "codestar-connections:CreateSyncConfiguration",
        "codestar-connections:DeleteRepositoryLink",
        "codestar-connections:DeleteSyncConfiguration",
        "codestar-connections:GetRepositoryLink",
        "codestar-connections:GetRepositorySyncStatus",
        "codestar-connections:GetResourceSyncStatus",
        "codestar-connections:GetSyncBlockerSummary",
        "codestar-connections:GetSyncConfiguration",
        "codestar-connections:ListRepositoryLinks",
        "codestar-connections:ListRepositorySyncDefinitions",
        "codestar-connections:ListSyncConfigurations",
        "codestar-connections:PassRepository",
        "codestar-connections:UpdateRepositoryLink",
        "codestar-connections:UpdateSyncBlocker",
        "codestar-connections:UpdateSyncConfiguration"
      ],
      "Amazon CodeWhisperer": [
        "codewhisperer:ListCustomizationVersions"
      ],
      "Amazon Connect": [
        "connect:AssociateFlow",
        "connect:DisassociateFlow",
        "connect:GetFlowAssociation",
        "connect:ImportPhoneNumber",
        "connect:ListFlowAssociations",
        "connect:ListRealtimeContactAnalysisSegmentsV2",
        "connect:SendChatIntegrationEvent",
        "connect:StartWebRTCContact"
      ],
      "Amazon Connect Customer Profiles": [
        "profile:DetectProfileObjectType"
      ],
      "AWS Control Tower": [
        "controltower:CreateLandingZone",
        "controltower:GetLandingZone",
        "controltower:GetLandingZoneOperation",
        "controltower:ListLandingZones",
        "controltower:ResetLandingZone",
        "controltower:UpdateEnabledControl",
        "controltower:UpdateLandingZone"
      ],
      "Amazon DataZone": [
        "datazone:GetMetadataGenerationRun",
        "datazone:ListMetadataGenerationRuns",
        "datazone:StartMetadataGenerationRun",
        "datazone:StopMetadataGenerationRun"
      ],
      "Amazon Detective": [
        "detective:GetInvestigation",
        "detective:InvokeAssistant",
        "detective:ListIndicators",
        "detective:ListInvestigations",
        "detective:StartInvestigation",
        "detective:UpdateInvestigationState"
      ],
      "Amazon EC2": [
        "ec2:AssociateIpamByoasn",
        "ec2:DeprovisionIpamByoasn",
        "ec2:DescribeCapacityBlockOfferings",
        "ec2:DescribeInstanceTopology",
        "ec2:DescribeIpamByoasn",
        "ec2:DescribeLockedSnapshots",
        "ec2:DisableSnapshotBlockPublicAccess",
        "ec2:DisassociateIpamByoasn",
        "ec2:EnableSnapshotBlockPublicAccess",
        "ec2:GetIpamDiscoveredPublicAddresses",
        "ec2:GetSnapshotBlockPublicAccessState",
        "ec2:LockSnapshot",
        "ec2:ProvisionIpamByoasn",
        "ec2:PurchaseCapacityBlock",
        "ec2:UnlockSnapshot"
      ],
      "Amazon EC2 Image Builder": [
        "imagebuilder:CancelLifecycleExecution",
        "imagebuilder:CreateLifecyclePolicy",
        "imagebuilder:DeleteLifecyclePolicy",
        "imagebuilder:GetLifecycleExecution",
        "imagebuilder:GetLifecyclePolicy",
        "imagebuilder:ListLifecycleExecutionResources",
        "imagebuilder:ListLifecycleExecutions",
        "imagebuilder:ListLifecyclePolicies",
        "imagebuilder:StartResourceStateUpdate",
        "imagebuilder:UpdateLifecyclePolicy"
      ],
      "Amazon Elastic Container Registry": [
        "ecr:CreateRepositoryCreationTemplate",
        "ecr:DeleteRepositoryCreationTemplate",
        "ecr:DescribeRepositoryCreationTemplate",
        "ecr:UpdatePullThroughCacheRule",
        "ecr:ValidatePullThroughCacheRule"
      ],
      "Amazon Elastic File System": [
        "elasticfilesystem:UpdateFileSystemProtection"
      ],
      "Amazon Elastic Kubernetes Service": [
        "eks:CreatePodIdentityAssociation",
        "eks:DeletePodIdentityAssociation",
        "eks:DescribePodIdentityAssociation",
        "eks:ListPodIdentityAssociations",
        "eks:UpdatePodIdentityAssociation"
      ],
      "AWS Elastic Load Balancing V2": [
        "elasticloadbalancing:AddTrustStoreRevocations",
        "elasticloadbalancing:CreateTrustStore",
        "elasticloadbalancing:DeleteTrustStore",
        "elasticloadbalancing:DescribeTrustStoreAssociations",
        "elasticloadbalancing:DescribeTrustStoreRevocations",
        "elasticloadbalancing:DescribeTrustStores",
        "elasticloadbalancing:GetTrustStoreCaCertificatesBundle",
        "elasticloadbalancing:GetTrustStoreRevocationContent",
        "elasticloadbalancing:ModifyTrustStore",
        "elasticloadbalancing:RemoveTrustStoreRevocations"
      ],
      "Amazon ElastiCache": [
        "elasticache:CopyServerlessCacheSnapshot",
        "elasticache:CreateServerlessCache",
        "elasticache:CreateServerlessCacheSnapshot",
        "elasticache:DeleteServerlessCache",
        "elasticache:DeleteServerlessCacheSnapshot",
        "elasticache:DescribeServerlessCacheSnapshots",
        "elasticache:DescribeServerlessCaches",
        "elasticache:ExportServerlessCacheSnapshot",
        "elasticache:InterruptClusterAzPower",
        "elasticache:ModifyServerlessCache"
      ],
      "Amazon EventBridge": [
        "events:RetrieveConnectionCredentials"
      ],
      "Amazon FSx": [
        "fsx:CopySnapshotAndUpdateVolume",
        "fsx:DescribeSharedVpcConfiguration",
        "fsx:UpdateSharedVpcConfiguration"
      ],
      "AWS Glue": [
        "glue:GetCompletion",
        "glue:SendFeedback",
        "glue:StartCompletion"
      ],
      "AWS IAM Access Analyzer": [
        "access-analyzer:CheckAccessNotGranted",
        "access-analyzer:CheckNoNewAccess",
        "access-analyzer:GetFindingsStatistics"
      ],
      "AWS IAM Identity Center (successor to AWS Single Sign-On)": [
        "sso:CreateApplication",
        "sso:CreateApplicationAssignment",
        "sso:CreateInstance",
        "sso:CreateTrustedTokenIssuer",
        "sso:DeleteApplication",
        "sso:DeleteApplicationAccessScope",
        "sso:DeleteApplicationAssignment",
        "sso:DeleteApplicationAuthenticationMethod",
        "sso:DeleteApplicationGrant",
        "sso:DeleteInstance",
        "sso:DeleteTrustedTokenIssuer",
        "sso:DescribeApplication",
        "sso:DescribeApplicationAssignment",
        "sso:DescribeApplicationProvider",
        "sso:DescribeInstance",
        "sso:DescribeTrustedTokenIssuer",
        "sso:GetApplicationAccessScope",
        "sso:GetApplicationAssignmentConfiguration",
        "sso:GetApplicationAuthenticationMethod",
        "sso:GetApplicationGrant",
        "sso:ListAccountAssignmentsForPrincipal",
        "sso:ListApplicationAccessScopes",
        "sso:ListApplicationAssignments",
        "sso:ListApplicationAssignmentsForPrincipal",
        "sso:ListApplicationAuthenticationMethods",
        "sso:ListApplicationGrants",
        "sso:ListApplicationProviders",
        "sso:ListTrustedTokenIssuers",
        "sso:PutApplicationAccessScope",
        "sso:PutApplicationAuthenticationMethod",
        "sso:PutApplicationGrant",
        "sso:UpdateApplication",
        "sso:UpdateInstance",
        "sso:UpdateTrustedTokenIssuer"
      ],
      "Amazon Interactive Video Service": [
        "ivs:CreateEncoderConfiguration",
        "ivs:CreateStorageConfiguration",
        "ivs:DeleteEncoderConfiguration",
        "ivs:DeleteStorageConfiguration",
        "ivs:GetComposition",
        "ivs:GetEncoderConfiguration",
        "ivs:GetStorageConfiguration",
        "ivs:ListCompositions",
        "ivs:ListEncoderConfigurations",
        "ivs:ListStorageConfigurations",
        "ivs:StartComposition",
        "ivs:StopComposition"
      ],
      "AWS IoT SiteWise": [
        "iotsitewise:CreateAssetModelCompositeModel",
        "iotsitewise:DeleteAssetModelCompositeModel",
        "iotsitewise:DescribeAction",
        "iotsitewise:DescribeAssetCompositeModel",
        "iotsitewise:DescribeAssetModelCompositeModel",
        "iotsitewise:EnableSiteWiseIntegration",
        "iotsitewise:ExecuteAction",
        "iotsitewise:ExecuteQuery",
        "iotsitewise:ListActions",
        "iotsitewise:ListAssetModelCompositeModels",
        "iotsitewise:ListCompositionRelationships",
        "iotsitewise:UpdateAssetModelCompositeModel"
      ],
      "AWS IoT TwinMaker": [
        "iottwinmaker:CancelMetadataTransferJob",
        "iottwinmaker:CreateMetadataTransferJob",
        "iottwinmaker:GetMetadataTransferJob",
        "iottwinmaker:ListComponents",
        "iottwinmaker:ListMetadataTransferJobs",
        "iottwinmaker:ListProperties"
      ],
      "Amazon Kinesis Data Streams": [
        "kinesis:DeleteResourcePolicy",
        "kinesis:GetResourcePolicy",
        "kinesis:PutResourcePolicy"
      ],
      "Amazon Managed Blockchain": [
        "managedblockchain:InvokeRpcPolygonMainnet",
        "managedblockchain:InvokeRpcPolygonMumbaiTestnet"
      ],
      "Amazon Managed Service for Prometheus": [
        "aps:CreateScraper",
        "aps:DeleteScraper",
        "aps:DescribeScraper",
        "aps:GetDefaultScraperConfiguration",
        "aps:ListScrapers"
      ],
      "Amazon OpenSearch Service": [
        "es:AddDataSource",
        "es:CancelDomainConfigChange",
        "es:DeleteDataSource",
        "es:GetDataSource",
        "es:ListDataSources",
        "es:UpdateDataSource"
      ],
      "Amazon Personalize": [
        "personalize:GetActionRecommendations",
        "personalize:PutActionInteractions",
        "personalize:PutActions"
      ],
      "Amazon Pinpoint SMS Voice V2": [
        "sms-voice:CreateRegistration",
        "sms-voice:CreateRegistrationAssociation",
        "sms-voice:CreateRegistrationAttachment",
        "sms-voice:CreateRegistrationVersion",
        "sms-voice:CreateVerifiedDestinationNumber",
        "sms-voice:DeleteRegistration",
        "sms-voice:DeleteRegistrationAttachment",
        "sms-voice:DeleteRegistrationFieldValue",
        "sms-voice:DeleteVerifiedDestinationNumber",
        "sms-voice:DescribeRegistrationAttachments",
        "sms-voice:DescribeRegistrationFieldDefinitions",
        "sms-voice:DescribeRegistrationFieldValues",
        "sms-voice:DescribeRegistrationSectionDefinitions",
        "sms-voice:DescribeRegistrationTypeDefinitions",
        "sms-voice:DescribeRegistrationVersions",
        "sms-voice:DescribeRegistrations",
        "sms-voice:DescribeVerifiedDestinationNumbers",
        "sms-voice:DiscardRegistrationVersion",
        "sms-voice:ListRegistrationAssociations",
        "sms-voice:PutRegistrationFieldValue",
        "sms-voice:ReleaseSenderId",
        "sms-voice:RequestSenderId",
        "sms-voice:SendDestinationNumberVerificationCode",
        "sms-voice:SubmitRegistrationVersion",
        "sms-voice:UpdateSenderId",
        "sms-voice:VerifyDestinationNumber"
      ],
      "Amazon QuickSight": [
        "quicksight:CreateRoleMembership",
        "quicksight:DeleteRoleCustomPermission",
        "quicksight:DeleteRoleMembership",
        "quicksight:DescribeRoleCustomPermission",
        "quicksight:ListRoleMemberships",
        "quicksight:UpdateRoleCustomPermission"
      ],
      "Amazon Redshift": [
        "redshift:CreateRedshiftIdcApplication",
        "redshift:DeleteRedshiftIdcApplication",
        "redshift:DescribeRedshiftIdcApplications",
        "redshift:ModifyRedshiftIdcApplication"
      ],
      "Amazon Redshift Serverless": [
        "redshift-serverless:CreateScheduledAction",
        "redshift-serverless:CreateSnapshotCopyConfiguration",
        "redshift-serverless:DeleteScheduledAction",
        "redshift-serverless:DeleteSnapshotCopyConfiguration",
        "redshift-serverless:GetScheduledAction",
        "redshift-serverless:ListScheduledActions",
        "redshift-serverless:ListSnapshotCopyConfigurations",
        "redshift-serverless:RestoreTableFromRecoveryPoint",
        "redshift-serverless:UpdateScheduledAction",
        "redshift-serverless:UpdateSnapshotCopyConfiguration"
      ],
      "Amazon Route 53 Application Recovery Controller - Zonal Shift": [
        "arc-zonal-shift:CreatePracticeRunConfiguration",
        "arc-zonal-shift:DeletePracticeRunConfiguration",
        "arc-zonal-shift:ListAutoshifts",
        "arc-zonal-shift:UpdatePracticeRunConfiguration",
        "arc-zonal-shift:UpdateZonalAutoshiftConfiguration"
      ],
      "Amazon S3": [
        "s3:AssociateAccessGrantsIdentityCenter",
        "s3:CreateAccessGrant",
        "s3:CreateAccessGrantsInstance",
        "s3:CreateAccessGrantsLocation",
        "s3:DeleteAccessGrant",
        "s3:DeleteAccessGrantsInstance",
        "s3:DeleteAccessGrantsInstanceResourcePolicy",
        "s3:DeleteAccessGrantsLocation",
        "s3:DissociateAccessGrantsIdentityCenter",
        "s3:GetAccessGrant",
        "s3:GetAccessGrantsInstance",
        "s3:GetAccessGrantsInstanceForPrefix",
        "s3:GetAccessGrantsInstanceResourcePolicy",
        "s3:GetAccessGrantsLocation",
        "s3:GetDataAccess",
        "s3:ListAccessGrants",
        "s3:ListAccessGrantsInstances",
        "s3:ListAccessGrantsLocations",
        "s3:PutAccessGrantsInstanceResourcePolicy",
        "s3:UpdateAccessGrantsLocation"
      ],
      "Amazon SageMaker": [
        "sagemaker:CreateCluster",
        "sagemaker:DeleteCluster",
        "sagemaker:DescribeCluster",
        "sagemaker:DescribeClusterNode",
        "sagemaker:ListClusterNodes",
        "sagemaker:ListClusters",
        "sagemaker:UpdateCluster"
      ],
      "AWS Secrets Manager": [
        "secretsmanager:BatchGetSecretValue"
      ],
      "AWS Security Hub": [
        "securityhub:BatchGetConfigurationPolicyAssociations",
        "securityhub:CreateConfigurationPolicy",
        "securityhub:DeleteConfigurationPolicy",
        "securityhub:GetConfigurationPolicy",
        "securityhub:GetConfigurationPolicyAssociation",
        "securityhub:GetSecurityControlDefinition",
        "securityhub:ListConfigurationPolicies",
        "securityhub:ListConfigurationPolicyAssociations",
        "securityhub:StartConfigurationPolicyAssociation",
        "securityhub:StartConfigurationPolicyDisassociation",
        "securityhub:UpdateConfigurationPolicy",
        "securityhub:UpdateSecurityControl"
      ],
      "AWS Security Token Service": [
        "sts:SetContext"
      ],
      "AWS SQL Workbench": [
        "sqlworkbench:GetQSqlRecommendations",
        "sqlworkbench:UpdateAccountQSqlSettings"
      ],
      "AWS Step Functions": [
        "states:InvokeHTTPEndpoint",
        "states:RevealSecrets",
        "states:TestState"
      ],
      "Amazon Transcribe": [
        "transcribe:DeleteMedicalScribeJob",
        "transcribe:GetMedicalScribeJob",
        "transcribe:ListMedicalScribeJobs",
        "transcribe:StartMedicalScribeJob"
      ],
      "AWS Trusted Advisor": [
        "trustedadvisor:GetOrganizationRecommendation",
        "trustedadvisor:GetRecommendation",
        "trustedadvisor:ListChecks",
        "trustedadvisor:ListOrganizationRecommendationAccounts",
        "trustedadvisor:ListOrganizationRecommendationResources",
        "trustedadvisor:ListOrganizationRecommendations",
        "trustedadvisor:ListRecommendationResources",
        "trustedadvisor:ListRecommendations",
        "trustedadvisor:UpdateOrganizationRecommendationLifecycle",
        "trustedadvisor:UpdateRecommendationLifecycle"
      ],
      "AWS B2B Data Interchange": [
        "b2bi:CreateCapability",
        "b2bi:CreatePartnership",
        "b2bi:CreateProfile",
        "b2bi:CreateTransformer",
        "b2bi:DeleteCapability",
        "b2bi:DeletePartnership",
        "b2bi:DeleteProfile",
        "b2bi:DeleteTransformer",
        "b2bi:GetCapability",
        "b2bi:GetPartnership",
        "b2bi:GetProfile",
        "b2bi:GetTransformer",
        "b2bi:GetTransformerJob",
        "b2bi:ListCapabilities",
        "b2bi:ListPartnerships",
        "b2bi:ListProfiles",
        "b2bi:ListTagsForResource",
        "b2bi:ListTransformers",
        "b2bi:StartTransformerJob",
        "b2bi:TagResource",
        "b2bi:TestMapping",
        "b2bi:TestParsing",
        "b2bi:UntagResource",
        "b2bi:UpdateCapability",
        "b2bi:UpdatePartnership",
        "b2bi:UpdateProfile",
        "b2bi:UpdateTransformer"
      ],
      "AWS Billing and Cost Management And Cost Management Data Exports": [
        "bcm-data-exports:CreateExport",
        "bcm-data-exports:DeleteExport",
        "bcm-data-exports:GetExecution",
        "bcm-data-exports:GetExport",
        "bcm-data-exports:GetTable",
        "bcm-data-exports:ListExecutions",
        "bcm-data-exports:ListExports",
        "bcm-data-exports:ListTables",
        "bcm-data-exports:ListTagsForResource",
        "bcm-data-exports:TagResource",
        "bcm-data-exports:UntagResource",
        "bcm-data-exports:UpdateExport"
      ],
      "AWS Clean Rooms ML": [
        "cleanrooms-ml:CreateAudienceModel",
        "cleanrooms-ml:CreateConfiguredAudienceModel",
        "cleanrooms-ml:CreateTrainingDataset",
        "cleanrooms-ml:DeleteAudienceGenerationJob",
        "cleanrooms-ml:DeleteAudienceModel",
        "cleanrooms-ml:DeleteConfiguredAudienceModel",
        "cleanrooms-ml:DeleteConfiguredAudienceModelPolicy",
        "cleanrooms-ml:DeleteTrainingDataset",
        "cleanrooms-ml:GetAudienceGenerationJob",
        "cleanrooms-ml:GetAudienceModel",
        "cleanrooms-ml:GetConfiguredAudienceModel",
        "cleanrooms-ml:GetConfiguredAudienceModelPolicy",
        "cleanrooms-ml:GetTrainingDataset",
        "cleanrooms-ml:ListAudienceExportJobs",
        "cleanrooms-ml:ListAudienceGenerationJobs",
        "cleanrooms-ml:ListAudienceModels",
        "cleanrooms-ml:ListConfiguredAudienceModels",
        "cleanrooms-ml:ListTagsForResource",
        "cleanrooms-ml:ListTrainingDatasets",
        "cleanrooms-ml:PutConfiguredAudienceModelPolicy",
        "cleanrooms-ml:StartAudienceExportJob",
        "cleanrooms-ml:StartAudienceGenerationJob",
        "cleanrooms-ml:TagResource",
        "cleanrooms-ml:UnTagResource",
        "cleanrooms-ml:UpdateConfiguredAudienceModel"
      ],
      "Amazon CloudFront KeyValueStore": [
        "cloudfront-keyvaluestore:DeleteKey",
        "cloudfront-keyvaluestore:DescribeKeyValueStore",
        "cloudfront-keyvaluestore:GetKey",
        "cloudfront-keyvaluestore:ListKeys",
        "cloudfront-keyvaluestore:PutKey",
        "cloudfront-keyvaluestore:UpdateKeys"
      ],
      "AWS Cost Optimization Hub": [
        "cost-optimization-hub:GetPreferences",
        "cost-optimization-hub:GetRecommendation",
        "cost-optimization-hub:ListEnrollmentStatuses",
        "cost-optimization-hub:ListRecommendationSummaries",
        "cost-optimization-hub:ListRecommendations",
        "cost-optimization-hub:UpdateEnrollmentStatus",
        "cost-optimization-hub:UpdatePreferences"
      ],
      "AWS Diagnostic tools": [
        "ts:GetExecution",
        "ts:GetExecutionOutput",
        "ts:GetTool",
        "ts:ListExecutions",
        "ts:ListTagsForResource",
        "ts:ListTools",
        "ts:StartExecution",
        "ts:TagResource",
        "ts:UntagResource"
      ],
      "Amazon EKS Auth": [
        "eks-auth:AssumeRoleForPodIdentity"
      ],
      "AWS IAM Identity Center OIDC service": [
        "sso-oauth:CreateTokenWithIAM"
      ],
      "Amazon InspectorScan": [
        "inspector-scan:ScanSbom"
      ],
      "AWS Marketplace Deployment Service": [
        "aws-marketplace:ListTagsForResource",
        "aws-marketplace:PutDeploymentParameter",
        "aws-marketplace:TagResource",
        "aws-marketplace:UntagResource"
      ],
      "Amazon Neptune Analytics": [
        "neptune-graph:CancelImportTask",
        "neptune-graph:CancelQuery",
        "neptune-graph:CreateGraph",
        "neptune-graph:CreateGraphSnapshot",
        "neptune-graph:CreateGraphUsingImportTask",
        "neptune-graph:CreatePrivateGraphEndpoint",
        "neptune-graph:DeleteDataViaQuery",
        "neptune-graph:DeleteGraph",
        "neptune-graph:DeleteGraphSnapshot",
        "neptune-graph:DeletePrivateGraphEndpoint",
        "neptune-graph:GetEngineStatus",
        "neptune-graph:GetGraph",
        "neptune-graph:GetGraphSnapshot",
        "neptune-graph:GetGraphSummary",
        "neptune-graph:GetImportTask",
        "neptune-graph:GetPrivateGraphEndpoint",
        "neptune-graph:GetQueryStatus",
        "neptune-graph:GetStatisticsStatus",
        "neptune-graph:ListGraphSnapshots",
        "neptune-graph:ListGraphs",
        "neptune-graph:ListImportTasks",
        "neptune-graph:ListPrivateGraphEndpoints",
        "neptune-graph:ListQueries",
        "neptune-graph:ListTagsForResource",
        "neptune-graph:ReadDataViaQuery",
        "neptune-graph:ResetGraph",
        "neptune-graph:RestoreGraphFromSnapshot",
        "neptune-graph:TagResource",
        "neptune-graph:UntagResource",
        "neptune-graph:UpdateGraph",
        "neptune-graph:WriteDataViaQuery"
      ],
      "AWS Network Manager Chat": [
        "networkmanager-chat:CancelMessageResponse",
        "networkmanager-chat:CreateConversation",
        "networkmanager-chat:DeleteConversation",
        "networkmanager-chat:ListConversationMessages",
        "networkmanager-chat:ListConversations",
        "networkmanager-chat:NotifyConversationIsActive",
        "networkmanager-chat:SendConversationMessage"
      ],
      "Amazon One Enterprise": [
        "one:CreateDeviceActivationQrCode",
        "one:CreateDeviceConfigurationTemplate",
        "one:CreateDeviceInstance",
        "one:CreateDeviceInstanceConfiguration",
        "one:CreateSite",
        "one:DeleteAssociatedDevice",
        "one:DeleteDeviceConfigurationTemplate",
        "one:DeleteDeviceInstance",
        "one:DeleteSite",
        "one:DeleteUser",
        "one:GetDeviceConfigurationTemplate",
        "one:GetDeviceInstance",
        "one:GetDeviceInstanceConfiguration",
        "one:GetSite",
        "one:GetSiteAddress",
        "one:ListDeviceConfigurationTemplates",
        "one:ListDeviceInstances",
        "one:ListSites",
        "one:ListTagsForResource",
        "one:ListUsers",
        "one:RebootDevice",
        "one:TagResource",
        "one:UntagResource",
        "one:UpdateDeviceConfigurationTemplate",
        "one:UpdateDeviceInstance",
        "one:UpdateSite",
        "one:UpdateSiteAddress"
      ],
      "Amazon Q": [
        "q:GetConversation",
        "q:GetTroubleshootingResults",
        "q:SendMessage",
        "q:StartConversation",
        "q:StartTroubleshootingAnalysis",
        "q:StartTroubleshootingResolutionExplanation"
      ],
      "Amazon Q Business": [
        "qbusiness:AddUserLicenses",
        "qbusiness:BatchDeleteDocument",
        "qbusiness:BatchPutDocument",
        "qbusiness:Chat",
        "qbusiness:ChatSync",
        "qbusiness:CreateApplication",
        "qbusiness:CreateDataSource",
        "qbusiness:CreateIndex",
        "qbusiness:CreateLicense",
        "qbusiness:CreatePlugin",
        "qbusiness:CreateRetriever",
        "qbusiness:CreateUser",
        "qbusiness:CreateWebExperience",
        "qbusiness:DeleteApplication",
        "qbusiness:DeleteChatControlsConfiguration",
        "qbusiness:DeleteConversation",
        "qbusiness:DeleteDataSource",
        "qbusiness:DeleteGroup",
        "qbusiness:DeleteIndex",
        "qbusiness:DeletePlugin",
        "qbusiness:DeleteRetriever",
        "qbusiness:DeleteUser",
        "qbusiness:DeleteWebExperience",
        "qbusiness:GetApplication",
        "qbusiness:GetChatControlsConfiguration",
        "qbusiness:GetDataSource",
        "qbusiness:GetGroup",
        "qbusiness:GetIndex",
        "qbusiness:GetLicense",
        "qbusiness:GetPlugin",
        "qbusiness:GetRetriever",
        "qbusiness:GetUser",
        "qbusiness:GetWebExperience",
        "qbusiness:ListApplications",
        "qbusiness:ListConversations",
        "qbusiness:ListDataSourceSyncJobs",
        "qbusiness:ListDataSources",
        "qbusiness:ListDocuments",
        "qbusiness:ListGroups",
        "qbusiness:ListIndices",
        "qbusiness:ListMessages",
        "qbusiness:ListPlugins",
        "qbusiness:ListRetrievers",
        "qbusiness:ListTagsForResource",
        "qbusiness:ListUserLicenses",
        "qbusiness:ListWebExperiences",
        "qbusiness:PutFeedback",
        "qbusiness:PutGroup",
        "qbusiness:RemoveUserLicenses",
        "qbusiness:StartDataSourceSyncJob",
        "qbusiness:StopDataSourceSyncJob",
        "qbusiness:TagResource",
        "qbusiness:UntagResource",
        "qbusiness:UpdateApplication",
        "qbusiness:UpdateChatControlsConfiguration",
        "qbusiness:UpdateDataSource",
        "qbusiness:UpdateIndex",
        "qbusiness:UpdatePlugin",
        "qbusiness:UpdateRetriever",
        "qbusiness:UpdateUser",
        "qbusiness:UpdateWebExperience"
      ],
      "Amazon Q in Connect": [
        "wisdom:CreateAssistant",
        "wisdom:CreateAssistantAssociation",
        "wisdom:CreateContent",
        "wisdom:CreateKnowledgeBase",
        "wisdom:CreateQuickResponse",
        "wisdom:CreateSession",
        "wisdom:DeleteAssistant",
        "wisdom:DeleteAssistantAssociation",
        "wisdom:DeleteContent",
        "wisdom:DeleteImportJob",
        "wisdom:DeleteKnowledgeBase",
        "wisdom:DeleteQuickResponse",
        "wisdom:GetAssistant",
        "wisdom:GetAssistantAssociation",
        "wisdom:GetContent",
        "wisdom:GetContentSummary",
        "wisdom:GetImportJob",
        "wisdom:GetKnowledgeBase",
        "wisdom:GetQuickResponse",
        "wisdom:GetRecommendations",
        "wisdom:GetSession",
        "wisdom:ListAssistantAssociations",
        "wisdom:ListAssistants",
        "wisdom:ListContents",
        "wisdom:ListImportJobs",
        "wisdom:ListKnowledgeBases",
        "wisdom:ListQuickResponses",
        "wisdom:ListTagsForResource",
        "wisdom:NotifyRecommendationsReceived",
        "wisdom:PutFeedback",
        "wisdom:QueryAssistant",
        "wisdom:RemoveKnowledgeBaseTemplateUri",
        "wisdom:SearchContent",
        "wisdom:SearchQuickResponses",
        "wisdom:SearchSessions",
        "wisdom:StartContentUpload",
        "wisdom:StartImportJob",
        "wisdom:TagResource",
        "wisdom:UntagResource",
        "wisdom:UpdateContent",
        "wisdom:UpdateKnowledgeBaseTemplateUri",
        "wisdom:UpdateQuickResponse"
      ],
      "AWS re:Post Private": [
        "repostspace:CreateSpace",
        "repostspace:DeleteSpace",
        "repostspace:DeregisterAdmin",
        "repostspace:GetSpace",
        "repostspace:ListSpaces",
        "repostspace:ListTagsForResource",
        "repostspace:RegisterAdmin",
        "repostspace:SendInvites",
        "repostspace:TagResource",
        "repostspace:UntagResource",
        "repostspace:UpdateSpace"
      ],
      "Amazon S3 Express": [
        "s3express:CreateBucket",
        "s3express:CreateSession",
        "s3express:DeleteBucket",
        "s3express:DeleteBucketPolicy",
        "s3express:GetBucketPolicy",
        "s3express:ListAllMyDirectoryBuckets",
        "s3express:PutBucketPolicy"
      ],
      "Amazon WorkSpaces Thin Client": [
        "thinclient:CreateEnvironment",
        "thinclient:DeleteDevice",
        "thinclient:DeleteEnvironment",
        "thinclient:DeregisterDevice",
        "thinclient:GetDevice",
        "thinclient:GetEnvironment",
        "thinclient:GetSoftwareSet",
        "thinclient:ListDeviceSessions",
        "thinclient:ListDevices",
        "thinclient:ListEnvironments",
        "thinclient:ListSoftwareSets",
        "thinclient:ListTagsForResource",
        "thinclient:TagResource",
        "thinclient:UntagResource",
        "thinclient:UpdateDevice",
        "thinclient:UpdateEnvironment",
        "thinclient:UpdateSoftwareSet"
      ]
    },
    "removedActions": {
      "Amazon Bedrock": [
        "bedrock:CreateAgentDraftSnapshot",
        "bedrock:QueryKnowledgeBase"
      ],
      "Amazon Connect Wisdom": [
        "wisdom:CreateAssistant",
        "wisdom:CreateAssistantAssociation",
        "wisdom:CreateContent",
        "wisdom:CreateKnowledgeBase",
        "wisdom:CreateQuickResponse",
        "wisdom:CreateSession",
        "wisdom:DeleteAssistant",
        "wisdom:DeleteAssistantAssociation",
        "wisdom:DeleteContent",
        "wisdom:DeleteImportJob",
        "wisdom:DeleteKnowledgeBase",
        "wisdom:DeleteQuickResponse",
        "wisdom:GetAssistant",
        "wisdom:GetAssistantAssociation",
        "wisdom:GetContent",
        "wisdom:GetContentSummary",
        "wisdom:GetImportJob",
        "wisdom:GetKnowledgeBase",
        "wisdom:GetQuickResponse",
        "wisdom:GetRecommendations",
        "wisdom:GetSession",
        "wisdom:ListAssistantAssociations",
        "wisdom:ListAssistants",
        "wisdom:ListContents",
        "wisdom:ListImportJobs",
        "wisdom:ListKnowledgeBases",
        "wisdom:ListQuickResponses",
        "wisdom:ListTagsForResource",
        "wisdom:NotifyRecommendationsReceived",
        "wisdom:PutFeedback",
        "wisdom:QueryAssistant",
        "wisdom:RemoveKnowledgeBaseTemplateUri",
        "wisdom:SearchContent",
        "wisdom:SearchQuickResponses",
        "wisdom:SearchSessions",
        "wisdom:StartContentUpload",
        "wisdom:StartImportJob",
        "wisdom:TagResource",
        "wisdom:UntagResource",
        "wisdom:UpdateContent",
        "wisdom:UpdateKnowledgeBaseTemplateUri",
        "wisdom:UpdateQuickResponse"
      ]
    }
  },
  {
    "dateOfChange": "2023-11-17",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Backup": [
        "backup:ListBackupJobSummaries",
        "backup:ListCopyJobSummaries",
        "backup:ListRestoreJobSummaries"
      ],
      "Amazon Connect Wisdom": [
        "wisdom:PutFeedback"
      ],
      "AWS Control Tower": [
        "controltower:ListTagsForResource",
        "controltower:TagResource",
        "controltower:UntagResource"
      ],
      "AWS Cost Explorer Service": [
        "ce:GetApproximateUsageRecords"
      ],
      "Amazon FinSpace": [
        "finspace:UpdateKxClusterCodeConfiguration"
      ],
      "Amazon Redshift": [
        "redshift:DeleteResourcePolicy",
        "redshift:DescribeInboundIntegrations",
        "redshift:GetResourcePolicy",
        "redshift:PutResourcePolicy"
      ],
      "AWS Resource Explorer": [
        "resource-explorer-2:GetAccountLevelServiceConfiguration",
        "resource-explorer-2:ListIndexesForMembers"
      ],
      "Amazon S3": [
        "s3:CreateStorageLensGroup",
        "s3:DeleteStorageLensGroup",
        "s3:GetStorageLensGroup",
        "s3:ListStorageLensGroups",
        "s3:ListTagsForResource",
        "s3:TagResource",
        "s3:UntagResource",
        "s3:UpdateStorageLensGroup"
      ],
      "AWS Step Functions": [
        "states:RedriveExecution"
      ],
      "AWS Systems Manager Incident Manager": [
        "ssm-incidents:BatchGetIncidentFindings",
        "ssm-incidents:ListIncidentFindings"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-11-16",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon CodeWhisperer": [
        "codewhisperer:AllowVendedLogDeliveryForResource"
      ],
      "AWS Launch Wizard": [
        "launchwizard:CreateDeployment",
        "launchwizard:DeleteDeployment",
        "launchwizard:GetDeployment",
        "launchwizard:GetResourceRecommendation",
        "launchwizard:GetSettingsSet",
        "launchwizard:GetWorkload",
        "launchwizard:GetWorkloadAsset",
        "launchwizard:ListAllowedResources",
        "launchwizard:ListDeploymentEvents",
        "launchwizard:ListDeployments",
        "launchwizard:ListResourceCostEstimates",
        "launchwizard:ListWorkloadDeploymentPatterns",
        "launchwizard:PutSettingsSet"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-11-14",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Resource Groups": [
        "resource-groups:AssociateResource",
        "resource-groups:DisassociateResource"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-11-11",
    "addedServices": [
      "AWS Partner central account management"
    ],
    "removedServices": [],
    "addedActions": {
      "Amazon CloudWatch Logs": [
        "logs:CreateDelivery",
        "logs:DeleteDelivery",
        "logs:DeleteDeliveryDestination",
        "logs:DeleteDeliveryDestinationPolicy",
        "logs:DeleteDeliverySource",
        "logs:DescribeDeliveries",
        "logs:DescribeDeliveryDestinations",
        "logs:DescribeDeliverySources",
        "logs:GetDelivery",
        "logs:GetDeliveryDestination",
        "logs:GetDeliveryDestinationPolicy",
        "logs:GetDeliverySource",
        "logs:PutDeliveryDestination",
        "logs:PutDeliveryDestinationPolicy",
        "logs:PutDeliverySource"
      ],
      "Amazon Comprehend": [
        "comprehend:DetectToxicContent"
      ],
      "Amazon EC2": [
        "ec2:GetSecurityGroupsForVpc",
        "ec2:InjectApiError"
      ],
      "Amazon Elastic Kubernetes Service": [
        "eks:CreateEksAnywhereSubscription",
        "eks:DeleteEksAnywhereSubscription",
        "eks:DescribeEksAnywhereSubscription",
        "eks:ListEksAnywhereSubscriptions",
        "eks:UpdateEksAnywhereSubscription"
      ],
      "Amazon RDS": [
        "rds:CreateIntegration",
        "rds:CreateTenantDatabase",
        "rds:DeleteIntegration",
        "rds:DeleteTenantDatabase",
        "rds:DescribeDbSnapshotTenantDatabases",
        "rds:DescribeIntegrations",
        "rds:DescribeTenantDatabases",
        "rds:ModifyTenantDatabase"
      ],
      "AWS Partner central account management": [
        "partnercentral-account-management:AssociatePartnerAccount",
        "partnercentral-account-management:AssociatePartnerUser",
        "partnercentral-account-management:DisassociatePartnerUser"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-11-09",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Connect": [
        "connect:BatchPutContact"
      ],
      "Amazon SageMaker": [
        "sagemaker:CreateInferenceComponent",
        "sagemaker:DeleteInferenceComponent",
        "sagemaker:DescribeInferenceComponent",
        "sagemaker:InvokeEndpointWithResponseStream",
        "sagemaker:ListInferenceComponents",
        "sagemaker:UpdateInferenceComponent",
        "sagemaker:UpdateInferenceComponentRuntimeConfig"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-11-07",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Cognito Identity": [
        "cognito-identity:GetIdentityPoolAnalytics",
        "cognito-identity:GetIdentityPoolDailyAnalytics",
        "cognito-identity:GetIdentityProviderDailyAnalytics"
      ],
      "AWS Systems Manager": [
        "ssm:DeleteOpsItem"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-11-03",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Migration Hub Strategy Recommendations": [
        "migrationhub-strategy:ListAnalyzableServers"
      ],
      "Amazon Redshift": [
        "redshift:FailoverPrimaryCompute"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-11-02",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon EMR Serverless": [
        "emr-serverless:AccessInteractiveEndpoints"
      ],
      "AWS Global Accelerator": [
        "globalaccelerator:CreateCrossAccountAttachment",
        "globalaccelerator:DeleteCrossAccountAttachment",
        "globalaccelerator:DescribeCrossAccountAttachment",
        "globalaccelerator:ListCrossAccountAttachments",
        "globalaccelerator:ListCrossAccountResourceAccounts",
        "globalaccelerator:ListCrossAccountResources",
        "globalaccelerator:UpdateCrossAccountAttachment"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-11-01",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Data Exchange": [
        "dataexchange:SendDataSetNotification"
      ],
      "AWS DeepRacer": [
        "deepracer:ListLeaderboardEvaluations"
      ],
      "Amazon Redshift Serverless": [
        "redshift-serverless:CreateCustomDomainAssociation",
        "redshift-serverless:DeleteCustomDomainAssociation",
        "redshift-serverless:GetCustomDomainAssociation",
        "redshift-serverless:ListCustomDomainAssociations",
        "redshift-serverless:UpdateCustomDomainAssociation"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-10-31",
    "addedServices": [
      "AWS Application Transformation Service"
    ],
    "removedServices": [],
    "addedActions": {
      "Amazon EC2": [
        "ec2:DisableImage",
        "ec2:EnableImage"
      ],
      "AWS Application Transformation Service": [
        "application-transformation:GetGroupingAssessment",
        "application-transformation:GetPortingCompatibilityAssessment",
        "application-transformation:GetPortingRecommendationAssessment",
        "application-transformation:GetRuntimeAssessment",
        "application-transformation:PutLogData",
        "application-transformation:PutMetricData",
        "application-transformation:StartGroupingAssessment",
        "application-transformation:StartPortingCompatibilityAssessment",
        "application-transformation:StartPortingRecommendationAssessment",
        "application-transformation:StartRuntimeAssessment"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-10-28",
    "addedServices": [],
    "removedServices": [
      "Amazon GameSparks",
      "AWS Tag Editor"
    ],
    "addedActions": {},
    "removedActions": {
      "Amazon GameSparks": [
        "gamesparks:CreateGame",
        "gamesparks:CreateSnapshot",
        "gamesparks:CreateStage",
        "gamesparks:DeleteGame",
        "gamesparks:DeleteStage",
        "gamesparks:DisconnectPlayer",
        "gamesparks:ExportSnapshot",
        "gamesparks:GetExtension",
        "gamesparks:GetExtensionVersion",
        "gamesparks:GetGame",
        "gamesparks:GetGameConfiguration",
        "gamesparks:GetGeneratedCodeJob",
        "gamesparks:GetPlayerConnectionStatus",
        "gamesparks:GetSnapshot",
        "gamesparks:GetStage",
        "gamesparks:GetStageDeployment",
        "gamesparks:ImportGameConfiguration",
        "gamesparks:InvokeBackend",
        "gamesparks:ListExtensionVersions",
        "gamesparks:ListExtensions",
        "gamesparks:ListGames",
        "gamesparks:ListGeneratedCodeJobs",
        "gamesparks:ListSnapshots",
        "gamesparks:ListStageDeployments",
        "gamesparks:ListStages",
        "gamesparks:ListTagsForResource",
        "gamesparks:StartGeneratedCodeJob",
        "gamesparks:StartStageDeployment",
        "gamesparks:TagResource",
        "gamesparks:UntagResource",
        "gamesparks:UpdateGame",
        "gamesparks:UpdateGameConfiguration",
        "gamesparks:UpdateSnapshot",
        "gamesparks:UpdateStage"
      ],
      "AWS Tag Editor": [
        "resource-explorer:ListResourceTypes",
        "resource-explorer:ListResources",
        "resource-explorer:ListTags"
      ]
    }
  },
  {
    "dateOfChange": "2023-10-27",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Migration Hub": [
        "mgh:DeleteHomeRegionControl"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-10-26",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon OpenSearch Serverless": [
        "aoss:BatchGetEffectiveLifecyclePolicy",
        "aoss:BatchGetLifecyclePolicy",
        "aoss:CreateLifecyclePolicy",
        "aoss:DeleteLifecyclePolicy",
        "aoss:ListLifecyclePolicies",
        "aoss:UpdateLifecyclePolicy"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-10-25",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Braket": [
        "braket:AcceptUserAgreement",
        "braket:AccessBraketFeature",
        "braket:GetServiceLinkedRoleStatus",
        "braket:GetUserAgreementStatus"
      ],
      "Amazon Connect": [
        "connect:BatchGetFlowAssociation",
        "connect:CreatePredefinedAttribute",
        "connect:DeletePredefinedAttribute",
        "connect:DescribePredefinedAttribute",
        "connect:ListPredefinedAttributes",
        "connect:ListSecurityProfileApplications",
        "connect:UpdatePhoneNumberMetadata",
        "connect:UpdatePredefinedAttribute"
      ],
      "Amazon Connect Wisdom": [
        "wisdom:CreateQuickResponse",
        "wisdom:DeleteImportJob",
        "wisdom:DeleteQuickResponse",
        "wisdom:GetImportJob",
        "wisdom:GetQuickResponse",
        "wisdom:ListImportJobs",
        "wisdom:ListQuickResponses",
        "wisdom:SearchQuickResponses",
        "wisdom:StartImportJob",
        "wisdom:UpdateQuickResponse"
      ],
      "AWS Lake Formation": [
        "lakeformation:CreateLakeFormationOptIn",
        "lakeformation:DeleteLakeFormationOptIn",
        "lakeformation:ListLakeFormationOptIns"
      ],
      "Amazon Rekognition": [
        "rekognition:GetMediaAnalysisJob",
        "rekognition:ListMediaAnalysisJobs",
        "rekognition:StartMediaAnalysisJob"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-10-20",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Redshift Serverless": [
        "redshift-serverless:DescribeOneTimeCredit"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-10-19",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon AppIntegrations": [
        "app-integrations:CreateApplication",
        "app-integrations:GetApplication",
        "app-integrations:ListApplications",
        "app-integrations:UpdateApplication"
      ],
      "AWS Application Discovery Service": [
        "discovery:BatchDeleteAgents",
        "discovery:DescribeBatchDeleteConfigurationTask",
        "discovery:StartBatchDeleteConfigurationTask"
      ],
      "Amazon Chime": [
        "chime:CreateMediaPipelineKinesisVideoStreamPool",
        "chime:CreateMediaStreamPipeline",
        "chime:DeleteMediaPipelineKinesisVideoStreamPool",
        "chime:GetMediaPipelineKinesisVideoStreamPool",
        "chime:ListMediaPipelineKinesisVideoStreamPools",
        "chime:UpdateMediaPipelineKinesisVideoStreamPool"
      ],
      "Amazon CodeWhisperer": [
        "codewhisperer:AssociateCustomizationPermission",
        "codewhisperer:CreateCustomization",
        "codewhisperer:DeleteCustomization",
        "codewhisperer:DisassociateCustomizationPermission",
        "codewhisperer:GetCustomization",
        "codewhisperer:ListCustomizationPermissions",
        "codewhisperer:ListCustomizations",
        "codewhisperer:UpdateCustomization"
      ],
      "Amazon Managed Streaming for Apache Kafka": [
        "kafka:CreateReplicator",
        "kafka:DeleteReplicator",
        "kafka:DescribeReplicator",
        "kafka:ListReplicators",
        "kafka:UpdateReplicationInfo"
      ],
      "Amazon OpenSearch Service": [
        "es:GetDomainMaintenanceStatus",
        "es:ListDomainMaintenances",
        "es:StartDomainMaintenance"
      ],
      "Amazon Route 53 Recovery Controls": [
        "route53-recovery-control-config:GetResourcePolicy"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-10-17",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Control Tower": [
        "controltower:GetEnabledControl"
      ],
      "AWS Entity Resolution": [
        "entityresolution:CreateIdMappingWorkflow",
        "entityresolution:DeleteIdMappingWorkflow",
        "entityresolution:GetIdMappingJob",
        "entityresolution:GetIdMappingWorkflow",
        "entityresolution:GetProviderService",
        "entityresolution:ListIdMappingJobs",
        "entityresolution:ListIdMappingWorkflows",
        "entityresolution:ListProviderServices",
        "entityresolution:StartIdMappingJob",
        "entityresolution:UpdateIdMappingWorkflow",
        "entityresolution:UpdateSchemaMapping"
      ],
      "Amazon FSx": [
        "fsx:StartMisconfiguredStateRecovery"
      ],
      "Amazon Managed Blockchain Query": [
        "managedblockchain-query:GetAssetContract",
        "managedblockchain-query:ListAssetContracts"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-10-16",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Elemental MediaLive": [
        "medialive:StartInputDevice",
        "medialive:StopInputDevice"
      ],
      "AWS IoT FleetWise": [
        "iotfleetwise:GetEncryptionConfiguration",
        "iotfleetwise:PutEncryptionConfiguration"
      ],
      "AWS Support": [
        "support:DescribeCommunication"
      ],
      "Amazon Textract": [
        "textract:CreateAdapter",
        "textract:CreateAdapterVersion",
        "textract:DeleteAdapter",
        "textract:DeleteAdapterVersion",
        "textract:GetAdapter",
        "textract:GetAdapterVersion",
        "textract:ListAdapterVersions",
        "textract:ListAdapters",
        "textract:ListTagsForResource",
        "textract:TagResource",
        "textract:UntagResource",
        "textract:UpdateAdapter"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-10-07",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Database Migration Service": [
        "dms:DescribeEngineVersions"
      ],
      "AWS Directory Service": [
        "ds:DisableRoleAccess",
        "ds:EnableRoleAccess",
        "ds:UpdateDirectory"
      ],
      "Amazon WorkSpaces": [
        "workspaces:AssociateWorkspaceApplication",
        "workspaces:DeployWorkspaceApplications",
        "workspaces:DescribeApplicationAssociations",
        "workspaces:DescribeApplications",
        "workspaces:DescribeBundleAssociations",
        "workspaces:DescribeImageAssociations",
        "workspaces:DescribeWorkspaceAssociations",
        "workspaces:DisassociateWorkspaceApplication"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-10-05",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Well-Architected Tool": [
        "wellarchitected:CreateReviewTemplate",
        "wellarchitected:CreateTemplateShare",
        "wellarchitected:DeleteReviewTemplate",
        "wellarchitected:DeleteTemplateShare",
        "wellarchitected:GetReviewTemplate",
        "wellarchitected:GetReviewTemplateAnswer",
        "wellarchitected:GetReviewTemplateLensReview",
        "wellarchitected:ListReviewTemplateAnswers",
        "wellarchitected:ListReviewTemplates",
        "wellarchitected:ListTemplateShares",
        "wellarchitected:UpdateReviewTemplate",
        "wellarchitected:UpdateReviewTemplateAnswer",
        "wellarchitected:UpdateReviewTemplateLensReview",
        "wellarchitected:UpgradeReviewTemplateLensReview"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-10-03",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS App Runner": [
        "apprunner:ListServicesForAutoScalingConfiguration",
        "apprunner:UpdateDefaultAutoScalingConfiguration"
      ],
      "Amazon Bedrock": [
        "bedrock:CreateFoundationModelAgreement",
        "bedrock:CreateProvisionedModelThroughput",
        "bedrock:DeleteFoundationModelAgreement",
        "bedrock:DeleteModelInvocationLoggingConfiguration",
        "bedrock:DeleteProvisionedModelThroughput",
        "bedrock:GetFoundationModelAvailability",
        "bedrock:GetModelInvocationLoggingConfiguration",
        "bedrock:GetProvisionedModelThroughput",
        "bedrock:GetUseCaseForModelAccess",
        "bedrock:ListFoundationModelAgreementOffers",
        "bedrock:ListProvisionedModelThroughputs",
        "bedrock:PutFoundationModelEntitlement",
        "bedrock:PutModelInvocationLoggingConfiguration",
        "bedrock:PutUseCaseForModelAccess",
        "bedrock:UpdateProvisionedModelThroughput"
      ],
      "Amazon RDS": [
        "rds:SwitchoverGlobalCluster"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-09-30",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Application Migration Service": [
        "mgn:CreateConnector",
        "mgn:DeleteConnector",
        "mgn:ListConnectors",
        "mgn:UpdateConnector",
        "mgn:UpdateSourceServer"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-09-28",
    "addedServices": [],
    "removedServices": [
      "Amazon DataZone Control"
    ],
    "addedActions": {
      "Amazon DataZone": [
        "datazone:AcceptPredictions",
        "datazone:AcceptSubscriptionRequest",
        "datazone:CancelSubscription",
        "datazone:CreateAsset",
        "datazone:CreateAssetRevision",
        "datazone:CreateAssetType",
        "datazone:CreateDataSource",
        "datazone:CreateDomain",
        "datazone:CreateEnvironment",
        "datazone:CreateEnvironmentBlueprint",
        "datazone:CreateEnvironmentProfile",
        "datazone:CreateFormType",
        "datazone:CreateGlossary",
        "datazone:CreateGlossaryTerm",
        "datazone:CreateGroupProfile",
        "datazone:CreateListingChangeSet",
        "datazone:CreateProject",
        "datazone:CreateProjectMembership",
        "datazone:CreateSubscriptionGrant",
        "datazone:CreateSubscriptionRequest",
        "datazone:CreateSubscriptionTarget",
        "datazone:CreateUserProfile",
        "datazone:DeleteAsset",
        "datazone:DeleteAssetType",
        "datazone:DeleteDataSource",
        "datazone:DeleteDomain",
        "datazone:DeleteDomainSharingPolicy",
        "datazone:DeleteEnvironment",
        "datazone:DeleteEnvironmentBlueprint",
        "datazone:DeleteEnvironmentBlueprintConfiguration",
        "datazone:DeleteEnvironmentProfile",
        "datazone:DeleteFormType",
        "datazone:DeleteGlossary",
        "datazone:DeleteGlossaryTerm",
        "datazone:DeleteListing",
        "datazone:DeleteProject",
        "datazone:DeleteProjectMembership",
        "datazone:DeleteSubscriptionGrant",
        "datazone:DeleteSubscriptionRequest",
        "datazone:DeleteSubscriptionTarget",
        "datazone:GetAsset",
        "datazone:GetAssetType",
        "datazone:GetDataSource",
        "datazone:GetDataSourceRun",
        "datazone:GetDomain",
        "datazone:GetDomainSharingPolicy",
        "datazone:GetEnvironment",
        "datazone:GetEnvironmentActionLink",
        "datazone:GetEnvironmentBlueprint",
        "datazone:GetEnvironmentBlueprintConfiguration",
        "datazone:GetEnvironmentCredentials",
        "datazone:GetEnvironmentProfile",
        "datazone:GetFormType",
        "datazone:GetGlossary",
        "datazone:GetGlossaryTerm",
        "datazone:GetGroupProfile",
        "datazone:GetIamPortalLoginUrl",
        "datazone:GetListing",
        "datazone:GetSubscription",
        "datazone:GetSubscriptionEligibility",
        "datazone:GetSubscriptionGrant",
        "datazone:GetSubscriptionRequestDetails",
        "datazone:GetSubscriptionTarget",
        "datazone:GetUserProfile",
        "datazone:ListAccountEnvironments",
        "datazone:ListAssetRevisions",
        "datazone:ListDataSourceRunActivities",
        "datazone:ListDataSourceRuns",
        "datazone:ListDataSources",
        "datazone:ListDomains",
        "datazone:ListEnvironmentBlueprintConfigurations",
        "datazone:ListEnvironmentBlueprints",
        "datazone:ListEnvironmentProfiles",
        "datazone:ListEnvironments",
        "datazone:ListGroupsForUser",
        "datazone:ListNotifications",
        "datazone:ListProjectMemberships",
        "datazone:ListSubscriptionGrants",
        "datazone:ListSubscriptionRequests",
        "datazone:ListSubscriptionTargets",
        "datazone:ListSubscriptions",
        "datazone:ListTagsForResource",
        "datazone:ListWarehouseMetadata",
        "datazone:ProvisionDomain",
        "datazone:PutDomainSharingPolicy",
        "datazone:PutEnvironmentBlueprintConfiguration",
        "datazone:RefreshToken",
        "datazone:RejectPredictions",
        "datazone:RejectSubscriptionRequest",
        "datazone:RevokeSubscription",
        "datazone:Search",
        "datazone:SearchGroupProfiles",
        "datazone:SearchListings",
        "datazone:SearchTypes",
        "datazone:SearchUserProfiles",
        "datazone:SsoLogin",
        "datazone:SsoLogout",
        "datazone:StartDataSourceRun",
        "datazone:TagResource",
        "datazone:UntagResource",
        "datazone:UpdateDataSource",
        "datazone:UpdateDomain",
        "datazone:UpdateEnvironment",
        "datazone:UpdateEnvironmentBlueprint",
        "datazone:UpdateEnvironmentConfiguration",
        "datazone:UpdateEnvironmentDeploymentStatus",
        "datazone:UpdateEnvironmentProfile",
        "datazone:UpdateGlossary",
        "datazone:UpdateGlossaryTerm",
        "datazone:UpdateGroupProfile",
        "datazone:UpdateProject",
        "datazone:UpdateSubscriptionGrantStatus",
        "datazone:UpdateSubscriptionRequest",
        "datazone:UpdateSubscriptionTarget",
        "datazone:UpdateUserProfile",
        "datazone:ValidatePassRole"
      ]
    },
    "removedActions": {
      "Amazon DataZone": [
        "datazone:GetProjectConfiguration",
        "datazone:GetProjectCredentials",
        "datazone:ListUserProjects"
      ],
      "Amazon DataZone Control": [
        "datazonecontrol:CreateAccountAssociationInvitation",
        "datazonecontrol:CreateDataSource",
        "datazonecontrol:CreateEnvironment",
        "datazonecontrol:DeleteDataSource",
        "datazonecontrol:DeleteEnvironment",
        "datazonecontrol:DissociateAccount",
        "datazonecontrol:GetAssociatedDomain",
        "datazonecontrol:GetDataSourceByEnvironment",
        "datazonecontrol:GetDomain",
        "datazonecontrol:GetEnvironment",
        "datazonecontrol:GetMetadataCollector",
        "datazonecontrol:GetUserPortalLoginAuthCode",
        "datazonecontrol:ListAccountAssociationInvitations",
        "datazonecontrol:ListAllAssociatedAccountsForEnvironment",
        "datazonecontrol:ListAssociatedEnvironments",
        "datazonecontrol:ListDataSources",
        "datazonecontrol:ListDataSourcesByEnvironment",
        "datazonecontrol:ListDomains",
        "datazonecontrol:ListEnvironment",
        "datazonecontrol:ListMetadataCollectorRuns",
        "datazonecontrol:ListMetadataCollectors",
        "datazonecontrol:ListProjects",
        "datazonecontrol:ListTagsForResource",
        "datazonecontrol:ReviewAccountAssociationInvitation",
        "datazonecontrol:TagResource",
        "datazonecontrol:UntagResource",
        "datazonecontrol:UpdateAccountAssociationDescription",
        "datazonecontrol:UpdateDataSource",
        "datazonecontrol:UpdateEnvironment"
      ]
    }
  },
  {
    "dateOfChange": "2023-09-27",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Bedrock": [
        "bedrock:AssociateAgentKnowledgeBase",
        "bedrock:AssociateThirdPartyKnowledgeBase",
        "bedrock:CreateDataSource",
        "bedrock:CreateKnowledgeBase",
        "bedrock:DeleteDataSource",
        "bedrock:DeleteKnowledgeBase",
        "bedrock:DisassociateAgentKnowledgeBase",
        "bedrock:GetAgentKnowledgeBase",
        "bedrock:GetDataSource",
        "bedrock:GetFoundationModel",
        "bedrock:GetIngestionJob",
        "bedrock:GetKnowledgeBase",
        "bedrock:ListAgentKnowledgeBases",
        "bedrock:ListDataSources",
        "bedrock:ListIngestionJobs",
        "bedrock:ListKnowledgeBases",
        "bedrock:QueryKnowledgeBase",
        "bedrock:StartIngestionJob",
        "bedrock:UpdateAgentKnowledgeBase",
        "bedrock:UpdateDataSource",
        "bedrock:UpdateKnowledgeBase"
      ],
      "Amazon WorkMail": [
        "workmail:DescribeEntity",
        "workmail:ListGroupsForEntity",
        "workmail:UpdateGroup",
        "workmail:UpdateUser"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-09-26",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Lookout for Equipment": [
        "lookoutequipment:CreateRetrainingScheduler",
        "lookoutequipment:DeleteRetrainingScheduler",
        "lookoutequipment:DescribeRetrainingScheduler",
        "lookoutequipment:ListRetrainingSchedulers",
        "lookoutequipment:StartRetrainingScheduler",
        "lookoutequipment:StopRetrainingScheduler",
        "lookoutequipment:UpdateModel",
        "lookoutequipment:UpdateRetrainingScheduler"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-09-23",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Amplify UI Builder": [
        "amplifyuibuilder:ExchangeCodeForToken",
        "amplifyuibuilder:RefreshToken"
      ],
      "AWS Cloud Map": [
        "servicediscovery:DiscoverInstancesRevision"
      ],
      "Amazon EC2": [
        "ec2:DisableImageBlockPublicAccess",
        "ec2:EnableImageBlockPublicAccess",
        "ec2:GetImageBlockPublicAccessState"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-09-20",
    "addedServices": [],
    "removedServices": [
      "AWS Mobile Hub"
    ],
    "addedActions": {},
    "removedActions": {
      "AWS Mobile Hub": [
        "mobilehub:CreateProject",
        "mobilehub:CreateServiceRole",
        "mobilehub:DeleteProject",
        "mobilehub:DeleteProjectSnapshot",
        "mobilehub:DeployToStage",
        "mobilehub:DescribeBundle",
        "mobilehub:ExportBundle",
        "mobilehub:ExportProject",
        "mobilehub:GenerateProjectParameters",
        "mobilehub:GetProject",
        "mobilehub:GetProjectSnapshot",
        "mobilehub:ImportProject",
        "mobilehub:InstallBundle",
        "mobilehub:ListAvailableConnectors",
        "mobilehub:ListAvailableFeatures",
        "mobilehub:ListAvailableRegions",
        "mobilehub:ListBundles",
        "mobilehub:ListProjectSnapshots",
        "mobilehub:ListProjects",
        "mobilehub:SynchronizeProject",
        "mobilehub:UpdateProject",
        "mobilehub:ValidateProject",
        "mobilehub:VerifyServiceRole"
      ]
    }
  },
  {
    "dateOfChange": "2023-09-16",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Health APIs and Notifications": [
        "health:DescribeEntityAggregatesForOrganization"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-09-14",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Elastic Disaster Recovery": [
        "drs:DeleteLaunchAction",
        "drs:ListLaunchActions",
        "drs:PutLaunchAction"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-09-13",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Connect": [
        "connect:CreateView",
        "connect:CreateViewVersion",
        "connect:DeleteView",
        "connect:DeleteViewVersion",
        "connect:DescribeView",
        "connect:ListViewVersions",
        "connect:ListViews",
        "connect:UpdateViewContent",
        "connect:UpdateViewMetadata"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-09-10",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon SageMaker": [
        "sagemaker:GetScalingConfigurationRecommendation"
      ]
    },
    "removedActions": {
      "Amazon SageMaker": [
        "sagemaker:GetScalingPolicyConfigurationRecommendation"
      ]
    }
  },
  {
    "dateOfChange": "2023-09-07",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon CloudWatch Internet Monitor": [
        "internetmonitor:GetQueryResults",
        "internetmonitor:GetQueryStatus",
        "internetmonitor:StartQuery",
        "internetmonitor:StopQuery"
      ],
      "Amazon Simple Email Service v2": [
        "ses:CancelExportJob",
        "ses:CreateExportJob",
        "ses:GetExportJob",
        "ses:GetMessageInsights",
        "ses:ListExportJobs"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-09-01",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS CodeCommit": [
        "codecommit:ListFileCommitHistory"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-08-30",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Compute Optimizer": [
        "compute-optimizer:ExportLicenseRecommendations",
        "compute-optimizer:GetLicenseRecommendations"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-08-29",
    "addedServices": [
      "AWS Private CA Connector for Active Directory"
    ],
    "removedServices": [],
    "addedActions": {
      "AWS Private CA Connector for Active Directory": [
        "pca-connector-ad:CreateConnector",
        "pca-connector-ad:CreateDirectoryRegistration",
        "pca-connector-ad:CreateServicePrincipalName",
        "pca-connector-ad:CreateTemplate",
        "pca-connector-ad:CreateTemplateGroupAccessControlEntry",
        "pca-connector-ad:DeleteConnector",
        "pca-connector-ad:DeleteDirectoryRegistration",
        "pca-connector-ad:DeleteServicePrincipalName",
        "pca-connector-ad:DeleteTemplate",
        "pca-connector-ad:DeleteTemplateGroupAccessControlEntry",
        "pca-connector-ad:GetConnector",
        "pca-connector-ad:GetDirectoryRegistration",
        "pca-connector-ad:GetServicePrincipalName",
        "pca-connector-ad:GetTemplate",
        "pca-connector-ad:GetTemplateGroupAccessControlEntry",
        "pca-connector-ad:ListConnectors",
        "pca-connector-ad:ListDirectoryRegistrations",
        "pca-connector-ad:ListServicePrincipalNames",
        "pca-connector-ad:ListTagsForResource",
        "pca-connector-ad:ListTemplateGroupAccessControlEntries",
        "pca-connector-ad:ListTemplates",
        "pca-connector-ad:TagResource",
        "pca-connector-ad:UntagResource",
        "pca-connector-ad:UpdateTemplate",
        "pca-connector-ad:UpdateTemplateGroupAccessControlEntry"
      ]
    },
    "removedActions": {
      "Amazon Bedrock": [
        "bedrock:DeletePrompt",
        "bedrock:GetPrompt",
        "bedrock:ListPrompts",
        "bedrock:UpdatePrompt"
      ]
    }
  },
  {
    "dateOfChange": "2023-08-23",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Personalize": [
        "personalize:CreateDataInsightsJob",
        "personalize:DescribeDataInsightsJob",
        "personalize:GetDataInsights",
        "personalize:ListDataInsightsJobs"
      ],
      "Amazon SageMaker": [
        "sagemaker:ListResourceCatalogs"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-08-22",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Cognito User Pools": [
        "cognito-idp:GetLogDeliveryConfiguration",
        "cognito-idp:SetLogDeliveryConfiguration"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-08-19",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Marketplace Vendor Insights": [
        "vendor-insights:UpdateDataSource"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-08-17",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Amplify UI Builder": [
        "amplifyuibuilder:GetCodegenJob",
        "amplifyuibuilder:ListCodegenJobs",
        "amplifyuibuilder:StartCodegenJob"
      ],
      "AWS HealthOmics": [
        "omics:AcceptShare",
        "omics:CreateAnnotationStoreVersion",
        "omics:CreateShare",
        "omics:DeleteAnnotationStoreVersions",
        "omics:DeleteShare",
        "omics:GetAnnotationStoreVersion",
        "omics:GetShare",
        "omics:ListAnnotationStoreVersions",
        "omics:ListShares",
        "omics:UpdateAnnotationStoreVersion"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-08-16",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Performance Insights": [
        "pi:CreatePerformanceAnalysisReport",
        "pi:DeletePerformanceAnalysisReport",
        "pi:GetPerformanceAnalysisReport",
        "pi:ListPerformanceAnalysisReports",
        "pi:ListTagsForResource",
        "pi:TagResource",
        "pi:UntagResource"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-08-15",
    "addedServices": [
      "AWS Migration Acceleration Program Credits"
    ],
    "removedServices": [],
    "addedActions": {
      "Amazon Connect": [
        "connect:AssociateTrafficDistributionGroupUser",
        "connect:DisassociateTrafficDistributionGroupUser",
        "connect:ListTrafficDistributionGroupUsers"
      ],
      "Amazon ElastiCache": [
        "elasticache:TestMigration"
      ],
      "AWS Snowball": [
        "snowball:ListPickupLocations"
      ],
      "AWS Migration Acceleration Program Credits": [
        "mapcredits:ListAssociatedPrograms",
        "mapcredits:ListQuarterCredits",
        "mapcredits:ListQuarterSpend"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-08-11",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Backup": [
        "backup:CreateLogicallyAirGappedBackupVault",
        "backup:DeleteBackupVaultSharingPolicy",
        "backup:GetBackupVaultSharingPolicy",
        "backup:ListProtectedResourcesByBackupVault",
        "backup:PutBackupVaultSharingPolicy"
      ],
      "Amazon Bedrock": [
        "bedrock:CreateAgent",
        "bedrock:CreateAgentActionGroup",
        "bedrock:CreateAgentAlias",
        "bedrock:CreateAgentDraftSnapshot",
        "bedrock:GetAgent",
        "bedrock:GetAgentActionGroup",
        "bedrock:GetAgentAlias",
        "bedrock:GetAgentVersion",
        "bedrock:InvokeAgent",
        "bedrock:ListAgentActionGroups",
        "bedrock:ListAgentAliases",
        "bedrock:ListAgentVersions",
        "bedrock:ListAgents",
        "bedrock:UpdateAgent",
        "bedrock:UpdateAgentActionGroup",
        "bedrock:UpdateAgentAlias"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-08-09",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Artifact": [
        "artifact:GetAccountSettings",
        "artifact:PutAccountSettings"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-08-08",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon CloudWatch Application Insights": [
        "applicationinsights:AddWorkload",
        "applicationinsights:DescribeWorkload",
        "applicationinsights:ListWorkloads",
        "applicationinsights:RemoveWorkload",
        "applicationinsights:UpdateProblem",
        "applicationinsights:UpdateWorkload"
      ],
      "Amazon Connect": [
        "connect:UpdateRoutingProfileAgentAvailabilityTimer"
      ],
      "AWS IQ Permissions": [
        "iq-permission:AssumePermissionRole"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-08-05",
    "addedServices": [
      "AWS Resilience Hub"
    ],
    "removedServices": [
      "AWS Resilience Hub Service"
    ],
    "addedActions": {
      "AWS DataSync": [
        "datasync:CreateLocationAzureBlob",
        "datasync:DescribeLocationAzureBlob",
        "datasync:UpdateLocationAzureBlob"
      ],
      "Amazon RDS": [
        "rds:DeleteDBClusterAutomatedBackup",
        "rds:DescribeDBClusterAutomatedBackups"
      ],
      "AWS Resilience Hub": [
        "resiliencehub:AddDraftAppVersionResourceMappings",
        "resiliencehub:BatchUpdateRecommendationStatus",
        "resiliencehub:CreateApp",
        "resiliencehub:CreateAppVersionAppComponent",
        "resiliencehub:CreateAppVersionResource",
        "resiliencehub:CreateRecommendationTemplate",
        "resiliencehub:CreateResiliencyPolicy",
        "resiliencehub:DeleteApp",
        "resiliencehub:DeleteAppAssessment",
        "resiliencehub:DeleteAppInputSource",
        "resiliencehub:DeleteAppVersionAppComponent",
        "resiliencehub:DeleteAppVersionResource",
        "resiliencehub:DeleteRecommendationTemplate",
        "resiliencehub:DeleteResiliencyPolicy",
        "resiliencehub:DescribeApp",
        "resiliencehub:DescribeAppAssessment",
        "resiliencehub:DescribeAppVersion",
        "resiliencehub:DescribeAppVersionAppComponent",
        "resiliencehub:DescribeAppVersionResource",
        "resiliencehub:DescribeAppVersionResourcesResolutionStatus",
        "resiliencehub:DescribeAppVersionTemplate",
        "resiliencehub:DescribeDraftAppVersionResourcesImportStatus",
        "resiliencehub:DescribeResiliencyPolicy",
        "resiliencehub:ImportResourcesToDraftAppVersion",
        "resiliencehub:ListAlarmRecommendations",
        "resiliencehub:ListAppAssessmentComplianceDrifts",
        "resiliencehub:ListAppAssessments",
        "resiliencehub:ListAppComponentCompliances",
        "resiliencehub:ListAppComponentRecommendations",
        "resiliencehub:ListAppInputSources",
        "resiliencehub:ListAppVersionAppComponents",
        "resiliencehub:ListAppVersionResourceMappings",
        "resiliencehub:ListAppVersionResources",
        "resiliencehub:ListAppVersions",
        "resiliencehub:ListApps",
        "resiliencehub:ListRecommendationTemplates",
        "resiliencehub:ListResiliencyPolicies",
        "resiliencehub:ListSopRecommendations",
        "resiliencehub:ListSuggestedResiliencyPolicies",
        "resiliencehub:ListTagsForResource",
        "resiliencehub:ListTestRecommendations",
        "resiliencehub:ListUnsupportedAppVersionResources",
        "resiliencehub:PublishAppVersion",
        "resiliencehub:PutDraftAppVersionTemplate",
        "resiliencehub:RemoveDraftAppVersionResourceMappings",
        "resiliencehub:ResolveAppVersionResources",
        "resiliencehub:StartAppAssessment",
        "resiliencehub:TagResource",
        "resiliencehub:UntagResource",
        "resiliencehub:UpdateApp",
        "resiliencehub:UpdateAppVersion",
        "resiliencehub:UpdateAppVersionAppComponent",
        "resiliencehub:UpdateAppVersionResource",
        "resiliencehub:UpdateResiliencyPolicy"
      ]
    },
    "removedActions": {
      "AWS Resilience Hub Service": [
        "resiliencehub:AddDraftAppVersionResourceMappings",
        "resiliencehub:CreateApp",
        "resiliencehub:CreateAppVersionAppComponent",
        "resiliencehub:CreateAppVersionResource",
        "resiliencehub:CreateRecommendationTemplate",
        "resiliencehub:CreateResiliencyPolicy",
        "resiliencehub:DeleteApp",
        "resiliencehub:DeleteAppAssessment",
        "resiliencehub:DeleteAppInputSource",
        "resiliencehub:DeleteAppVersionAppComponent",
        "resiliencehub:DeleteAppVersionResource",
        "resiliencehub:DeleteRecommendationTemplate",
        "resiliencehub:DeleteResiliencyPolicy",
        "resiliencehub:DescribeApp",
        "resiliencehub:DescribeAppAssessment",
        "resiliencehub:DescribeAppVersion",
        "resiliencehub:DescribeAppVersionAppComponent",
        "resiliencehub:DescribeAppVersionResource",
        "resiliencehub:DescribeAppVersionResourcesResolutionStatus",
        "resiliencehub:DescribeAppVersionTemplate",
        "resiliencehub:DescribeDraftAppVersionResourcesImportStatus",
        "resiliencehub:DescribeResiliencyPolicy",
        "resiliencehub:ImportResourcesToDraftAppVersion",
        "resiliencehub:ListAlarmRecommendations",
        "resiliencehub:ListAppAssessments",
        "resiliencehub:ListAppComponentCompliances",
        "resiliencehub:ListAppComponentRecommendations",
        "resiliencehub:ListAppInputSources",
        "resiliencehub:ListAppVersionAppComponents",
        "resiliencehub:ListAppVersionResourceMappings",
        "resiliencehub:ListAppVersionResources",
        "resiliencehub:ListAppVersions",
        "resiliencehub:ListApps",
        "resiliencehub:ListRecommendationTemplates",
        "resiliencehub:ListResiliencyPolicies",
        "resiliencehub:ListSopRecommendations",
        "resiliencehub:ListSuggestedResiliencyPolicies",
        "resiliencehub:ListTagsForResource",
        "resiliencehub:ListTestRecommendations",
        "resiliencehub:ListUnsupportedAppVersionResources",
        "resiliencehub:PublishAppVersion",
        "resiliencehub:PutDraftAppVersionTemplate",
        "resiliencehub:RemoveDraftAppVersionResourceMappings",
        "resiliencehub:ResolveAppVersionResources",
        "resiliencehub:StartAppAssessment",
        "resiliencehub:TagResource",
        "resiliencehub:UntagResource",
        "resiliencehub:UpdateApp",
        "resiliencehub:UpdateAppVersion",
        "resiliencehub:UpdateAppVersionAppComponent",
        "resiliencehub:UpdateAppVersionResource",
        "resiliencehub:UpdateResiliencyPolicy"
      ]
    }
  },
  {
    "dateOfChange": "2023-08-04",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Inspector2": [
        "inspector2:BatchGetFindingDetails"
      ],
      "Amazon Lookout for Equipment": [
        "lookoutequipment:DeleteResourcePolicy",
        "lookoutequipment:DescribeModelVersion",
        "lookoutequipment:DescribeResourcePolicy",
        "lookoutequipment:ImportDataset",
        "lookoutequipment:ImportModelVersion",
        "lookoutequipment:ListModelVersions",
        "lookoutequipment:PutResourcePolicy",
        "lookoutequipment:UpdateActiveModelVersion"
      ],
      "AWS Mainframe Modernization Service": [
        "m2:GetSignedBluinsightsUrl"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-08-02",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Clean Rooms": [
        "cleanrooms:BatchGetCollaborationAnalysisTemplate",
        "cleanrooms:CreateAnalysisTemplate",
        "cleanrooms:DeleteAnalysisTemplate",
        "cleanrooms:GetAnalysisTemplate",
        "cleanrooms:GetCollaborationAnalysisTemplate",
        "cleanrooms:ListAnalysisTemplates",
        "cleanrooms:ListCollaborationAnalysisTemplates",
        "cleanrooms:UpdateAnalysisTemplate"
      ],
      "AWS Elemental MediaLive": [
        "medialive:DescribeAccountConfiguration",
        "medialive:DescribeThumbnails",
        "medialive:UpdateAccountConfiguration"
      ],
      "Amazon WorkDocs": [
        "workdocs:UpdateUserAdministrativeSettings"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-08-01",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Managed Streaming for Apache Kafka": [
        "kafka:DescribeClusterOperationV2",
        "kafka:ListClusterOperationsV2"
      ],
      "AWS Proton": [
        "proton:DeleteDeployment",
        "proton:GetDeployment",
        "proton:ListDeployments"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-07-29",
    "addedServices": [
      "AWS Entity Resolution",
      "Amazon Managed Blockchain Query"
    ],
    "removedServices": [],
    "addedActions": {
      "AWS Cost Explorer Service": [
        "ce:GetSavingsPlanPurchaseRecommendationDetails"
      ],
      "Amazon Interactive Video Service": [
        "ivs:BatchStartViewerSessionRevocation",
        "ivs:StartViewerSessionRevocation"
      ],
      "Amazon Lex V2": [
        "lex:ListIntentMetrics",
        "lex:ListIntentPaths",
        "lex:ListIntentStageMetrics",
        "lex:ListSessionAnalyticsData",
        "lex:ListSessionMetrics"
      ],
      "Amazon Managed Blockchain": [
        "managedblockchain:InvokeRpcBitcoinMainnet",
        "managedblockchain:InvokeRpcBitcoinTestnet"
      ],
      "AWS Trusted Advisor": [
        "trustedadvisor:UpdateEngagement"
      ],
      "AWS Entity Resolution": [
        "entityresolution:CreateMatchingWorkflow",
        "entityresolution:CreateSchemaMapping",
        "entityresolution:DeleteMatchingWorkflow",
        "entityresolution:DeleteSchemaMapping",
        "entityresolution:GetMatchId",
        "entityresolution:GetMatchingJob",
        "entityresolution:GetMatchingWorkflow",
        "entityresolution:GetSchemaMapping",
        "entityresolution:ListMatchingJobs",
        "entityresolution:ListMatchingWorkflows",
        "entityresolution:ListSchemaMappings",
        "entityresolution:ListTagsForResource",
        "entityresolution:StartMatchingJob",
        "entityresolution:TagResource",
        "entityresolution:UntagResource",
        "entityresolution:UpdateMatchingWorkflow"
      ],
      "Amazon Managed Blockchain Query": [
        "managedblockchain-query:BatchGetTokenBalance",
        "managedblockchain-query:GetTokenBalance",
        "managedblockchain-query:GetTransaction",
        "managedblockchain-query:ListTokenBalances",
        "managedblockchain-query:ListTransactionEvents",
        "managedblockchain-query:ListTransactions"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-07-27",
    "addedServices": [
      "AWS HealthLake",
      "AWS HealthOmics"
    ],
    "removedServices": [
      "Amazon HealthLake",
      "Amazon Omics"
    ],
    "addedActions": {
      "Amazon Connect Customer Profiles": [
        "profile:GetSimilarProfiles",
        "profile:ListRuleBasedMatches"
      ],
      "Amazon QuickSight": [
        "quicksight:DescribeDashboardSnapshotJob",
        "quicksight:DescribeDashboardSnapshotJobResult",
        "quicksight:SearchUsers",
        "quicksight:StartDashboardSnapshotJob"
      ],
      "Amazon Route 53 Resolver": [
        "route53resolver:CreateOutpostResolver",
        "route53resolver:DeleteOutpostResolver",
        "route53resolver:GetOutpostResolver",
        "route53resolver:ListOutpostResolvers",
        "route53resolver:UpdateOutpostResolver"
      ],
      "AWS Systems Manager for SAP": [
        "ssm-sap:StartApplicationRefresh"
      ],
      "AWS Transfer Family": [
        "transfer:TestConnection"
      ],
      "AWS HealthLake": [
        "healthlake:CreateFHIRDatastore",
        "healthlake:CreateResource",
        "healthlake:DeleteFHIRDatastore",
        "healthlake:DeleteResource",
        "healthlake:DescribeFHIRDatastore",
        "healthlake:DescribeFHIRExportJob",
        "healthlake:DescribeFHIRImportJob",
        "healthlake:GetCapabilities",
        "healthlake:ListFHIRDatastores",
        "healthlake:ListFHIRExportJobs",
        "healthlake:ListFHIRImportJobs",
        "healthlake:ListTagsForResource",
        "healthlake:ReadResource",
        "healthlake:SearchWithGet",
        "healthlake:SearchWithPost",
        "healthlake:StartFHIRExportJob",
        "healthlake:StartFHIRImportJob",
        "healthlake:TagResource",
        "healthlake:UntagResource",
        "healthlake:UpdateResource"
      ],
      "AWS HealthOmics": [
        "omics:AbortMultipartReadSetUpload",
        "omics:BatchDeleteReadSet",
        "omics:CancelAnnotationImportJob",
        "omics:CancelRun",
        "omics:CancelVariantImportJob",
        "omics:CompleteMultipartReadSetUpload",
        "omics:CreateAnnotationStore",
        "omics:CreateMultipartReadSetUpload",
        "omics:CreateReferenceStore",
        "omics:CreateRunGroup",
        "omics:CreateSequenceStore",
        "omics:CreateVariantStore",
        "omics:CreateWorkflow",
        "omics:DeleteAnnotationStore",
        "omics:DeleteReference",
        "omics:DeleteReferenceStore",
        "omics:DeleteRun",
        "omics:DeleteRunGroup",
        "omics:DeleteSequenceStore",
        "omics:DeleteVariantStore",
        "omics:DeleteWorkflow",
        "omics:GetAnnotationImportJob",
        "omics:GetAnnotationStore",
        "omics:GetReadSet",
        "omics:GetReadSetActivationJob",
        "omics:GetReadSetExportJob",
        "omics:GetReadSetImportJob",
        "omics:GetReadSetMetadata",
        "omics:GetReference",
        "omics:GetReferenceImportJob",
        "omics:GetReferenceMetadata",
        "omics:GetReferenceStore",
        "omics:GetRun",
        "omics:GetRunGroup",
        "omics:GetRunTask",
        "omics:GetSequenceStore",
        "omics:GetVariantImportJob",
        "omics:GetVariantStore",
        "omics:GetWorkflow",
        "omics:ListAnnotationImportJobs",
        "omics:ListAnnotationStores",
        "omics:ListMultipartReadSetUploads",
        "omics:ListReadSetActivationJobs",
        "omics:ListReadSetExportJobs",
        "omics:ListReadSetImportJobs",
        "omics:ListReadSetUploadParts",
        "omics:ListReadSets",
        "omics:ListReferenceImportJobs",
        "omics:ListReferenceStores",
        "omics:ListReferences",
        "omics:ListRunGroups",
        "omics:ListRunTasks",
        "omics:ListRuns",
        "omics:ListSequenceStores",
        "omics:ListTagsForResource",
        "omics:ListVariantImportJobs",
        "omics:ListVariantStores",
        "omics:ListWorkflows",
        "omics:StartAnnotationImportJob",
        "omics:StartReadSetActivationJob",
        "omics:StartReadSetExportJob",
        "omics:StartReadSetImportJob",
        "omics:StartReferenceImportJob",
        "omics:StartRun",
        "omics:StartVariantImportJob",
        "omics:TagResource",
        "omics:UntagResource",
        "omics:UpdateAnnotationStore",
        "omics:UpdateRunGroup",
        "omics:UpdateVariantStore",
        "omics:UpdateWorkflow",
        "omics:UploadReadSetPart"
      ]
    },
    "removedActions": {
      "Amazon HealthLake": [
        "healthlake:CreateFHIRDatastore",
        "healthlake:CreateResource",
        "healthlake:DeleteFHIRDatastore",
        "healthlake:DeleteResource",
        "healthlake:DescribeFHIRDatastore",
        "healthlake:DescribeFHIRExportJob",
        "healthlake:DescribeFHIRImportJob",
        "healthlake:GetCapabilities",
        "healthlake:ListFHIRDatastores",
        "healthlake:ListFHIRExportJobs",
        "healthlake:ListFHIRImportJobs",
        "healthlake:ListTagsForResource",
        "healthlake:ReadResource",
        "healthlake:SearchWithGet",
        "healthlake:SearchWithPost",
        "healthlake:StartFHIRExportJob",
        "healthlake:StartFHIRImportJob",
        "healthlake:TagResource",
        "healthlake:UntagResource",
        "healthlake:UpdateResource"
      ],
      "Amazon Omics": [
        "omics:AbortMultipartReadSetUpload",
        "omics:BatchDeleteReadSet",
        "omics:CancelAnnotationImportJob",
        "omics:CancelRun",
        "omics:CancelVariantImportJob",
        "omics:CompleteMultipartReadSetUpload",
        "omics:CreateAnnotationStore",
        "omics:CreateMultipartReadSetUpload",
        "omics:CreateReferenceStore",
        "omics:CreateRunGroup",
        "omics:CreateSequenceStore",
        "omics:CreateVariantStore",
        "omics:CreateWorkflow",
        "omics:DeleteAnnotationStore",
        "omics:DeleteReference",
        "omics:DeleteReferenceStore",
        "omics:DeleteRun",
        "omics:DeleteRunGroup",
        "omics:DeleteSequenceStore",
        "omics:DeleteVariantStore",
        "omics:DeleteWorkflow",
        "omics:GetAnnotationImportJob",
        "omics:GetAnnotationStore",
        "omics:GetReadSet",
        "omics:GetReadSetActivationJob",
        "omics:GetReadSetExportJob",
        "omics:GetReadSetImportJob",
        "omics:GetReadSetMetadata",
        "omics:GetReference",
        "omics:GetReferenceImportJob",
        "omics:GetReferenceMetadata",
        "omics:GetReferenceStore",
        "omics:GetRun",
        "omics:GetRunGroup",
        "omics:GetRunTask",
        "omics:GetSequenceStore",
        "omics:GetVariantImportJob",
        "omics:GetVariantStore",
        "omics:GetWorkflow",
        "omics:ListAnnotationImportJobs",
        "omics:ListAnnotationStores",
        "omics:ListMultipartReadSetUploads",
        "omics:ListReadSetActivationJobs",
        "omics:ListReadSetExportJobs",
        "omics:ListReadSetImportJobs",
        "omics:ListReadSetUploadParts",
        "omics:ListReadSets",
        "omics:ListReferenceImportJobs",
        "omics:ListReferenceStores",
        "omics:ListReferences",
        "omics:ListRunGroups",
        "omics:ListRunTasks",
        "omics:ListRuns",
        "omics:ListSequenceStores",
        "omics:ListTagsForResource",
        "omics:ListVariantImportJobs",
        "omics:ListVariantStores",
        "omics:ListWorkflows",
        "omics:StartAnnotationImportJob",
        "omics:StartReadSetActivationJob",
        "omics:StartReadSetExportJob",
        "omics:StartReadSetImportJob",
        "omics:StartReferenceImportJob",
        "omics:StartRun",
        "omics:StartVariantImportJob",
        "omics:TagResource",
        "omics:UntagResource",
        "omics:UpdateAnnotationStore",
        "omics:UpdateRunGroup",
        "omics:UpdateVariantStore",
        "omics:UpdateWorkflow",
        "omics:UploadReadSetPart"
      ]
    }
  },
  {
    "dateOfChange": "2023-07-26",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Personalize": [
        "personalize:UpdateDataset"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-07-22",
    "addedServices": [
      "AWS HealthImaging"
    ],
    "removedServices": [],
    "addedActions": {
      "AWS Directory Service": [
        "ds:UpdateAuthorizedApplication"
      ],
      "Amazon Security Lake": [
        "securitylake:ListTagsForResource",
        "securitylake:TagResource",
        "securitylake:UntagResource"
      ],
      "AWS HealthImaging": [
        "medical-imaging:CopyImageSet",
        "medical-imaging:CreateDatastore",
        "medical-imaging:DeleteDatastore",
        "medical-imaging:DeleteImageSet",
        "medical-imaging:GetDICOMImportJob",
        "medical-imaging:GetDatastore",
        "medical-imaging:GetImageFrame",
        "medical-imaging:GetImageSet",
        "medical-imaging:GetImageSetMetadata",
        "medical-imaging:ListDICOMImportJobs",
        "medical-imaging:ListDatastores",
        "medical-imaging:ListImageSetVersions",
        "medical-imaging:ListTagsForResource",
        "medical-imaging:SearchImageSets",
        "medical-imaging:StartDICOMImportJob",
        "medical-imaging:TagResource",
        "medical-imaging:UntagResource",
        "medical-imaging:UpdateImageSetMetadata"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-07-21",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Managed Grafana": [
        "grafana:ListVersions"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-07-20",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon MQ": [
        "mq:Promote"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-07-18",
    "addedServices": [
      "Amazon Bedrock"
    ],
    "removedServices": [],
    "addedActions": {
      "Amazon SageMaker": [
        "sagemaker:GetScalingPolicyConfigurationRecommendation"
      ],
      "Amazon Bedrock": [
        "bedrock:CreateModelCustomizationJob",
        "bedrock:DeleteCustomModel",
        "bedrock:DeletePrompt",
        "bedrock:GetCustomModel",
        "bedrock:GetModelCustomizationJob",
        "bedrock:GetPrompt",
        "bedrock:InvokeModel",
        "bedrock:InvokeModelWithResponseStream",
        "bedrock:ListCustomModels",
        "bedrock:ListFoundationModels",
        "bedrock:ListModelCustomizationJobs",
        "bedrock:ListPrompts",
        "bedrock:ListTagsForResource",
        "bedrock:StopModelCustomizationJob",
        "bedrock:TagResource",
        "bedrock:UntagResource",
        "bedrock:UpdatePrompt"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-07-15",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS SQL Workbench": [
        "sqlworkbench:GetAutocompletionMetadata",
        "sqlworkbench:GetAutocompletionResource"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-07-14",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Connect": [
        "connect:DeleteQueue",
        "connect:DeleteRoutingProfile"
      ],
      "Amazon FSx": [
        "fsx:BypassSnaplockEnterpriseRetention"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-07-04",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Redshift": [
        "redshift:CreateCustomDomainAssociation",
        "redshift:DeleteCustomDomainAssociation",
        "redshift:DescribeCustomDomainAssociations",
        "redshift:ModifyCustomDomainAssociation"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-07-01",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon AppStream 2.0": [
        "appstream:AssociateAppBlockBuilderAppBlock",
        "appstream:CreateAppBlockBuilder",
        "appstream:CreateAppBlockBuilderStreamingURL",
        "appstream:DeleteAppBlockBuilder",
        "appstream:DescribeAppBlockBuilderAppBlockAssociations",
        "appstream:DescribeAppBlockBuilders",
        "appstream:DisassociateAppBlockBuilderAppBlock",
        "appstream:StartAppBlockBuilder",
        "appstream:StopAppBlockBuilder",
        "appstream:UpdateAppBlockBuilder"
      ],
      "Amazon Elastic MapReduce": [
        "elasticmapreduce:ListSupportedInstanceTypes"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-30",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS IQ": [
        "iq:DisableIndividualPublicProfile",
        "iq:EnableIndividualPublicProfile",
        "iq:GetCompanyChatMessages",
        "iq:LinkAwsCertification",
        "iq:ListExpertAccessLogs",
        "iq:UnlinkAwsCertification"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-29",
    "addedServices": [
      "AWS AppFabric"
    ],
    "removedServices": [],
    "addedActions": {
      "Amazon Kinesis Video Streams": [
        "kinesisvideo:DeleteEdgeConfiguration",
        "kinesisvideo:ListEdgeAgentConfigurations"
      ],
      "AWS AppFabric": [
        "appfabric:BatchGetUserAccessTasks",
        "appfabric:ConnectAppAuthorization",
        "appfabric:CreateAppAuthorization",
        "appfabric:CreateAppBundle",
        "appfabric:CreateIngestion",
        "appfabric:CreateIngestionDestination",
        "appfabric:DeleteAppAuthorization",
        "appfabric:DeleteAppBundle",
        "appfabric:DeleteIngestion",
        "appfabric:DeleteIngestionDestination",
        "appfabric:GetAppAuthorization",
        "appfabric:GetAppBundle",
        "appfabric:GetIngestion",
        "appfabric:GetIngestionDestination",
        "appfabric:ListAppAuthorizations",
        "appfabric:ListAppBundles",
        "appfabric:ListIngestionDestinations",
        "appfabric:ListIngestions",
        "appfabric:ListTagsForResource",
        "appfabric:StartIngestion",
        "appfabric:StartUserAccessTasks",
        "appfabric:StopIngestion",
        "appfabric:TagResource",
        "appfabric:UntagResource",
        "appfabric:UpdateAppAuthorization",
        "appfabric:UpdateIngestionDestination"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-28",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon AppFlow": [
        "appflow:ResetConnectorMetadataCache"
      ],
      "AWS CloudFormation": [
        "cloudformation:ActivateOrganizationsAccess",
        "cloudformation:DeactivateOrganizationsAccess",
        "cloudformation:DescribeOrganizationsAccess",
        "cloudformation:ListStackInstanceResourceDrifts"
      ],
      "Amazon Connect": [
        "connect:SearchResourceTags"
      ],
      "Amazon Interactive Video Service": [
        "ivs:GetParticipant",
        "ivs:GetStageSession",
        "ivs:ListParticipantEvents",
        "ivs:ListParticipants",
        "ivs:ListStageSessions"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-27",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Lex V2": [
        "lex:CreateTestSet",
        "lex:CreateTestSetDiscrepancyReport",
        "lex:DeleteTestSet",
        "lex:DescribeTestExecution",
        "lex:DescribeTestSet",
        "lex:DescribeTestSetDiscrepancyReport",
        "lex:DescribeTestSetGeneration",
        "lex:GetTestExecutionArtifactsUrl",
        "lex:ListTestExecutionResultItems",
        "lex:ListTestExecutions",
        "lex:ListTestSetRecords",
        "lex:ListTestSets",
        "lex:StartTestExecution",
        "lex:StartTestSetGeneration",
        "lex:UpdateTestSet"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-24",
    "addedServices": [
      "AWS Identity and Access Management (IAM)"
    ],
    "removedServices": [
      "AWS Identity and Access Management"
    ],
    "addedActions": {
      "Amazon Kendra": [
        "kendra:Retrieve"
      ],
      "AWS Step Functions": [
        "states:CreateStateMachineAlias",
        "states:DeleteStateMachineAlias",
        "states:DeleteStateMachineVersion",
        "states:DescribeStateMachineAlias",
        "states:ListStateMachineAliases",
        "states:ListStateMachineVersions",
        "states:PublishStateMachineVersion",
        "states:UpdateStateMachineAlias"
      ],
      "AWS Identity and Access Management (IAM)": [
        "iam:AddClientIDToOpenIDConnectProvider",
        "iam:AddRoleToInstanceProfile",
        "iam:AddUserToGroup",
        "iam:AttachGroupPolicy",
        "iam:AttachRolePolicy",
        "iam:AttachUserPolicy",
        "iam:ChangePassword",
        "iam:CreateAccessKey",
        "iam:CreateAccountAlias",
        "iam:CreateGroup",
        "iam:CreateInstanceProfile",
        "iam:CreateLoginProfile",
        "iam:CreateOpenIDConnectProvider",
        "iam:CreatePolicy",
        "iam:CreatePolicyVersion",
        "iam:CreateRole",
        "iam:CreateSAMLProvider",
        "iam:CreateServiceLinkedRole",
        "iam:CreateServiceSpecificCredential",
        "iam:CreateUser",
        "iam:CreateVirtualMFADevice",
        "iam:DeactivateMFADevice",
        "iam:DeleteAccessKey",
        "iam:DeleteAccountAlias",
        "iam:DeleteAccountPasswordPolicy",
        "iam:DeleteCloudFrontPublicKey",
        "iam:DeleteGroup",
        "iam:DeleteGroupPolicy",
        "iam:DeleteInstanceProfile",
        "iam:DeleteLoginProfile",
        "iam:DeleteOpenIDConnectProvider",
        "iam:DeletePolicy",
        "iam:DeletePolicyVersion",
        "iam:DeleteRole",
        "iam:DeleteRolePermissionsBoundary",
        "iam:DeleteRolePolicy",
        "iam:DeleteSAMLProvider",
        "iam:DeleteSSHPublicKey",
        "iam:DeleteServerCertificate",
        "iam:DeleteServiceLinkedRole",
        "iam:DeleteServiceSpecificCredential",
        "iam:DeleteSigningCertificate",
        "iam:DeleteUser",
        "iam:DeleteUserPermissionsBoundary",
        "iam:DeleteUserPolicy",
        "iam:DeleteVirtualMFADevice",
        "iam:DetachGroupPolicy",
        "iam:DetachRolePolicy",
        "iam:DetachUserPolicy",
        "iam:EnableMFADevice",
        "iam:GenerateCredentialReport",
        "iam:GenerateOrganizationsAccessReport",
        "iam:GenerateServiceLastAccessedDetails",
        "iam:GetAccessKeyLastUsed",
        "iam:GetAccountAuthorizationDetails",
        "iam:GetAccountEmailAddress",
        "iam:GetAccountName",
        "iam:GetAccountPasswordPolicy",
        "iam:GetAccountSummary",
        "iam:GetCloudFrontPublicKey",
        "iam:GetContextKeysForCustomPolicy",
        "iam:GetContextKeysForPrincipalPolicy",
        "iam:GetCredentialReport",
        "iam:GetGroup",
        "iam:GetGroupPolicy",
        "iam:GetInstanceProfile",
        "iam:GetLoginProfile",
        "iam:GetMFADevice",
        "iam:GetOpenIDConnectProvider",
        "iam:GetOrganizationsAccessReport",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:GetSAMLProvider",
        "iam:GetSSHPublicKey",
        "iam:GetServerCertificate",
        "iam:GetServiceLastAccessedDetails",
        "iam:GetServiceLastAccessedDetailsWithEntities",
        "iam:GetServiceLinkedRoleDeletionStatus",
        "iam:GetUser",
        "iam:GetUserPolicy",
        "iam:ListAccessKeys",
        "iam:ListAccountAliases",
        "iam:ListAttachedGroupPolicies",
        "iam:ListAttachedRolePolicies",
        "iam:ListAttachedUserPolicies",
        "iam:ListCloudFrontPublicKeys",
        "iam:ListEntitiesForPolicy",
        "iam:ListGroupPolicies",
        "iam:ListGroups",
        "iam:ListGroupsForUser",
        "iam:ListInstanceProfileTags",
        "iam:ListInstanceProfiles",
        "iam:ListInstanceProfilesForRole",
        "iam:ListMFADeviceTags",
        "iam:ListMFADevices",
        "iam:ListOpenIDConnectProviderTags",
        "iam:ListOpenIDConnectProviders",
        "iam:ListPolicies",
        "iam:ListPoliciesGrantingServiceAccess",
        "iam:ListPolicyTags",
        "iam:ListPolicyVersions",
        "iam:ListRolePolicies",
        "iam:ListRoleTags",
        "iam:ListRoles",
        "iam:ListSAMLProviderTags",
        "iam:ListSAMLProviders",
        "iam:ListSSHPublicKeys",
        "iam:ListSTSRegionalEndpointsStatus",
        "iam:ListServerCertificateTags",
        "iam:ListServerCertificates",
        "iam:ListServiceSpecificCredentials",
        "iam:ListSigningCertificates",
        "iam:ListUserPolicies",
        "iam:ListUserTags",
        "iam:ListUsers",
        "iam:ListVirtualMFADevices",
        "iam:PassRole",
        "iam:PutGroupPolicy",
        "iam:PutRolePermissionsBoundary",
        "iam:PutRolePolicy",
        "iam:PutUserPermissionsBoundary",
        "iam:PutUserPolicy",
        "iam:RemoveClientIDFromOpenIDConnectProvider",
        "iam:RemoveRoleFromInstanceProfile",
        "iam:RemoveUserFromGroup",
        "iam:ResetServiceSpecificCredential",
        "iam:ResyncMFADevice",
        "iam:SetDefaultPolicyVersion",
        "iam:SetSTSRegionalEndpointStatus",
        "iam:SetSecurityTokenServicePreferences",
        "iam:SimulateCustomPolicy",
        "iam:SimulatePrincipalPolicy",
        "iam:TagInstanceProfile",
        "iam:TagMFADevice",
        "iam:TagOpenIDConnectProvider",
        "iam:TagPolicy",
        "iam:TagRole",
        "iam:TagSAMLProvider",
        "iam:TagServerCertificate",
        "iam:TagUser",
        "iam:UntagInstanceProfile",
        "iam:UntagMFADevice",
        "iam:UntagOpenIDConnectProvider",
        "iam:UntagPolicy",
        "iam:UntagRole",
        "iam:UntagSAMLProvider",
        "iam:UntagServerCertificate",
        "iam:UntagUser",
        "iam:UpdateAccessKey",
        "iam:UpdateAccountEmailAddress",
        "iam:UpdateAccountName",
        "iam:UpdateAccountPasswordPolicy",
        "iam:UpdateAssumeRolePolicy",
        "iam:UpdateCloudFrontPublicKey",
        "iam:UpdateGroup",
        "iam:UpdateLoginProfile",
        "iam:UpdateOpenIDConnectProviderThumbprint",
        "iam:UpdateRole",
        "iam:UpdateRoleDescription",
        "iam:UpdateSAMLProvider",
        "iam:UpdateSSHPublicKey",
        "iam:UpdateServerCertificate",
        "iam:UpdateServiceSpecificCredential",
        "iam:UpdateSigningCertificate",
        "iam:UpdateUser",
        "iam:UploadCloudFrontPublicKey",
        "iam:UploadSSHPublicKey",
        "iam:UploadServerCertificate",
        "iam:UploadSigningCertificate"
      ]
    },
    "removedActions": {
      "AWS Identity and Access Management": [
        "iam:AddClientIDToOpenIDConnectProvider",
        "iam:AddRoleToInstanceProfile",
        "iam:AddUserToGroup",
        "iam:AttachGroupPolicy",
        "iam:AttachRolePolicy",
        "iam:AttachUserPolicy",
        "iam:ChangePassword",
        "iam:CreateAccessKey",
        "iam:CreateAccountAlias",
        "iam:CreateGroup",
        "iam:CreateInstanceProfile",
        "iam:CreateLoginProfile",
        "iam:CreateOpenIDConnectProvider",
        "iam:CreatePolicy",
        "iam:CreatePolicyVersion",
        "iam:CreateRole",
        "iam:CreateSAMLProvider",
        "iam:CreateServiceLinkedRole",
        "iam:CreateServiceSpecificCredential",
        "iam:CreateUser",
        "iam:CreateVirtualMFADevice",
        "iam:DeactivateMFADevice",
        "iam:DeleteAccessKey",
        "iam:DeleteAccountAlias",
        "iam:DeleteAccountPasswordPolicy",
        "iam:DeleteCloudFrontPublicKey",
        "iam:DeleteGroup",
        "iam:DeleteGroupPolicy",
        "iam:DeleteInstanceProfile",
        "iam:DeleteLoginProfile",
        "iam:DeleteOpenIDConnectProvider",
        "iam:DeletePolicy",
        "iam:DeletePolicyVersion",
        "iam:DeleteRole",
        "iam:DeleteRolePermissionsBoundary",
        "iam:DeleteRolePolicy",
        "iam:DeleteSAMLProvider",
        "iam:DeleteSSHPublicKey",
        "iam:DeleteServerCertificate",
        "iam:DeleteServiceLinkedRole",
        "iam:DeleteServiceSpecificCredential",
        "iam:DeleteSigningCertificate",
        "iam:DeleteUser",
        "iam:DeleteUserPermissionsBoundary",
        "iam:DeleteUserPolicy",
        "iam:DeleteVirtualMFADevice",
        "iam:DetachGroupPolicy",
        "iam:DetachRolePolicy",
        "iam:DetachUserPolicy",
        "iam:EnableMFADevice",
        "iam:GenerateCredentialReport",
        "iam:GenerateOrganizationsAccessReport",
        "iam:GenerateServiceLastAccessedDetails",
        "iam:GetAccessKeyLastUsed",
        "iam:GetAccountAuthorizationDetails",
        "iam:GetAccountEmailAddress",
        "iam:GetAccountName",
        "iam:GetAccountPasswordPolicy",
        "iam:GetAccountSummary",
        "iam:GetCloudFrontPublicKey",
        "iam:GetContextKeysForCustomPolicy",
        "iam:GetContextKeysForPrincipalPolicy",
        "iam:GetCredentialReport",
        "iam:GetGroup",
        "iam:GetGroupPolicy",
        "iam:GetInstanceProfile",
        "iam:GetLoginProfile",
        "iam:GetOpenIDConnectProvider",
        "iam:GetOrganizationsAccessReport",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:GetSAMLProvider",
        "iam:GetSSHPublicKey",
        "iam:GetServerCertificate",
        "iam:GetServiceLastAccessedDetails",
        "iam:GetServiceLastAccessedDetailsWithEntities",
        "iam:GetServiceLinkedRoleDeletionStatus",
        "iam:GetUser",
        "iam:GetUserPolicy",
        "iam:ListAccessKeys",
        "iam:ListAccountAliases",
        "iam:ListAttachedGroupPolicies",
        "iam:ListAttachedRolePolicies",
        "iam:ListAttachedUserPolicies",
        "iam:ListCloudFrontPublicKeys",
        "iam:ListEntitiesForPolicy",
        "iam:ListGroupPolicies",
        "iam:ListGroups",
        "iam:ListGroupsForUser",
        "iam:ListInstanceProfileTags",
        "iam:ListInstanceProfiles",
        "iam:ListInstanceProfilesForRole",
        "iam:ListMFADeviceTags",
        "iam:ListMFADevices",
        "iam:ListOpenIDConnectProviderTags",
        "iam:ListOpenIDConnectProviders",
        "iam:ListPolicies",
        "iam:ListPoliciesGrantingServiceAccess",
        "iam:ListPolicyTags",
        "iam:ListPolicyVersions",
        "iam:ListRolePolicies",
        "iam:ListRoleTags",
        "iam:ListRoles",
        "iam:ListSAMLProviderTags",
        "iam:ListSAMLProviders",
        "iam:ListSSHPublicKeys",
        "iam:ListSTSRegionalEndpointsStatus",
        "iam:ListServerCertificateTags",
        "iam:ListServerCertificates",
        "iam:ListServiceSpecificCredentials",
        "iam:ListSigningCertificates",
        "iam:ListUserPolicies",
        "iam:ListUserTags",
        "iam:ListUsers",
        "iam:ListVirtualMFADevices",
        "iam:PassRole",
        "iam:PutGroupPolicy",
        "iam:PutRolePermissionsBoundary",
        "iam:PutRolePolicy",
        "iam:PutUserPermissionsBoundary",
        "iam:PutUserPolicy",
        "iam:RemoveClientIDFromOpenIDConnectProvider",
        "iam:RemoveRoleFromInstanceProfile",
        "iam:RemoveUserFromGroup",
        "iam:ResetServiceSpecificCredential",
        "iam:ResyncMFADevice",
        "iam:SetDefaultPolicyVersion",
        "iam:SetSTSRegionalEndpointStatus",
        "iam:SetSecurityTokenServicePreferences",
        "iam:SimulateCustomPolicy",
        "iam:SimulatePrincipalPolicy",
        "iam:TagInstanceProfile",
        "iam:TagMFADevice",
        "iam:TagOpenIDConnectProvider",
        "iam:TagPolicy",
        "iam:TagRole",
        "iam:TagSAMLProvider",
        "iam:TagServerCertificate",
        "iam:TagUser",
        "iam:UntagInstanceProfile",
        "iam:UntagMFADevice",
        "iam:UntagOpenIDConnectProvider",
        "iam:UntagPolicy",
        "iam:UntagRole",
        "iam:UntagSAMLProvider",
        "iam:UntagServerCertificate",
        "iam:UntagUser",
        "iam:UpdateAccessKey",
        "iam:UpdateAccountEmailAddress",
        "iam:UpdateAccountName",
        "iam:UpdateAccountPasswordPolicy",
        "iam:UpdateAssumeRolePolicy",
        "iam:UpdateCloudFrontPublicKey",
        "iam:UpdateGroup",
        "iam:UpdateLoginProfile",
        "iam:UpdateOpenIDConnectProviderThumbprint",
        "iam:UpdateRole",
        "iam:UpdateRoleDescription",
        "iam:UpdateSAMLProvider",
        "iam:UpdateSSHPublicKey",
        "iam:UpdateServerCertificate",
        "iam:UpdateServiceSpecificCredential",
        "iam:UpdateSigningCertificate",
        "iam:UpdateUser",
        "iam:UploadCloudFrontPublicKey",
        "iam:UploadSSHPublicKey",
        "iam:UploadServerCertificate",
        "iam:UploadSigningCertificate"
      ]
    }
  },
  {
    "dateOfChange": "2023-06-22",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Audit Manager": [
        "auditmanager:GetEvidenceFileUploadUrl"
      ],
      "Amazon EC2": [
        "ec2:CreateInstanceConnectEndpoint",
        "ec2:DeleteInstanceConnectEndpoint",
        "ec2:DescribeInstanceConnectEndpoints"
      ],
      "AWS Support": [
        "support:DescribeCreateCaseOptions",
        "support:DescribeSupportedLanguages"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-21",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Application Migration Service": [
        "mgn:ListManagedAccounts",
        "mgn:PauseReplication",
        "mgn:ResumeReplication",
        "mgn:StopReplication"
      ],
      "AWS Purchase Orders Console": [
        "purchase-orders:ListTagsForResource",
        "purchase-orders:TagResource",
        "purchase-orders:UntagResource"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-20",
    "addedServices": [
      "AWS Payment Cryptography"
    ],
    "removedServices": [],
    "addedActions": {
      "Amazon CloudWatch Logs": [
        "logs:DeleteAccountPolicy",
        "logs:DescribeAccountPolicies",
        "logs:PutAccountPolicy"
      ],
      "AWS Database Migration Service": [
        "dms:DescribeConversionConfiguration",
        "dms:DescribeDataProviders",
        "dms:DescribeExtensionPackAssociations",
        "dms:DescribeInstanceProfiles",
        "dms:DescribeMetadataModelAssessments",
        "dms:DescribeMetadataModelConversions",
        "dms:DescribeMetadataModelExportsAsScript",
        "dms:DescribeMetadataModelExportsToTarget",
        "dms:DescribeMetadataModelImports",
        "dms:DescribeMigrationProjects",
        "dms:ModifyConversionConfiguration",
        "dms:ModifyDataProvider",
        "dms:ModifyInstanceProfile",
        "dms:ModifyMigrationProject",
        "dms:StartExtensionPackAssociation",
        "dms:StartMetadataModelExportAsScript"
      ],
      "AWS Payment Cryptography": [
        "payment-cryptography:CreateAlias",
        "payment-cryptography:CreateKey",
        "payment-cryptography:DecryptData",
        "payment-cryptography:DeleteAlias",
        "payment-cryptography:DeleteKey",
        "payment-cryptography:EncryptData",
        "payment-cryptography:ExportKey",
        "payment-cryptography:GenerateCardValidationData",
        "payment-cryptography:GenerateMac",
        "payment-cryptography:GeneratePinData",
        "payment-cryptography:GetAlias",
        "payment-cryptography:GetKey",
        "payment-cryptography:GetParametersForExport",
        "payment-cryptography:GetParametersForImport",
        "payment-cryptography:GetPublicKeyCertificate",
        "payment-cryptography:ImportKey",
        "payment-cryptography:ListAliases",
        "payment-cryptography:ListKeys",
        "payment-cryptography:ListTagsForResource",
        "payment-cryptography:ReEncryptData",
        "payment-cryptography:RestoreKey",
        "payment-cryptography:StartKeyUsage",
        "payment-cryptography:StopKeyUsage",
        "payment-cryptography:TagResource",
        "payment-cryptography:TranslatePinData",
        "payment-cryptography:UntagResource",
        "payment-cryptography:UpdateAlias",
        "payment-cryptography:VerifyAuthRequestCryptogram",
        "payment-cryptography:VerifyCardValidationData",
        "payment-cryptography:VerifyMac",
        "payment-cryptography:VerifyPinData"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-17",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS DataSync": [
        "datasync:UpdateDiscoveryJob"
      ],
      "Amazon QuickSight": [
        "quicksight:ListCustomerManagedKeys",
        "quicksight:ListKMSKeysForUser",
        "quicksight:RegisterCustomerManagedKey",
        "quicksight:RemoveCustomerManagedKey"
      ],
      "Amazon Rekognition": [
        "rekognition:AssociateFaces",
        "rekognition:CreateUser",
        "rekognition:DeleteUser",
        "rekognition:DisassociateFaces",
        "rekognition:ListUsers",
        "rekognition:SearchUsers",
        "rekognition:SearchUsersByImage"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-16",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon EC2 Instance Connect": [
        "ec2-instance-connect:OpenTunnel"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-15",
    "addedServices": [
      "Amazon Verified Permissions"
    ],
    "removedServices": [],
    "addedActions": {
      "AWS Elastic Disaster Recovery": [
        "drs:AssociateSourceNetworkStack",
        "drs:CreateSourceNetwork",
        "drs:DeleteSourceNetwork",
        "drs:DescribeSourceNetworks",
        "drs:ExportSourceNetworkCfnTemplate",
        "drs:StartSourceNetworkRecovery",
        "drs:StartSourceNetworkReplication",
        "drs:StopSourceNetworkReplication"
      ],
      "Amazon Inspector2": [
        "inspector2:CancelSbomExport",
        "inspector2:CreateSbomExport",
        "inspector2:GetEncryptionKey",
        "inspector2:GetSbomExport",
        "inspector2:ResetEncryptionKey",
        "inspector2:UpdateEncryptionKey"
      ],
      "AWS Security Hub": [
        "securityhub:BatchDeleteAutomationRules",
        "securityhub:BatchGetAutomationRules",
        "securityhub:BatchUpdateAutomationRules",
        "securityhub:CreateAutomationRule",
        "securityhub:ListAutomationRules"
      ],
      "AWS Well-Architected Tool": [
        "wellarchitected:AssociateProfiles",
        "wellarchitected:CreateProfile",
        "wellarchitected:CreateProfileShare",
        "wellarchitected:DeleteProfile",
        "wellarchitected:DeleteProfileShare",
        "wellarchitected:DisassociateProfiles",
        "wellarchitected:GetProfile",
        "wellarchitected:GetProfileTemplate",
        "wellarchitected:ListProfileNotifications",
        "wellarchitected:ListProfileShares",
        "wellarchitected:ListProfiles",
        "wellarchitected:UpdateProfile",
        "wellarchitected:UpgradeProfileVersion"
      ],
      "Amazon Verified Permissions": [
        "verifiedpermissions:CreateIdentitySource",
        "verifiedpermissions:CreatePolicy",
        "verifiedpermissions:CreatePolicyStore",
        "verifiedpermissions:CreatePolicyTemplate",
        "verifiedpermissions:DeleteIdentitySource",
        "verifiedpermissions:DeletePolicy",
        "verifiedpermissions:DeletePolicyStore",
        "verifiedpermissions:DeletePolicyTemplate",
        "verifiedpermissions:GetIdentitySource",
        "verifiedpermissions:GetPolicy",
        "verifiedpermissions:GetPolicyStore",
        "verifiedpermissions:GetPolicyTemplate",
        "verifiedpermissions:GetSchema",
        "verifiedpermissions:IsAuthorized",
        "verifiedpermissions:IsAuthorizedWithToken",
        "verifiedpermissions:ListIdentitySources",
        "verifiedpermissions:ListPolicies",
        "verifiedpermissions:ListPolicyStores",
        "verifiedpermissions:ListPolicyTemplates",
        "verifiedpermissions:PutSchema",
        "verifiedpermissions:UpdateIdentitySource",
        "verifiedpermissions:UpdatePolicy",
        "verifiedpermissions:UpdatePolicyStore",
        "verifiedpermissions:UpdatePolicyTemplate"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-13",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon CodeGuru Security": [
        "codeguru-security:GetMetricsSummary",
        "codeguru-security:ListFindingsMetrics",
        "codeguru-security:ListTagsForResource",
        "codeguru-security:TagResource",
        "codeguru-security:UntagResource"
      ],
      "Amazon Connect": [
        "connect:SearchHoursOfOperations",
        "connect:SearchPrompts",
        "connect:SearchQuickConnects"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-10",
    "addedServices": [
      "AWS Elastic Load Balancing V2"
    ],
    "removedServices": [
      "Elastic Load Balancing V2"
    ],
    "addedActions": {
      "Amazon Connect Customer Profiles": [
        "profile:CreateCalculatedAttributeDefinition",
        "profile:CreateEventStream",
        "profile:DeleteCalculatedAttributeDefinition",
        "profile:DeleteEventStream",
        "profile:GetCalculatedAttributeDefinition",
        "profile:GetCalculatedAttributeForProfile",
        "profile:GetEventStream",
        "profile:ListCalculatedAttributeDefinitions",
        "profile:ListCalculatedAttributesForProfile",
        "profile:ListEventStreams",
        "profile:UpdateCalculatedAttributeDefinition"
      ],
      "Amazon SQS": [
        "sqs:CancelMessageMoveTask",
        "sqs:ListMessageMoveTasks",
        "sqs:StartMessageMoveTask"
      ],
      "AWS Elastic Load Balancing V2": [
        "elasticloadbalancing:AddListenerCertificates",
        "elasticloadbalancing:AddTags",
        "elasticloadbalancing:CreateListener",
        "elasticloadbalancing:CreateLoadBalancer",
        "elasticloadbalancing:CreateRule",
        "elasticloadbalancing:CreateTargetGroup",
        "elasticloadbalancing:DeleteListener",
        "elasticloadbalancing:DeleteLoadBalancer",
        "elasticloadbalancing:DeleteRule",
        "elasticloadbalancing:DeleteTargetGroup",
        "elasticloadbalancing:DeregisterTargets",
        "elasticloadbalancing:DescribeAccountLimits",
        "elasticloadbalancing:DescribeListenerCertificates",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:DescribeRules",
        "elasticloadbalancing:DescribeSSLPolicies",
        "elasticloadbalancing:DescribeTags",
        "elasticloadbalancing:DescribeTargetGroupAttributes",
        "elasticloadbalancing:DescribeTargetGroups",
        "elasticloadbalancing:DescribeTargetHealth",
        "elasticloadbalancing:ModifyListener",
        "elasticloadbalancing:ModifyLoadBalancerAttributes",
        "elasticloadbalancing:ModifyRule",
        "elasticloadbalancing:ModifyTargetGroup",
        "elasticloadbalancing:ModifyTargetGroupAttributes",
        "elasticloadbalancing:RegisterTargets",
        "elasticloadbalancing:RemoveListenerCertificates",
        "elasticloadbalancing:RemoveTags",
        "elasticloadbalancing:SetIpAddressType",
        "elasticloadbalancing:SetRulePriorities",
        "elasticloadbalancing:SetSecurityGroups",
        "elasticloadbalancing:SetSubnets",
        "elasticloadbalancing:SetWebAcl"
      ]
    },
    "removedActions": {
      "Elastic Load Balancing V2": [
        "elasticloadbalancing:AddListenerCertificates",
        "elasticloadbalancing:AddTags",
        "elasticloadbalancing:CreateListener",
        "elasticloadbalancing:CreateLoadBalancer",
        "elasticloadbalancing:CreateRule",
        "elasticloadbalancing:CreateTargetGroup",
        "elasticloadbalancing:DeleteListener",
        "elasticloadbalancing:DeleteLoadBalancer",
        "elasticloadbalancing:DeleteRule",
        "elasticloadbalancing:DeleteTargetGroup",
        "elasticloadbalancing:DeregisterTargets",
        "elasticloadbalancing:DescribeAccountLimits",
        "elasticloadbalancing:DescribeListenerCertificates",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:DescribeRules",
        "elasticloadbalancing:DescribeSSLPolicies",
        "elasticloadbalancing:DescribeTags",
        "elasticloadbalancing:DescribeTargetGroupAttributes",
        "elasticloadbalancing:DescribeTargetGroups",
        "elasticloadbalancing:DescribeTargetHealth",
        "elasticloadbalancing:ModifyListener",
        "elasticloadbalancing:ModifyLoadBalancerAttributes",
        "elasticloadbalancing:ModifyRule",
        "elasticloadbalancing:ModifyTargetGroup",
        "elasticloadbalancing:ModifyTargetGroupAttributes",
        "elasticloadbalancing:RegisterTargets",
        "elasticloadbalancing:RemoveListenerCertificates",
        "elasticloadbalancing:RemoveTags",
        "elasticloadbalancing:SetIpAddressType",
        "elasticloadbalancing:SetRulePriorities",
        "elasticloadbalancing:SetSecurityGroups",
        "elasticloadbalancing:SetSubnets",
        "elasticloadbalancing:SetWebAcl"
      ]
    }
  },
  {
    "dateOfChange": "2023-06-09",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {},
    "removedActions": {
      "Amazon CloudFront": [
        "cloudfront:UpdateDistributionWithStagingConfig"
      ]
    }
  },
  {
    "dateOfChange": "2023-06-08",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon FinSpace": [
        "finspace:ConnectKxCluster",
        "finspace:CreateKxChangeset",
        "finspace:CreateKxCluster",
        "finspace:CreateKxDatabase",
        "finspace:CreateKxEnvironment",
        "finspace:CreateKxUser",
        "finspace:DeleteKxCluster",
        "finspace:DeleteKxDatabase",
        "finspace:DeleteKxEnvironment",
        "finspace:DeleteKxUser",
        "finspace:GetKxChangeset",
        "finspace:GetKxCluster",
        "finspace:GetKxConnectionString",
        "finspace:GetKxDatabase",
        "finspace:GetKxEnvironment",
        "finspace:GetKxUser",
        "finspace:ListKxChangesets",
        "finspace:ListKxClusterNodes",
        "finspace:ListKxClusters",
        "finspace:ListKxDatabases",
        "finspace:ListKxEnvironments",
        "finspace:ListKxUsers",
        "finspace:MountKxDatabase",
        "finspace:UpdateKxClusterDatabases",
        "finspace:UpdateKxDatabase",
        "finspace:UpdateKxEnvironment",
        "finspace:UpdateKxEnvironmentNetwork",
        "finspace:UpdateKxUser"
      ],
      "AWS IoT": [
        "iot:CreatePackage",
        "iot:CreatePackageVersion",
        "iot:DeletePackage",
        "iot:DeletePackageVersion",
        "iot:GetPackage",
        "iot:GetPackageConfiguration",
        "iot:GetPackageVersion",
        "iot:ListPackageVersions",
        "iot:ListPackages",
        "iot:UpdatePackage",
        "iot:UpdatePackageConfiguration",
        "iot:UpdatePackageVersion"
      ],
      "AWS Signer": [
        "signer:GetRevocationStatus",
        "signer:SignPayload"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-07",
    "addedServices": [
      "Amazon EC2"
    ],
    "removedServices": [
      "Amazon Elastic Compute Cloud (EC2)"
    ],
    "addedActions": {
      "Amazon CloudWatch Logs": [
        "logs:StartLiveTail",
        "logs:StopLiveTail"
      ],
      "AWS WAF V2": [
        "wafv2:DescribeAllManagedProducts",
        "wafv2:DescribeManagedProductsByVendor"
      ],
      "Amazon EC2": [
        "ec2:AcceptAddressTransfer",
        "ec2:AcceptReservedInstancesExchangeQuote",
        "ec2:AcceptTransitGatewayMulticastDomainAssociations",
        "ec2:AcceptTransitGatewayPeeringAttachment",
        "ec2:AcceptTransitGatewayVpcAttachment",
        "ec2:AcceptVpcEndpointConnections",
        "ec2:AcceptVpcPeeringConnection",
        "ec2:AdvertiseByoipCidr",
        "ec2:AllocateAddress",
        "ec2:AllocateHosts",
        "ec2:AllocateIpamPoolCidr",
        "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
        "ec2:AssignIpv6Addresses",
        "ec2:AssignPrivateIpAddresses",
        "ec2:AssignPrivateNatGatewayAddress",
        "ec2:AssociateAddress",
        "ec2:AssociateClientVpnTargetNetwork",
        "ec2:AssociateDhcpOptions",
        "ec2:AssociateEnclaveCertificateIamRole",
        "ec2:AssociateIamInstanceProfile",
        "ec2:AssociateInstanceEventWindow",
        "ec2:AssociateIpamResourceDiscovery",
        "ec2:AssociateNatGatewayAddress",
        "ec2:AssociateRouteTable",
        "ec2:AssociateSubnetCidrBlock",
        "ec2:AssociateTransitGatewayMulticastDomain",
        "ec2:AssociateTransitGatewayPolicyTable",
        "ec2:AssociateTransitGatewayRouteTable",
        "ec2:AssociateTrunkInterface",
        "ec2:AssociateVerifiedAccessInstanceWebAcl",
        "ec2:AssociateVpcCidrBlock",
        "ec2:AttachClassicLinkVpc",
        "ec2:AttachInternetGateway",
        "ec2:AttachNetworkInterface",
        "ec2:AttachVerifiedAccessTrustProvider",
        "ec2:AttachVolume",
        "ec2:AttachVpnGateway",
        "ec2:AuthorizeClientVpnIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:BundleInstance",
        "ec2:CancelBundleTask",
        "ec2:CancelCapacityReservation",
        "ec2:CancelCapacityReservationFleets",
        "ec2:CancelConversionTask",
        "ec2:CancelExportTask",
        "ec2:CancelImageLaunchPermission",
        "ec2:CancelImportTask",
        "ec2:CancelReservedInstancesListing",
        "ec2:CancelSpotFleetRequests",
        "ec2:CancelSpotInstanceRequests",
        "ec2:ConfirmProductInstance",
        "ec2:CopyFpgaImage",
        "ec2:CopyImage",
        "ec2:CopySnapshot",
        "ec2:CreateCapacityReservation",
        "ec2:CreateCapacityReservationFleet",
        "ec2:CreateCarrierGateway",
        "ec2:CreateClientVpnEndpoint",
        "ec2:CreateClientVpnRoute",
        "ec2:CreateCoipCidr",
        "ec2:CreateCoipPool",
        "ec2:CreateCoipPoolPermission",
        "ec2:CreateCustomerGateway",
        "ec2:CreateDefaultSubnet",
        "ec2:CreateDefaultVpc",
        "ec2:CreateDhcpOptions",
        "ec2:CreateEgressOnlyInternetGateway",
        "ec2:CreateFleet",
        "ec2:CreateFlowLogs",
        "ec2:CreateFpgaImage",
        "ec2:CreateImage",
        "ec2:CreateInstanceEventWindow",
        "ec2:CreateInstanceExportTask",
        "ec2:CreateInternetGateway",
        "ec2:CreateIpam",
        "ec2:CreateIpamPool",
        "ec2:CreateIpamResourceDiscovery",
        "ec2:CreateIpamScope",
        "ec2:CreateKeyPair",
        "ec2:CreateLaunchTemplate",
        "ec2:CreateLaunchTemplateVersion",
        "ec2:CreateLocalGatewayRoute",
        "ec2:CreateLocalGatewayRouteTable",
        "ec2:CreateLocalGatewayRouteTablePermission",
        "ec2:CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
        "ec2:CreateLocalGatewayRouteTableVpcAssociation",
        "ec2:CreateManagedPrefixList",
        "ec2:CreateNatGateway",
        "ec2:CreateNetworkAcl",
        "ec2:CreateNetworkAclEntry",
        "ec2:CreateNetworkInsightsAccessScope",
        "ec2:CreateNetworkInsightsPath",
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:CreatePlacementGroup",
        "ec2:CreatePublicIpv4Pool",
        "ec2:CreateReplaceRootVolumeTask",
        "ec2:CreateReservedInstancesListing",
        "ec2:CreateRestoreImageTask",
        "ec2:CreateRoute",
        "ec2:CreateRouteTable",
        "ec2:CreateSecurityGroup",
        "ec2:CreateSnapshot",
        "ec2:CreateSnapshots",
        "ec2:CreateSpotDatafeedSubscription",
        "ec2:CreateStoreImageTask",
        "ec2:CreateSubnet",
        "ec2:CreateSubnetCidrReservation",
        "ec2:CreateTags",
        "ec2:CreateTrafficMirrorFilter",
        "ec2:CreateTrafficMirrorFilterRule",
        "ec2:CreateTrafficMirrorSession",
        "ec2:CreateTrafficMirrorTarget",
        "ec2:CreateTransitGateway",
        "ec2:CreateTransitGatewayConnect",
        "ec2:CreateTransitGatewayConnectPeer",
        "ec2:CreateTransitGatewayMulticastDomain",
        "ec2:CreateTransitGatewayPeeringAttachment",
        "ec2:CreateTransitGatewayPolicyTable",
        "ec2:CreateTransitGatewayPrefixListReference",
        "ec2:CreateTransitGatewayRoute",
        "ec2:CreateTransitGatewayRouteTable",
        "ec2:CreateTransitGatewayRouteTableAnnouncement",
        "ec2:CreateTransitGatewayVpcAttachment",
        "ec2:CreateVerifiedAccessEndpoint",
        "ec2:CreateVerifiedAccessGroup",
        "ec2:CreateVerifiedAccessInstance",
        "ec2:CreateVerifiedAccessTrustProvider",
        "ec2:CreateVolume",
        "ec2:CreateVpc",
        "ec2:CreateVpcEndpoint",
        "ec2:CreateVpcEndpointConnectionNotification",
        "ec2:CreateVpcEndpointServiceConfiguration",
        "ec2:CreateVpcPeeringConnection",
        "ec2:CreateVpnConnection",
        "ec2:CreateVpnConnectionRoute",
        "ec2:CreateVpnGateway",
        "ec2:DeleteCarrierGateway",
        "ec2:DeleteClientVpnEndpoint",
        "ec2:DeleteClientVpnRoute",
        "ec2:DeleteCoipCidr",
        "ec2:DeleteCoipPool",
        "ec2:DeleteCoipPoolPermission",
        "ec2:DeleteCustomerGateway",
        "ec2:DeleteDhcpOptions",
        "ec2:DeleteEgressOnlyInternetGateway",
        "ec2:DeleteFleets",
        "ec2:DeleteFlowLogs",
        "ec2:DeleteFpgaImage",
        "ec2:DeleteInstanceEventWindow",
        "ec2:DeleteInternetGateway",
        "ec2:DeleteIpam",
        "ec2:DeleteIpamPool",
        "ec2:DeleteIpamResourceDiscovery",
        "ec2:DeleteIpamScope",
        "ec2:DeleteKeyPair",
        "ec2:DeleteLaunchTemplate",
        "ec2:DeleteLaunchTemplateVersions",
        "ec2:DeleteLocalGatewayRoute",
        "ec2:DeleteLocalGatewayRouteTable",
        "ec2:DeleteLocalGatewayRouteTablePermission",
        "ec2:DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
        "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
        "ec2:DeleteManagedPrefixList",
        "ec2:DeleteNatGateway",
        "ec2:DeleteNetworkAcl",
        "ec2:DeleteNetworkAclEntry",
        "ec2:DeleteNetworkInsightsAccessScope",
        "ec2:DeleteNetworkInsightsAccessScopeAnalysis",
        "ec2:DeleteNetworkInsightsAnalysis",
        "ec2:DeleteNetworkInsightsPath",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:DeletePlacementGroup",
        "ec2:DeletePublicIpv4Pool",
        "ec2:DeleteQueuedReservedInstances",
        "ec2:DeleteResourcePolicy",
        "ec2:DeleteRoute",
        "ec2:DeleteRouteTable",
        "ec2:DeleteSecurityGroup",
        "ec2:DeleteSnapshot",
        "ec2:DeleteSpotDatafeedSubscription",
        "ec2:DeleteSubnet",
        "ec2:DeleteSubnetCidrReservation",
        "ec2:DeleteTags",
        "ec2:DeleteTrafficMirrorFilter",
        "ec2:DeleteTrafficMirrorFilterRule",
        "ec2:DeleteTrafficMirrorSession",
        "ec2:DeleteTrafficMirrorTarget",
        "ec2:DeleteTransitGateway",
        "ec2:DeleteTransitGatewayConnect",
        "ec2:DeleteTransitGatewayConnectPeer",
        "ec2:DeleteTransitGatewayMulticastDomain",
        "ec2:DeleteTransitGatewayPeeringAttachment",
        "ec2:DeleteTransitGatewayPolicyTable",
        "ec2:DeleteTransitGatewayPrefixListReference",
        "ec2:DeleteTransitGatewayRoute",
        "ec2:DeleteTransitGatewayRouteTable",
        "ec2:DeleteTransitGatewayRouteTableAnnouncement",
        "ec2:DeleteTransitGatewayVpcAttachment",
        "ec2:DeleteVerifiedAccessEndpoint",
        "ec2:DeleteVerifiedAccessGroup",
        "ec2:DeleteVerifiedAccessInstance",
        "ec2:DeleteVerifiedAccessTrustProvider",
        "ec2:DeleteVolume",
        "ec2:DeleteVpc",
        "ec2:DeleteVpcEndpointConnectionNotifications",
        "ec2:DeleteVpcEndpointServiceConfigurations",
        "ec2:DeleteVpcEndpoints",
        "ec2:DeleteVpcPeeringConnection",
        "ec2:DeleteVpnConnection",
        "ec2:DeleteVpnConnectionRoute",
        "ec2:DeleteVpnGateway",
        "ec2:DeprovisionByoipCidr",
        "ec2:DeprovisionIpamPoolCidr",
        "ec2:DeprovisionPublicIpv4PoolCidr",
        "ec2:DeregisterImage",
        "ec2:DeregisterInstanceEventNotificationAttributes",
        "ec2:DeregisterTransitGatewayMulticastGroupMembers",
        "ec2:DeregisterTransitGatewayMulticastGroupSources",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddressTransfers",
        "ec2:DescribeAddresses",
        "ec2:DescribeAddressesAttribute",
        "ec2:DescribeAggregateIdFormat",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeAwsNetworkPerformanceMetricSubscriptions",
        "ec2:DescribeBundleTasks",
        "ec2:DescribeByoipCidrs",
        "ec2:DescribeCapacityReservationFleets",
        "ec2:DescribeCapacityReservations",
        "ec2:DescribeCarrierGateways",
        "ec2:DescribeClassicLinkInstances",
        "ec2:DescribeClientVpnAuthorizationRules",
        "ec2:DescribeClientVpnConnections",
        "ec2:DescribeClientVpnEndpoints",
        "ec2:DescribeClientVpnRoutes",
        "ec2:DescribeClientVpnTargetNetworks",
        "ec2:DescribeCoipPools",
        "ec2:DescribeConversionTasks",
        "ec2:DescribeCustomerGateways",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeEgressOnlyInternetGateways",
        "ec2:DescribeElasticGpus",
        "ec2:DescribeExportImageTasks",
        "ec2:DescribeExportTasks",
        "ec2:DescribeFastLaunchImages",
        "ec2:DescribeFastSnapshotRestores",
        "ec2:DescribeFleetHistory",
        "ec2:DescribeFleetInstances",
        "ec2:DescribeFleets",
        "ec2:DescribeFlowLogs",
        "ec2:DescribeFpgaImageAttribute",
        "ec2:DescribeFpgaImages",
        "ec2:DescribeHostReservationOfferings",
        "ec2:DescribeHostReservations",
        "ec2:DescribeHosts",
        "ec2:DescribeIamInstanceProfileAssociations",
        "ec2:DescribeIdFormat",
        "ec2:DescribeIdentityIdFormat",
        "ec2:DescribeImageAttribute",
        "ec2:DescribeImages",
        "ec2:DescribeImportImageTasks",
        "ec2:DescribeImportSnapshotTasks",
        "ec2:DescribeInstanceAttribute",
        "ec2:DescribeInstanceCreditSpecifications",
        "ec2:DescribeInstanceEventNotificationAttributes",
        "ec2:DescribeInstanceEventWindows",
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeInstanceTypeOfferings",
        "ec2:DescribeInstanceTypes",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeIpamPools",
        "ec2:DescribeIpamResourceDiscoveries",
        "ec2:DescribeIpamResourceDiscoveryAssociations",
        "ec2:DescribeIpamScopes",
        "ec2:DescribeIpams",
        "ec2:DescribeIpv6Pools",
        "ec2:DescribeKeyPairs",
        "ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeLaunchTemplates",
        "ec2:DescribeLocalGatewayRouteTablePermissions",
        "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
        "ec2:DescribeLocalGatewayRouteTables",
        "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
        "ec2:DescribeLocalGatewayVirtualInterfaces",
        "ec2:DescribeLocalGateways",
        "ec2:DescribeManagedPrefixLists",
        "ec2:DescribeMovingAddresses",
        "ec2:DescribeNatGateways",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeNetworkInsightsAccessScopeAnalyses",
        "ec2:DescribeNetworkInsightsAccessScopes",
        "ec2:DescribeNetworkInsightsAnalyses",
        "ec2:DescribeNetworkInsightsPaths",
        "ec2:DescribeNetworkInterfaceAttribute",
        "ec2:DescribeNetworkInterfacePermissions",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribePlacementGroups",
        "ec2:DescribePrefixLists",
        "ec2:DescribePrincipalIdFormat",
        "ec2:DescribePublicIpv4Pools",
        "ec2:DescribeRegions",
        "ec2:DescribeReplaceRootVolumeTasks",
        "ec2:DescribeReservedInstances",
        "ec2:DescribeReservedInstancesListings",
        "ec2:DescribeReservedInstancesModifications",
        "ec2:DescribeReservedInstancesOfferings",
        "ec2:DescribeRouteTables",
        "ec2:DescribeScheduledInstanceAvailability",
        "ec2:DescribeScheduledInstances",
        "ec2:DescribeSecurityGroupReferences",
        "ec2:DescribeSecurityGroupRules",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSnapshotAttribute",
        "ec2:DescribeSnapshotTierStatus",
        "ec2:DescribeSnapshots",
        "ec2:DescribeSpotDatafeedSubscription",
        "ec2:DescribeSpotFleetInstances",
        "ec2:DescribeSpotFleetRequestHistory",
        "ec2:DescribeSpotFleetRequests",
        "ec2:DescribeSpotInstanceRequests",
        "ec2:DescribeSpotPriceHistory",
        "ec2:DescribeStaleSecurityGroups",
        "ec2:DescribeStoreImageTasks",
        "ec2:DescribeSubnets",
        "ec2:DescribeTags",
        "ec2:DescribeTrafficMirrorFilters",
        "ec2:DescribeTrafficMirrorSessions",
        "ec2:DescribeTrafficMirrorTargets",
        "ec2:DescribeTransitGatewayAttachments",
        "ec2:DescribeTransitGatewayConnectPeers",
        "ec2:DescribeTransitGatewayConnects",
        "ec2:DescribeTransitGatewayMulticastDomains",
        "ec2:DescribeTransitGatewayPeeringAttachments",
        "ec2:DescribeTransitGatewayPolicyTables",
        "ec2:DescribeTransitGatewayRouteTableAnnouncements",
        "ec2:DescribeTransitGatewayRouteTables",
        "ec2:DescribeTransitGatewayVpcAttachments",
        "ec2:DescribeTransitGateways",
        "ec2:DescribeTrunkInterfaceAssociations",
        "ec2:DescribeVerifiedAccessEndpoints",
        "ec2:DescribeVerifiedAccessGroups",
        "ec2:DescribeVerifiedAccessInstanceLoggingConfigurations",
        "ec2:DescribeVerifiedAccessInstanceWebAclAssociations",
        "ec2:DescribeVerifiedAccessInstances",
        "ec2:DescribeVerifiedAccessTrustProviders",
        "ec2:DescribeVolumeAttribute",
        "ec2:DescribeVolumeStatus",
        "ec2:DescribeVolumes",
        "ec2:DescribeVolumesModifications",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeVpcClassicLink",
        "ec2:DescribeVpcClassicLinkDnsSupport",
        "ec2:DescribeVpcEndpointConnectionNotifications",
        "ec2:DescribeVpcEndpointConnections",
        "ec2:DescribeVpcEndpointServiceConfigurations",
        "ec2:DescribeVpcEndpointServicePermissions",
        "ec2:DescribeVpcEndpointServices",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeVpnGateways",
        "ec2:DetachClassicLinkVpc",
        "ec2:DetachInternetGateway",
        "ec2:DetachNetworkInterface",
        "ec2:DetachVerifiedAccessTrustProvider",
        "ec2:DetachVolume",
        "ec2:DetachVpnGateway",
        "ec2:DisableAddressTransfer",
        "ec2:DisableAwsNetworkPerformanceMetricSubscription",
        "ec2:DisableEbsEncryptionByDefault",
        "ec2:DisableFastLaunch",
        "ec2:DisableFastSnapshotRestores",
        "ec2:DisableImageDeprecation",
        "ec2:DisableIpamOrganizationAdminAccount",
        "ec2:DisableSerialConsoleAccess",
        "ec2:DisableTransitGatewayRouteTablePropagation",
        "ec2:DisableVgwRoutePropagation",
        "ec2:DisableVpcClassicLink",
        "ec2:DisableVpcClassicLinkDnsSupport",
        "ec2:DisassociateAddress",
        "ec2:DisassociateClientVpnTargetNetwork",
        "ec2:DisassociateEnclaveCertificateIamRole",
        "ec2:DisassociateIamInstanceProfile",
        "ec2:DisassociateInstanceEventWindow",
        "ec2:DisassociateIpamResourceDiscovery",
        "ec2:DisassociateNatGatewayAddress",
        "ec2:DisassociateRouteTable",
        "ec2:DisassociateSubnetCidrBlock",
        "ec2:DisassociateTransitGatewayMulticastDomain",
        "ec2:DisassociateTransitGatewayPolicyTable",
        "ec2:DisassociateTransitGatewayRouteTable",
        "ec2:DisassociateTrunkInterface",
        "ec2:DisassociateVerifiedAccessInstanceWebAcl",
        "ec2:DisassociateVpcCidrBlock",
        "ec2:EnableAddressTransfer",
        "ec2:EnableAwsNetworkPerformanceMetricSubscription",
        "ec2:EnableEbsEncryptionByDefault",
        "ec2:EnableFastLaunch",
        "ec2:EnableFastSnapshotRestores",
        "ec2:EnableImageDeprecation",
        "ec2:EnableIpamOrganizationAdminAccount",
        "ec2:EnableReachabilityAnalyzerOrganizationSharing",
        "ec2:EnableSerialConsoleAccess",
        "ec2:EnableTransitGatewayRouteTablePropagation",
        "ec2:EnableVgwRoutePropagation",
        "ec2:EnableVolumeIO",
        "ec2:EnableVpcClassicLink",
        "ec2:EnableVpcClassicLinkDnsSupport",
        "ec2:ExportClientVpnClientCertificateRevocationList",
        "ec2:ExportClientVpnClientConfiguration",
        "ec2:ExportImage",
        "ec2:ExportTransitGatewayRoutes",
        "ec2:GetAssociatedEnclaveCertificateIamRoles",
        "ec2:GetAssociatedIpv6PoolCidrs",
        "ec2:GetAwsNetworkPerformanceData",
        "ec2:GetCapacityReservationUsage",
        "ec2:GetCoipPoolUsage",
        "ec2:GetConsoleOutput",
        "ec2:GetConsoleScreenshot",
        "ec2:GetDefaultCreditSpecification",
        "ec2:GetEbsDefaultKmsKeyId",
        "ec2:GetEbsEncryptionByDefault",
        "ec2:GetFlowLogsIntegrationTemplate",
        "ec2:GetGroupsForCapacityReservation",
        "ec2:GetHostReservationPurchasePreview",
        "ec2:GetInstanceTypesFromInstanceRequirements",
        "ec2:GetInstanceUefiData",
        "ec2:GetIpamAddressHistory",
        "ec2:GetIpamDiscoveredAccounts",
        "ec2:GetIpamDiscoveredResourceCidrs",
        "ec2:GetIpamPoolAllocations",
        "ec2:GetIpamPoolCidrs",
        "ec2:GetIpamResourceCidrs",
        "ec2:GetLaunchTemplateData",
        "ec2:GetManagedPrefixListAssociations",
        "ec2:GetManagedPrefixListEntries",
        "ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
        "ec2:GetNetworkInsightsAccessScopeContent",
        "ec2:GetPasswordData",
        "ec2:GetReservedInstancesExchangeQuote",
        "ec2:GetResourcePolicy",
        "ec2:GetSerialConsoleAccessStatus",
        "ec2:GetSpotPlacementScores",
        "ec2:GetSubnetCidrReservations",
        "ec2:GetTransitGatewayAttachmentPropagations",
        "ec2:GetTransitGatewayMulticastDomainAssociations",
        "ec2:GetTransitGatewayPolicyTableAssociations",
        "ec2:GetTransitGatewayPolicyTableEntries",
        "ec2:GetTransitGatewayPrefixListReferences",
        "ec2:GetTransitGatewayRouteTableAssociations",
        "ec2:GetTransitGatewayRouteTablePropagations",
        "ec2:GetVerifiedAccessEndpointPolicy",
        "ec2:GetVerifiedAccessGroupPolicy",
        "ec2:GetVerifiedAccessInstanceWebAcl",
        "ec2:GetVpnConnectionDeviceSampleConfiguration",
        "ec2:GetVpnConnectionDeviceTypes",
        "ec2:GetVpnTunnelReplacementStatus",
        "ec2:ImportByoipCidrToIpam",
        "ec2:ImportClientVpnClientCertificateRevocationList",
        "ec2:ImportImage",
        "ec2:ImportInstance",
        "ec2:ImportKeyPair",
        "ec2:ImportSnapshot",
        "ec2:ImportVolume",
        "ec2:ListImagesInRecycleBin",
        "ec2:ListSnapshotsInRecycleBin",
        "ec2:ModifyAddressAttribute",
        "ec2:ModifyAvailabilityZoneGroup",
        "ec2:ModifyCapacityReservation",
        "ec2:ModifyCapacityReservationFleet",
        "ec2:ModifyClientVpnEndpoint",
        "ec2:ModifyDefaultCreditSpecification",
        "ec2:ModifyEbsDefaultKmsKeyId",
        "ec2:ModifyFleet",
        "ec2:ModifyFpgaImageAttribute",
        "ec2:ModifyHosts",
        "ec2:ModifyIdFormat",
        "ec2:ModifyIdentityIdFormat",
        "ec2:ModifyImageAttribute",
        "ec2:ModifyInstanceAttribute",
        "ec2:ModifyInstanceCapacityReservationAttributes",
        "ec2:ModifyInstanceCreditSpecification",
        "ec2:ModifyInstanceEventStartTime",
        "ec2:ModifyInstanceEventWindow",
        "ec2:ModifyInstanceMaintenanceOptions",
        "ec2:ModifyInstanceMetadataOptions",
        "ec2:ModifyInstancePlacement",
        "ec2:ModifyIpam",
        "ec2:ModifyIpamPool",
        "ec2:ModifyIpamResourceCidr",
        "ec2:ModifyIpamResourceDiscovery",
        "ec2:ModifyIpamScope",
        "ec2:ModifyLaunchTemplate",
        "ec2:ModifyLocalGatewayRoute",
        "ec2:ModifyManagedPrefixList",
        "ec2:ModifyNetworkInterfaceAttribute",
        "ec2:ModifyPrivateDnsNameOptions",
        "ec2:ModifyReservedInstances",
        "ec2:ModifySecurityGroupRules",
        "ec2:ModifySnapshotAttribute",
        "ec2:ModifySnapshotTier",
        "ec2:ModifySpotFleetRequest",
        "ec2:ModifySubnetAttribute",
        "ec2:ModifyTrafficMirrorFilterNetworkServices",
        "ec2:ModifyTrafficMirrorFilterRule",
        "ec2:ModifyTrafficMirrorSession",
        "ec2:ModifyTransitGateway",
        "ec2:ModifyTransitGatewayPrefixListReference",
        "ec2:ModifyTransitGatewayVpcAttachment",
        "ec2:ModifyVerifiedAccessEndpoint",
        "ec2:ModifyVerifiedAccessEndpointPolicy",
        "ec2:ModifyVerifiedAccessGroup",
        "ec2:ModifyVerifiedAccessGroupPolicy",
        "ec2:ModifyVerifiedAccessInstance",
        "ec2:ModifyVerifiedAccessInstanceLoggingConfiguration",
        "ec2:ModifyVerifiedAccessTrustProvider",
        "ec2:ModifyVolume",
        "ec2:ModifyVolumeAttribute",
        "ec2:ModifyVpcAttribute",
        "ec2:ModifyVpcEndpoint",
        "ec2:ModifyVpcEndpointConnectionNotification",
        "ec2:ModifyVpcEndpointServiceConfiguration",
        "ec2:ModifyVpcEndpointServicePayerResponsibility",
        "ec2:ModifyVpcEndpointServicePermissions",
        "ec2:ModifyVpcPeeringConnectionOptions",
        "ec2:ModifyVpcTenancy",
        "ec2:ModifyVpnConnection",
        "ec2:ModifyVpnConnectionOptions",
        "ec2:ModifyVpnTunnelCertificate",
        "ec2:ModifyVpnTunnelOptions",
        "ec2:MonitorInstances",
        "ec2:MoveAddressToVpc",
        "ec2:MoveByoipCidrToIpam",
        "ec2:PauseVolumeIO",
        "ec2:ProvisionByoipCidr",
        "ec2:ProvisionIpamPoolCidr",
        "ec2:ProvisionPublicIpv4PoolCidr",
        "ec2:PurchaseHostReservation",
        "ec2:PurchaseReservedInstancesOffering",
        "ec2:PurchaseScheduledInstances",
        "ec2:PutResourcePolicy",
        "ec2:RebootInstances",
        "ec2:RegisterImage",
        "ec2:RegisterInstanceEventNotificationAttributes",
        "ec2:RegisterTransitGatewayMulticastGroupMembers",
        "ec2:RegisterTransitGatewayMulticastGroupSources",
        "ec2:RejectTransitGatewayMulticastDomainAssociations",
        "ec2:RejectTransitGatewayPeeringAttachment",
        "ec2:RejectTransitGatewayVpcAttachment",
        "ec2:RejectVpcEndpointConnections",
        "ec2:RejectVpcPeeringConnection",
        "ec2:ReleaseAddress",
        "ec2:ReleaseHosts",
        "ec2:ReleaseIpamPoolAllocation",
        "ec2:ReplaceIamInstanceProfileAssociation",
        "ec2:ReplaceNetworkAclAssociation",
        "ec2:ReplaceNetworkAclEntry",
        "ec2:ReplaceRoute",
        "ec2:ReplaceRouteTableAssociation",
        "ec2:ReplaceTransitGatewayRoute",
        "ec2:ReplaceVpnTunnel",
        "ec2:ReportInstanceStatus",
        "ec2:RequestSpotFleet",
        "ec2:RequestSpotInstances",
        "ec2:ResetAddressAttribute",
        "ec2:ResetEbsDefaultKmsKeyId",
        "ec2:ResetFpgaImageAttribute",
        "ec2:ResetImageAttribute",
        "ec2:ResetInstanceAttribute",
        "ec2:ResetNetworkInterfaceAttribute",
        "ec2:ResetSnapshotAttribute",
        "ec2:RestoreAddressToClassic",
        "ec2:RestoreImageFromRecycleBin",
        "ec2:RestoreManagedPrefixListVersion",
        "ec2:RestoreSnapshotFromRecycleBin",
        "ec2:RestoreSnapshotTier",
        "ec2:RevokeClientVpnIngress",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:RunInstances",
        "ec2:RunScheduledInstances",
        "ec2:SearchLocalGatewayRoutes",
        "ec2:SearchTransitGatewayMulticastGroups",
        "ec2:SearchTransitGatewayRoutes",
        "ec2:SendDiagnosticInterrupt",
        "ec2:SendSpotInstanceInterruptions",
        "ec2:StartInstances",
        "ec2:StartNetworkInsightsAccessScopeAnalysis",
        "ec2:StartNetworkInsightsAnalysis",
        "ec2:StartVpcEndpointServicePrivateDnsVerification",
        "ec2:StopInstances",
        "ec2:TerminateClientVpnConnections",
        "ec2:TerminateInstances",
        "ec2:UnassignIpv6Addresses",
        "ec2:UnassignPrivateIpAddresses",
        "ec2:UnassignPrivateNatGatewayAddress",
        "ec2:UnmonitorInstances",
        "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
        "ec2:WithdrawByoipCidr"
      ]
    },
    "removedActions": {
      "Amazon Elastic Compute Cloud (EC2)": [
        "ec2:AcceptAddressTransfer",
        "ec2:AcceptReservedInstancesExchangeQuote",
        "ec2:AcceptTransitGatewayMulticastDomainAssociations",
        "ec2:AcceptTransitGatewayPeeringAttachment",
        "ec2:AcceptTransitGatewayVpcAttachment",
        "ec2:AcceptVpcEndpointConnections",
        "ec2:AcceptVpcPeeringConnection",
        "ec2:AdvertiseByoipCidr",
        "ec2:AllocateAddress",
        "ec2:AllocateHosts",
        "ec2:AllocateIpamPoolCidr",
        "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
        "ec2:AssignIpv6Addresses",
        "ec2:AssignPrivateIpAddresses",
        "ec2:AssignPrivateNatGatewayAddress",
        "ec2:AssociateAddress",
        "ec2:AssociateClientVpnTargetNetwork",
        "ec2:AssociateDhcpOptions",
        "ec2:AssociateEnclaveCertificateIamRole",
        "ec2:AssociateIamInstanceProfile",
        "ec2:AssociateInstanceEventWindow",
        "ec2:AssociateIpamResourceDiscovery",
        "ec2:AssociateNatGatewayAddress",
        "ec2:AssociateRouteTable",
        "ec2:AssociateSubnetCidrBlock",
        "ec2:AssociateTransitGatewayMulticastDomain",
        "ec2:AssociateTransitGatewayPolicyTable",
        "ec2:AssociateTransitGatewayRouteTable",
        "ec2:AssociateTrunkInterface",
        "ec2:AssociateVerifiedAccessInstanceWebAcl",
        "ec2:AssociateVpcCidrBlock",
        "ec2:AttachClassicLinkVpc",
        "ec2:AttachInternetGateway",
        "ec2:AttachNetworkInterface",
        "ec2:AttachVerifiedAccessTrustProvider",
        "ec2:AttachVolume",
        "ec2:AttachVpnGateway",
        "ec2:AuthorizeClientVpnIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:BundleInstance",
        "ec2:CancelBundleTask",
        "ec2:CancelCapacityReservation",
        "ec2:CancelCapacityReservationFleets",
        "ec2:CancelConversionTask",
        "ec2:CancelExportTask",
        "ec2:CancelImageLaunchPermission",
        "ec2:CancelImportTask",
        "ec2:CancelReservedInstancesListing",
        "ec2:CancelSpotFleetRequests",
        "ec2:CancelSpotInstanceRequests",
        "ec2:ConfirmProductInstance",
        "ec2:CopyFpgaImage",
        "ec2:CopyImage",
        "ec2:CopySnapshot",
        "ec2:CreateCapacityReservation",
        "ec2:CreateCapacityReservationFleet",
        "ec2:CreateCarrierGateway",
        "ec2:CreateClientVpnEndpoint",
        "ec2:CreateClientVpnRoute",
        "ec2:CreateCoipCidr",
        "ec2:CreateCoipPool",
        "ec2:CreateCoipPoolPermission",
        "ec2:CreateCustomerGateway",
        "ec2:CreateDefaultSubnet",
        "ec2:CreateDefaultVpc",
        "ec2:CreateDhcpOptions",
        "ec2:CreateEgressOnlyInternetGateway",
        "ec2:CreateFleet",
        "ec2:CreateFlowLogs",
        "ec2:CreateFpgaImage",
        "ec2:CreateImage",
        "ec2:CreateInstanceEventWindow",
        "ec2:CreateInstanceExportTask",
        "ec2:CreateInternetGateway",
        "ec2:CreateIpam",
        "ec2:CreateIpamPool",
        "ec2:CreateIpamResourceDiscovery",
        "ec2:CreateIpamScope",
        "ec2:CreateKeyPair",
        "ec2:CreateLaunchTemplate",
        "ec2:CreateLaunchTemplateVersion",
        "ec2:CreateLocalGatewayRoute",
        "ec2:CreateLocalGatewayRouteTable",
        "ec2:CreateLocalGatewayRouteTablePermission",
        "ec2:CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
        "ec2:CreateLocalGatewayRouteTableVpcAssociation",
        "ec2:CreateManagedPrefixList",
        "ec2:CreateNatGateway",
        "ec2:CreateNetworkAcl",
        "ec2:CreateNetworkAclEntry",
        "ec2:CreateNetworkInsightsAccessScope",
        "ec2:CreateNetworkInsightsPath",
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:CreatePlacementGroup",
        "ec2:CreatePublicIpv4Pool",
        "ec2:CreateReplaceRootVolumeTask",
        "ec2:CreateReservedInstancesListing",
        "ec2:CreateRestoreImageTask",
        "ec2:CreateRoute",
        "ec2:CreateRouteTable",
        "ec2:CreateSecurityGroup",
        "ec2:CreateSnapshot",
        "ec2:CreateSnapshots",
        "ec2:CreateSpotDatafeedSubscription",
        "ec2:CreateStoreImageTask",
        "ec2:CreateSubnet",
        "ec2:CreateSubnetCidrReservation",
        "ec2:CreateTags",
        "ec2:CreateTrafficMirrorFilter",
        "ec2:CreateTrafficMirrorFilterRule",
        "ec2:CreateTrafficMirrorSession",
        "ec2:CreateTrafficMirrorTarget",
        "ec2:CreateTransitGateway",
        "ec2:CreateTransitGatewayConnect",
        "ec2:CreateTransitGatewayConnectPeer",
        "ec2:CreateTransitGatewayMulticastDomain",
        "ec2:CreateTransitGatewayPeeringAttachment",
        "ec2:CreateTransitGatewayPolicyTable",
        "ec2:CreateTransitGatewayPrefixListReference",
        "ec2:CreateTransitGatewayRoute",
        "ec2:CreateTransitGatewayRouteTable",
        "ec2:CreateTransitGatewayRouteTableAnnouncement",
        "ec2:CreateTransitGatewayVpcAttachment",
        "ec2:CreateVerifiedAccessEndpoint",
        "ec2:CreateVerifiedAccessGroup",
        "ec2:CreateVerifiedAccessInstance",
        "ec2:CreateVerifiedAccessTrustProvider",
        "ec2:CreateVolume",
        "ec2:CreateVpc",
        "ec2:CreateVpcEndpoint",
        "ec2:CreateVpcEndpointConnectionNotification",
        "ec2:CreateVpcEndpointServiceConfiguration",
        "ec2:CreateVpcPeeringConnection",
        "ec2:CreateVpnConnection",
        "ec2:CreateVpnConnectionRoute",
        "ec2:CreateVpnGateway",
        "ec2:DeleteCarrierGateway",
        "ec2:DeleteClientVpnEndpoint",
        "ec2:DeleteClientVpnRoute",
        "ec2:DeleteCoipCidr",
        "ec2:DeleteCoipPool",
        "ec2:DeleteCoipPoolPermission",
        "ec2:DeleteCustomerGateway",
        "ec2:DeleteDhcpOptions",
        "ec2:DeleteEgressOnlyInternetGateway",
        "ec2:DeleteFleets",
        "ec2:DeleteFlowLogs",
        "ec2:DeleteFpgaImage",
        "ec2:DeleteInstanceEventWindow",
        "ec2:DeleteInternetGateway",
        "ec2:DeleteIpam",
        "ec2:DeleteIpamPool",
        "ec2:DeleteIpamResourceDiscovery",
        "ec2:DeleteIpamScope",
        "ec2:DeleteKeyPair",
        "ec2:DeleteLaunchTemplate",
        "ec2:DeleteLaunchTemplateVersions",
        "ec2:DeleteLocalGatewayRoute",
        "ec2:DeleteLocalGatewayRouteTable",
        "ec2:DeleteLocalGatewayRouteTablePermission",
        "ec2:DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
        "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
        "ec2:DeleteManagedPrefixList",
        "ec2:DeleteNatGateway",
        "ec2:DeleteNetworkAcl",
        "ec2:DeleteNetworkAclEntry",
        "ec2:DeleteNetworkInsightsAccessScope",
        "ec2:DeleteNetworkInsightsAccessScopeAnalysis",
        "ec2:DeleteNetworkInsightsAnalysis",
        "ec2:DeleteNetworkInsightsPath",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:DeletePlacementGroup",
        "ec2:DeletePublicIpv4Pool",
        "ec2:DeleteQueuedReservedInstances",
        "ec2:DeleteResourcePolicy",
        "ec2:DeleteRoute",
        "ec2:DeleteRouteTable",
        "ec2:DeleteSecurityGroup",
        "ec2:DeleteSnapshot",
        "ec2:DeleteSpotDatafeedSubscription",
        "ec2:DeleteSubnet",
        "ec2:DeleteSubnetCidrReservation",
        "ec2:DeleteTags",
        "ec2:DeleteTrafficMirrorFilter",
        "ec2:DeleteTrafficMirrorFilterRule",
        "ec2:DeleteTrafficMirrorSession",
        "ec2:DeleteTrafficMirrorTarget",
        "ec2:DeleteTransitGateway",
        "ec2:DeleteTransitGatewayConnect",
        "ec2:DeleteTransitGatewayConnectPeer",
        "ec2:DeleteTransitGatewayMulticastDomain",
        "ec2:DeleteTransitGatewayPeeringAttachment",
        "ec2:DeleteTransitGatewayPolicyTable",
        "ec2:DeleteTransitGatewayPrefixListReference",
        "ec2:DeleteTransitGatewayRoute",
        "ec2:DeleteTransitGatewayRouteTable",
        "ec2:DeleteTransitGatewayRouteTableAnnouncement",
        "ec2:DeleteTransitGatewayVpcAttachment",
        "ec2:DeleteVerifiedAccessEndpoint",
        "ec2:DeleteVerifiedAccessGroup",
        "ec2:DeleteVerifiedAccessInstance",
        "ec2:DeleteVerifiedAccessTrustProvider",
        "ec2:DeleteVolume",
        "ec2:DeleteVpc",
        "ec2:DeleteVpcEndpointConnectionNotifications",
        "ec2:DeleteVpcEndpointServiceConfigurations",
        "ec2:DeleteVpcEndpoints",
        "ec2:DeleteVpcPeeringConnection",
        "ec2:DeleteVpnConnection",
        "ec2:DeleteVpnConnectionRoute",
        "ec2:DeleteVpnGateway",
        "ec2:DeprovisionByoipCidr",
        "ec2:DeprovisionIpamPoolCidr",
        "ec2:DeprovisionPublicIpv4PoolCidr",
        "ec2:DeregisterImage",
        "ec2:DeregisterInstanceEventNotificationAttributes",
        "ec2:DeregisterTransitGatewayMulticastGroupMembers",
        "ec2:DeregisterTransitGatewayMulticastGroupSources",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddressTransfers",
        "ec2:DescribeAddresses",
        "ec2:DescribeAddressesAttribute",
        "ec2:DescribeAggregateIdFormat",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeAwsNetworkPerformanceMetricSubscriptions",
        "ec2:DescribeBundleTasks",
        "ec2:DescribeByoipCidrs",
        "ec2:DescribeCapacityReservationFleets",
        "ec2:DescribeCapacityReservations",
        "ec2:DescribeCarrierGateways",
        "ec2:DescribeClassicLinkInstances",
        "ec2:DescribeClientVpnAuthorizationRules",
        "ec2:DescribeClientVpnConnections",
        "ec2:DescribeClientVpnEndpoints",
        "ec2:DescribeClientVpnRoutes",
        "ec2:DescribeClientVpnTargetNetworks",
        "ec2:DescribeCoipPools",
        "ec2:DescribeConversionTasks",
        "ec2:DescribeCustomerGateways",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeEgressOnlyInternetGateways",
        "ec2:DescribeElasticGpus",
        "ec2:DescribeExportImageTasks",
        "ec2:DescribeExportTasks",
        "ec2:DescribeFastLaunchImages",
        "ec2:DescribeFastSnapshotRestores",
        "ec2:DescribeFleetHistory",
        "ec2:DescribeFleetInstances",
        "ec2:DescribeFleets",
        "ec2:DescribeFlowLogs",
        "ec2:DescribeFpgaImageAttribute",
        "ec2:DescribeFpgaImages",
        "ec2:DescribeHostReservationOfferings",
        "ec2:DescribeHostReservations",
        "ec2:DescribeHosts",
        "ec2:DescribeIamInstanceProfileAssociations",
        "ec2:DescribeIdFormat",
        "ec2:DescribeIdentityIdFormat",
        "ec2:DescribeImageAttribute",
        "ec2:DescribeImages",
        "ec2:DescribeImportImageTasks",
        "ec2:DescribeImportSnapshotTasks",
        "ec2:DescribeInstanceAttribute",
        "ec2:DescribeInstanceCreditSpecifications",
        "ec2:DescribeInstanceEventNotificationAttributes",
        "ec2:DescribeInstanceEventWindows",
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeInstanceTypeOfferings",
        "ec2:DescribeInstanceTypes",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeIpamPools",
        "ec2:DescribeIpamResourceDiscoveries",
        "ec2:DescribeIpamResourceDiscoveryAssociations",
        "ec2:DescribeIpamScopes",
        "ec2:DescribeIpams",
        "ec2:DescribeIpv6Pools",
        "ec2:DescribeKeyPairs",
        "ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeLaunchTemplates",
        "ec2:DescribeLocalGatewayRouteTablePermissions",
        "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
        "ec2:DescribeLocalGatewayRouteTables",
        "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
        "ec2:DescribeLocalGatewayVirtualInterfaces",
        "ec2:DescribeLocalGateways",
        "ec2:DescribeManagedPrefixLists",
        "ec2:DescribeMovingAddresses",
        "ec2:DescribeNatGateways",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeNetworkInsightsAccessScopeAnalyses",
        "ec2:DescribeNetworkInsightsAccessScopes",
        "ec2:DescribeNetworkInsightsAnalyses",
        "ec2:DescribeNetworkInsightsPaths",
        "ec2:DescribeNetworkInterfaceAttribute",
        "ec2:DescribeNetworkInterfacePermissions",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribePlacementGroups",
        "ec2:DescribePrefixLists",
        "ec2:DescribePrincipalIdFormat",
        "ec2:DescribePublicIpv4Pools",
        "ec2:DescribeRegions",
        "ec2:DescribeReplaceRootVolumeTasks",
        "ec2:DescribeReservedInstances",
        "ec2:DescribeReservedInstancesListings",
        "ec2:DescribeReservedInstancesModifications",
        "ec2:DescribeReservedInstancesOfferings",
        "ec2:DescribeRouteTables",
        "ec2:DescribeScheduledInstanceAvailability",
        "ec2:DescribeScheduledInstances",
        "ec2:DescribeSecurityGroupReferences",
        "ec2:DescribeSecurityGroupRules",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSnapshotAttribute",
        "ec2:DescribeSnapshotTierStatus",
        "ec2:DescribeSnapshots",
        "ec2:DescribeSpotDatafeedSubscription",
        "ec2:DescribeSpotFleetInstances",
        "ec2:DescribeSpotFleetRequestHistory",
        "ec2:DescribeSpotFleetRequests",
        "ec2:DescribeSpotInstanceRequests",
        "ec2:DescribeSpotPriceHistory",
        "ec2:DescribeStaleSecurityGroups",
        "ec2:DescribeStoreImageTasks",
        "ec2:DescribeSubnets",
        "ec2:DescribeTags",
        "ec2:DescribeTrafficMirrorFilters",
        "ec2:DescribeTrafficMirrorSessions",
        "ec2:DescribeTrafficMirrorTargets",
        "ec2:DescribeTransitGatewayAttachments",
        "ec2:DescribeTransitGatewayConnectPeers",
        "ec2:DescribeTransitGatewayConnects",
        "ec2:DescribeTransitGatewayMulticastDomains",
        "ec2:DescribeTransitGatewayPeeringAttachments",
        "ec2:DescribeTransitGatewayPolicyTables",
        "ec2:DescribeTransitGatewayRouteTableAnnouncements",
        "ec2:DescribeTransitGatewayRouteTables",
        "ec2:DescribeTransitGatewayVpcAttachments",
        "ec2:DescribeTransitGateways",
        "ec2:DescribeTrunkInterfaceAssociations",
        "ec2:DescribeVerifiedAccessEndpoints",
        "ec2:DescribeVerifiedAccessGroups",
        "ec2:DescribeVerifiedAccessInstanceLoggingConfigurations",
        "ec2:DescribeVerifiedAccessInstanceWebAclAssociations",
        "ec2:DescribeVerifiedAccessInstances",
        "ec2:DescribeVerifiedAccessTrustProviders",
        "ec2:DescribeVolumeAttribute",
        "ec2:DescribeVolumeStatus",
        "ec2:DescribeVolumes",
        "ec2:DescribeVolumesModifications",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeVpcClassicLink",
        "ec2:DescribeVpcClassicLinkDnsSupport",
        "ec2:DescribeVpcEndpointConnectionNotifications",
        "ec2:DescribeVpcEndpointConnections",
        "ec2:DescribeVpcEndpointServiceConfigurations",
        "ec2:DescribeVpcEndpointServicePermissions",
        "ec2:DescribeVpcEndpointServices",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeVpnGateways",
        "ec2:DetachClassicLinkVpc",
        "ec2:DetachInternetGateway",
        "ec2:DetachNetworkInterface",
        "ec2:DetachVerifiedAccessTrustProvider",
        "ec2:DetachVolume",
        "ec2:DetachVpnGateway",
        "ec2:DisableAddressTransfer",
        "ec2:DisableAwsNetworkPerformanceMetricSubscription",
        "ec2:DisableEbsEncryptionByDefault",
        "ec2:DisableFastLaunch",
        "ec2:DisableFastSnapshotRestores",
        "ec2:DisableImageDeprecation",
        "ec2:DisableIpamOrganizationAdminAccount",
        "ec2:DisableSerialConsoleAccess",
        "ec2:DisableTransitGatewayRouteTablePropagation",
        "ec2:DisableVgwRoutePropagation",
        "ec2:DisableVpcClassicLink",
        "ec2:DisableVpcClassicLinkDnsSupport",
        "ec2:DisassociateAddress",
        "ec2:DisassociateClientVpnTargetNetwork",
        "ec2:DisassociateEnclaveCertificateIamRole",
        "ec2:DisassociateIamInstanceProfile",
        "ec2:DisassociateInstanceEventWindow",
        "ec2:DisassociateIpamResourceDiscovery",
        "ec2:DisassociateNatGatewayAddress",
        "ec2:DisassociateRouteTable",
        "ec2:DisassociateSubnetCidrBlock",
        "ec2:DisassociateTransitGatewayMulticastDomain",
        "ec2:DisassociateTransitGatewayPolicyTable",
        "ec2:DisassociateTransitGatewayRouteTable",
        "ec2:DisassociateTrunkInterface",
        "ec2:DisassociateVerifiedAccessInstanceWebAcl",
        "ec2:DisassociateVpcCidrBlock",
        "ec2:EnableAddressTransfer",
        "ec2:EnableAwsNetworkPerformanceMetricSubscription",
        "ec2:EnableEbsEncryptionByDefault",
        "ec2:EnableFastLaunch",
        "ec2:EnableFastSnapshotRestores",
        "ec2:EnableImageDeprecation",
        "ec2:EnableIpamOrganizationAdminAccount",
        "ec2:EnableReachabilityAnalyzerOrganizationSharing",
        "ec2:EnableSerialConsoleAccess",
        "ec2:EnableTransitGatewayRouteTablePropagation",
        "ec2:EnableVgwRoutePropagation",
        "ec2:EnableVolumeIO",
        "ec2:EnableVpcClassicLink",
        "ec2:EnableVpcClassicLinkDnsSupport",
        "ec2:ExportClientVpnClientCertificateRevocationList",
        "ec2:ExportClientVpnClientConfiguration",
        "ec2:ExportImage",
        "ec2:ExportTransitGatewayRoutes",
        "ec2:GetAssociatedEnclaveCertificateIamRoles",
        "ec2:GetAssociatedIpv6PoolCidrs",
        "ec2:GetAwsNetworkPerformanceData",
        "ec2:GetCapacityReservationUsage",
        "ec2:GetCoipPoolUsage",
        "ec2:GetConsoleOutput",
        "ec2:GetConsoleScreenshot",
        "ec2:GetDefaultCreditSpecification",
        "ec2:GetEbsDefaultKmsKeyId",
        "ec2:GetEbsEncryptionByDefault",
        "ec2:GetFlowLogsIntegrationTemplate",
        "ec2:GetGroupsForCapacityReservation",
        "ec2:GetHostReservationPurchasePreview",
        "ec2:GetInstanceTypesFromInstanceRequirements",
        "ec2:GetInstanceUefiData",
        "ec2:GetIpamAddressHistory",
        "ec2:GetIpamDiscoveredAccounts",
        "ec2:GetIpamDiscoveredResourceCidrs",
        "ec2:GetIpamPoolAllocations",
        "ec2:GetIpamPoolCidrs",
        "ec2:GetIpamResourceCidrs",
        "ec2:GetLaunchTemplateData",
        "ec2:GetManagedPrefixListAssociations",
        "ec2:GetManagedPrefixListEntries",
        "ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
        "ec2:GetNetworkInsightsAccessScopeContent",
        "ec2:GetPasswordData",
        "ec2:GetReservedInstancesExchangeQuote",
        "ec2:GetResourcePolicy",
        "ec2:GetSerialConsoleAccessStatus",
        "ec2:GetSpotPlacementScores",
        "ec2:GetSubnetCidrReservations",
        "ec2:GetTransitGatewayAttachmentPropagations",
        "ec2:GetTransitGatewayMulticastDomainAssociations",
        "ec2:GetTransitGatewayPolicyTableAssociations",
        "ec2:GetTransitGatewayPolicyTableEntries",
        "ec2:GetTransitGatewayPrefixListReferences",
        "ec2:GetTransitGatewayRouteTableAssociations",
        "ec2:GetTransitGatewayRouteTablePropagations",
        "ec2:GetVerifiedAccessEndpointPolicy",
        "ec2:GetVerifiedAccessGroupPolicy",
        "ec2:GetVerifiedAccessInstanceWebAcl",
        "ec2:GetVpnConnectionDeviceSampleConfiguration",
        "ec2:GetVpnConnectionDeviceTypes",
        "ec2:GetVpnTunnelReplacementStatus",
        "ec2:ImportByoipCidrToIpam",
        "ec2:ImportClientVpnClientCertificateRevocationList",
        "ec2:ImportImage",
        "ec2:ImportInstance",
        "ec2:ImportKeyPair",
        "ec2:ImportSnapshot",
        "ec2:ImportVolume",
        "ec2:ListImagesInRecycleBin",
        "ec2:ListSnapshotsInRecycleBin",
        "ec2:ModifyAddressAttribute",
        "ec2:ModifyAvailabilityZoneGroup",
        "ec2:ModifyCapacityReservation",
        "ec2:ModifyCapacityReservationFleet",
        "ec2:ModifyClientVpnEndpoint",
        "ec2:ModifyDefaultCreditSpecification",
        "ec2:ModifyEbsDefaultKmsKeyId",
        "ec2:ModifyFleet",
        "ec2:ModifyFpgaImageAttribute",
        "ec2:ModifyHosts",
        "ec2:ModifyIdFormat",
        "ec2:ModifyIdentityIdFormat",
        "ec2:ModifyImageAttribute",
        "ec2:ModifyInstanceAttribute",
        "ec2:ModifyInstanceCapacityReservationAttributes",
        "ec2:ModifyInstanceCreditSpecification",
        "ec2:ModifyInstanceEventStartTime",
        "ec2:ModifyInstanceEventWindow",
        "ec2:ModifyInstanceMaintenanceOptions",
        "ec2:ModifyInstanceMetadataOptions",
        "ec2:ModifyInstancePlacement",
        "ec2:ModifyIpam",
        "ec2:ModifyIpamPool",
        "ec2:ModifyIpamResourceCidr",
        "ec2:ModifyIpamResourceDiscovery",
        "ec2:ModifyIpamScope",
        "ec2:ModifyLaunchTemplate",
        "ec2:ModifyLocalGatewayRoute",
        "ec2:ModifyManagedPrefixList",
        "ec2:ModifyNetworkInterfaceAttribute",
        "ec2:ModifyPrivateDnsNameOptions",
        "ec2:ModifyReservedInstances",
        "ec2:ModifySecurityGroupRules",
        "ec2:ModifySnapshotAttribute",
        "ec2:ModifySnapshotTier",
        "ec2:ModifySpotFleetRequest",
        "ec2:ModifySubnetAttribute",
        "ec2:ModifyTrafficMirrorFilterNetworkServices",
        "ec2:ModifyTrafficMirrorFilterRule",
        "ec2:ModifyTrafficMirrorSession",
        "ec2:ModifyTransitGateway",
        "ec2:ModifyTransitGatewayPrefixListReference",
        "ec2:ModifyTransitGatewayVpcAttachment",
        "ec2:ModifyVerifiedAccessEndpoint",
        "ec2:ModifyVerifiedAccessEndpointPolicy",
        "ec2:ModifyVerifiedAccessGroup",
        "ec2:ModifyVerifiedAccessGroupPolicy",
        "ec2:ModifyVerifiedAccessInstance",
        "ec2:ModifyVerifiedAccessInstanceLoggingConfiguration",
        "ec2:ModifyVerifiedAccessTrustProvider",
        "ec2:ModifyVolume",
        "ec2:ModifyVolumeAttribute",
        "ec2:ModifyVpcAttribute",
        "ec2:ModifyVpcEndpoint",
        "ec2:ModifyVpcEndpointConnectionNotification",
        "ec2:ModifyVpcEndpointServiceConfiguration",
        "ec2:ModifyVpcEndpointServicePayerResponsibility",
        "ec2:ModifyVpcEndpointServicePermissions",
        "ec2:ModifyVpcPeeringConnectionOptions",
        "ec2:ModifyVpcTenancy",
        "ec2:ModifyVpnConnection",
        "ec2:ModifyVpnConnectionOptions",
        "ec2:ModifyVpnTunnelCertificate",
        "ec2:ModifyVpnTunnelOptions",
        "ec2:MonitorInstances",
        "ec2:MoveAddressToVpc",
        "ec2:MoveByoipCidrToIpam",
        "ec2:PauseVolumeIO",
        "ec2:ProvisionByoipCidr",
        "ec2:ProvisionIpamPoolCidr",
        "ec2:ProvisionPublicIpv4PoolCidr",
        "ec2:PurchaseHostReservation",
        "ec2:PurchaseReservedInstancesOffering",
        "ec2:PurchaseScheduledInstances",
        "ec2:PutResourcePolicy",
        "ec2:RebootInstances",
        "ec2:RegisterImage",
        "ec2:RegisterInstanceEventNotificationAttributes",
        "ec2:RegisterTransitGatewayMulticastGroupMembers",
        "ec2:RegisterTransitGatewayMulticastGroupSources",
        "ec2:RejectTransitGatewayMulticastDomainAssociations",
        "ec2:RejectTransitGatewayPeeringAttachment",
        "ec2:RejectTransitGatewayVpcAttachment",
        "ec2:RejectVpcEndpointConnections",
        "ec2:RejectVpcPeeringConnection",
        "ec2:ReleaseAddress",
        "ec2:ReleaseHosts",
        "ec2:ReleaseIpamPoolAllocation",
        "ec2:ReplaceIamInstanceProfileAssociation",
        "ec2:ReplaceNetworkAclAssociation",
        "ec2:ReplaceNetworkAclEntry",
        "ec2:ReplaceRoute",
        "ec2:ReplaceRouteTableAssociation",
        "ec2:ReplaceTransitGatewayRoute",
        "ec2:ReplaceVpnTunnel",
        "ec2:ReportInstanceStatus",
        "ec2:RequestSpotFleet",
        "ec2:RequestSpotInstances",
        "ec2:ResetAddressAttribute",
        "ec2:ResetEbsDefaultKmsKeyId",
        "ec2:ResetFpgaImageAttribute",
        "ec2:ResetImageAttribute",
        "ec2:ResetInstanceAttribute",
        "ec2:ResetNetworkInterfaceAttribute",
        "ec2:ResetSnapshotAttribute",
        "ec2:RestoreAddressToClassic",
        "ec2:RestoreImageFromRecycleBin",
        "ec2:RestoreManagedPrefixListVersion",
        "ec2:RestoreSnapshotFromRecycleBin",
        "ec2:RestoreSnapshotTier",
        "ec2:RevokeClientVpnIngress",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:RunInstances",
        "ec2:RunScheduledInstances",
        "ec2:SearchLocalGatewayRoutes",
        "ec2:SearchTransitGatewayMulticastGroups",
        "ec2:SearchTransitGatewayRoutes",
        "ec2:SendDiagnosticInterrupt",
        "ec2:SendSpotInstanceInterruptions",
        "ec2:StartInstances",
        "ec2:StartNetworkInsightsAccessScopeAnalysis",
        "ec2:StartNetworkInsightsAnalysis",
        "ec2:StartVpcEndpointServicePrivateDnsVerification",
        "ec2:StopInstances",
        "ec2:TerminateClientVpnConnections",
        "ec2:TerminateInstances",
        "ec2:UnassignIpv6Addresses",
        "ec2:UnassignPrivateIpAddresses",
        "ec2:UnassignPrivateNatGatewayAddress",
        "ec2:UnmonitorInstances",
        "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
        "ec2:WithdrawByoipCidr"
      ]
    }
  },
  {
    "dateOfChange": "2023-06-06",
    "addedServices": [
      "Amazon Elastic Compute Cloud (EC2)"
    ],
    "removedServices": [
      "Amazon EC2"
    ],
    "addedActions": {
      "Amazon Athena": [
        "athena:DeleteCapacityReservation"
      ],
      "AWS CloudTrail": [
        "cloudtrail:StartEventDataStoreIngestion",
        "cloudtrail:StopEventDataStoreIngestion"
      ],
      "Amazon Elastic Compute Cloud (EC2)": [
        "ec2:AcceptAddressTransfer",
        "ec2:AcceptReservedInstancesExchangeQuote",
        "ec2:AcceptTransitGatewayMulticastDomainAssociations",
        "ec2:AcceptTransitGatewayPeeringAttachment",
        "ec2:AcceptTransitGatewayVpcAttachment",
        "ec2:AcceptVpcEndpointConnections",
        "ec2:AcceptVpcPeeringConnection",
        "ec2:AdvertiseByoipCidr",
        "ec2:AllocateAddress",
        "ec2:AllocateHosts",
        "ec2:AllocateIpamPoolCidr",
        "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
        "ec2:AssignIpv6Addresses",
        "ec2:AssignPrivateIpAddresses",
        "ec2:AssignPrivateNatGatewayAddress",
        "ec2:AssociateAddress",
        "ec2:AssociateClientVpnTargetNetwork",
        "ec2:AssociateDhcpOptions",
        "ec2:AssociateEnclaveCertificateIamRole",
        "ec2:AssociateIamInstanceProfile",
        "ec2:AssociateInstanceEventWindow",
        "ec2:AssociateIpamResourceDiscovery",
        "ec2:AssociateNatGatewayAddress",
        "ec2:AssociateRouteTable",
        "ec2:AssociateSubnetCidrBlock",
        "ec2:AssociateTransitGatewayMulticastDomain",
        "ec2:AssociateTransitGatewayPolicyTable",
        "ec2:AssociateTransitGatewayRouteTable",
        "ec2:AssociateTrunkInterface",
        "ec2:AssociateVerifiedAccessInstanceWebAcl",
        "ec2:AssociateVpcCidrBlock",
        "ec2:AttachClassicLinkVpc",
        "ec2:AttachInternetGateway",
        "ec2:AttachNetworkInterface",
        "ec2:AttachVerifiedAccessTrustProvider",
        "ec2:AttachVolume",
        "ec2:AttachVpnGateway",
        "ec2:AuthorizeClientVpnIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:BundleInstance",
        "ec2:CancelBundleTask",
        "ec2:CancelCapacityReservation",
        "ec2:CancelCapacityReservationFleets",
        "ec2:CancelConversionTask",
        "ec2:CancelExportTask",
        "ec2:CancelImageLaunchPermission",
        "ec2:CancelImportTask",
        "ec2:CancelReservedInstancesListing",
        "ec2:CancelSpotFleetRequests",
        "ec2:CancelSpotInstanceRequests",
        "ec2:ConfirmProductInstance",
        "ec2:CopyFpgaImage",
        "ec2:CopyImage",
        "ec2:CopySnapshot",
        "ec2:CreateCapacityReservation",
        "ec2:CreateCapacityReservationFleet",
        "ec2:CreateCarrierGateway",
        "ec2:CreateClientVpnEndpoint",
        "ec2:CreateClientVpnRoute",
        "ec2:CreateCoipCidr",
        "ec2:CreateCoipPool",
        "ec2:CreateCoipPoolPermission",
        "ec2:CreateCustomerGateway",
        "ec2:CreateDefaultSubnet",
        "ec2:CreateDefaultVpc",
        "ec2:CreateDhcpOptions",
        "ec2:CreateEgressOnlyInternetGateway",
        "ec2:CreateFleet",
        "ec2:CreateFlowLogs",
        "ec2:CreateFpgaImage",
        "ec2:CreateImage",
        "ec2:CreateInstanceEventWindow",
        "ec2:CreateInstanceExportTask",
        "ec2:CreateInternetGateway",
        "ec2:CreateIpam",
        "ec2:CreateIpamPool",
        "ec2:CreateIpamResourceDiscovery",
        "ec2:CreateIpamScope",
        "ec2:CreateKeyPair",
        "ec2:CreateLaunchTemplate",
        "ec2:CreateLaunchTemplateVersion",
        "ec2:CreateLocalGatewayRoute",
        "ec2:CreateLocalGatewayRouteTable",
        "ec2:CreateLocalGatewayRouteTablePermission",
        "ec2:CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
        "ec2:CreateLocalGatewayRouteTableVpcAssociation",
        "ec2:CreateManagedPrefixList",
        "ec2:CreateNatGateway",
        "ec2:CreateNetworkAcl",
        "ec2:CreateNetworkAclEntry",
        "ec2:CreateNetworkInsightsAccessScope",
        "ec2:CreateNetworkInsightsPath",
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:CreatePlacementGroup",
        "ec2:CreatePublicIpv4Pool",
        "ec2:CreateReplaceRootVolumeTask",
        "ec2:CreateReservedInstancesListing",
        "ec2:CreateRestoreImageTask",
        "ec2:CreateRoute",
        "ec2:CreateRouteTable",
        "ec2:CreateSecurityGroup",
        "ec2:CreateSnapshot",
        "ec2:CreateSnapshots",
        "ec2:CreateSpotDatafeedSubscription",
        "ec2:CreateStoreImageTask",
        "ec2:CreateSubnet",
        "ec2:CreateSubnetCidrReservation",
        "ec2:CreateTags",
        "ec2:CreateTrafficMirrorFilter",
        "ec2:CreateTrafficMirrorFilterRule",
        "ec2:CreateTrafficMirrorSession",
        "ec2:CreateTrafficMirrorTarget",
        "ec2:CreateTransitGateway",
        "ec2:CreateTransitGatewayConnect",
        "ec2:CreateTransitGatewayConnectPeer",
        "ec2:CreateTransitGatewayMulticastDomain",
        "ec2:CreateTransitGatewayPeeringAttachment",
        "ec2:CreateTransitGatewayPolicyTable",
        "ec2:CreateTransitGatewayPrefixListReference",
        "ec2:CreateTransitGatewayRoute",
        "ec2:CreateTransitGatewayRouteTable",
        "ec2:CreateTransitGatewayRouteTableAnnouncement",
        "ec2:CreateTransitGatewayVpcAttachment",
        "ec2:CreateVerifiedAccessEndpoint",
        "ec2:CreateVerifiedAccessGroup",
        "ec2:CreateVerifiedAccessInstance",
        "ec2:CreateVerifiedAccessTrustProvider",
        "ec2:CreateVolume",
        "ec2:CreateVpc",
        "ec2:CreateVpcEndpoint",
        "ec2:CreateVpcEndpointConnectionNotification",
        "ec2:CreateVpcEndpointServiceConfiguration",
        "ec2:CreateVpcPeeringConnection",
        "ec2:CreateVpnConnection",
        "ec2:CreateVpnConnectionRoute",
        "ec2:CreateVpnGateway",
        "ec2:DeleteCarrierGateway",
        "ec2:DeleteClientVpnEndpoint",
        "ec2:DeleteClientVpnRoute",
        "ec2:DeleteCoipCidr",
        "ec2:DeleteCoipPool",
        "ec2:DeleteCoipPoolPermission",
        "ec2:DeleteCustomerGateway",
        "ec2:DeleteDhcpOptions",
        "ec2:DeleteEgressOnlyInternetGateway",
        "ec2:DeleteFleets",
        "ec2:DeleteFlowLogs",
        "ec2:DeleteFpgaImage",
        "ec2:DeleteInstanceEventWindow",
        "ec2:DeleteInternetGateway",
        "ec2:DeleteIpam",
        "ec2:DeleteIpamPool",
        "ec2:DeleteIpamResourceDiscovery",
        "ec2:DeleteIpamScope",
        "ec2:DeleteKeyPair",
        "ec2:DeleteLaunchTemplate",
        "ec2:DeleteLaunchTemplateVersions",
        "ec2:DeleteLocalGatewayRoute",
        "ec2:DeleteLocalGatewayRouteTable",
        "ec2:DeleteLocalGatewayRouteTablePermission",
        "ec2:DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
        "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
        "ec2:DeleteManagedPrefixList",
        "ec2:DeleteNatGateway",
        "ec2:DeleteNetworkAcl",
        "ec2:DeleteNetworkAclEntry",
        "ec2:DeleteNetworkInsightsAccessScope",
        "ec2:DeleteNetworkInsightsAccessScopeAnalysis",
        "ec2:DeleteNetworkInsightsAnalysis",
        "ec2:DeleteNetworkInsightsPath",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:DeletePlacementGroup",
        "ec2:DeletePublicIpv4Pool",
        "ec2:DeleteQueuedReservedInstances",
        "ec2:DeleteResourcePolicy",
        "ec2:DeleteRoute",
        "ec2:DeleteRouteTable",
        "ec2:DeleteSecurityGroup",
        "ec2:DeleteSnapshot",
        "ec2:DeleteSpotDatafeedSubscription",
        "ec2:DeleteSubnet",
        "ec2:DeleteSubnetCidrReservation",
        "ec2:DeleteTags",
        "ec2:DeleteTrafficMirrorFilter",
        "ec2:DeleteTrafficMirrorFilterRule",
        "ec2:DeleteTrafficMirrorSession",
        "ec2:DeleteTrafficMirrorTarget",
        "ec2:DeleteTransitGateway",
        "ec2:DeleteTransitGatewayConnect",
        "ec2:DeleteTransitGatewayConnectPeer",
        "ec2:DeleteTransitGatewayMulticastDomain",
        "ec2:DeleteTransitGatewayPeeringAttachment",
        "ec2:DeleteTransitGatewayPolicyTable",
        "ec2:DeleteTransitGatewayPrefixListReference",
        "ec2:DeleteTransitGatewayRoute",
        "ec2:DeleteTransitGatewayRouteTable",
        "ec2:DeleteTransitGatewayRouteTableAnnouncement",
        "ec2:DeleteTransitGatewayVpcAttachment",
        "ec2:DeleteVerifiedAccessEndpoint",
        "ec2:DeleteVerifiedAccessGroup",
        "ec2:DeleteVerifiedAccessInstance",
        "ec2:DeleteVerifiedAccessTrustProvider",
        "ec2:DeleteVolume",
        "ec2:DeleteVpc",
        "ec2:DeleteVpcEndpointConnectionNotifications",
        "ec2:DeleteVpcEndpointServiceConfigurations",
        "ec2:DeleteVpcEndpoints",
        "ec2:DeleteVpcPeeringConnection",
        "ec2:DeleteVpnConnection",
        "ec2:DeleteVpnConnectionRoute",
        "ec2:DeleteVpnGateway",
        "ec2:DeprovisionByoipCidr",
        "ec2:DeprovisionIpamPoolCidr",
        "ec2:DeprovisionPublicIpv4PoolCidr",
        "ec2:DeregisterImage",
        "ec2:DeregisterInstanceEventNotificationAttributes",
        "ec2:DeregisterTransitGatewayMulticastGroupMembers",
        "ec2:DeregisterTransitGatewayMulticastGroupSources",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddressTransfers",
        "ec2:DescribeAddresses",
        "ec2:DescribeAddressesAttribute",
        "ec2:DescribeAggregateIdFormat",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeAwsNetworkPerformanceMetricSubscriptions",
        "ec2:DescribeBundleTasks",
        "ec2:DescribeByoipCidrs",
        "ec2:DescribeCapacityReservationFleets",
        "ec2:DescribeCapacityReservations",
        "ec2:DescribeCarrierGateways",
        "ec2:DescribeClassicLinkInstances",
        "ec2:DescribeClientVpnAuthorizationRules",
        "ec2:DescribeClientVpnConnections",
        "ec2:DescribeClientVpnEndpoints",
        "ec2:DescribeClientVpnRoutes",
        "ec2:DescribeClientVpnTargetNetworks",
        "ec2:DescribeCoipPools",
        "ec2:DescribeConversionTasks",
        "ec2:DescribeCustomerGateways",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeEgressOnlyInternetGateways",
        "ec2:DescribeElasticGpus",
        "ec2:DescribeExportImageTasks",
        "ec2:DescribeExportTasks",
        "ec2:DescribeFastLaunchImages",
        "ec2:DescribeFastSnapshotRestores",
        "ec2:DescribeFleetHistory",
        "ec2:DescribeFleetInstances",
        "ec2:DescribeFleets",
        "ec2:DescribeFlowLogs",
        "ec2:DescribeFpgaImageAttribute",
        "ec2:DescribeFpgaImages",
        "ec2:DescribeHostReservationOfferings",
        "ec2:DescribeHostReservations",
        "ec2:DescribeHosts",
        "ec2:DescribeIamInstanceProfileAssociations",
        "ec2:DescribeIdFormat",
        "ec2:DescribeIdentityIdFormat",
        "ec2:DescribeImageAttribute",
        "ec2:DescribeImages",
        "ec2:DescribeImportImageTasks",
        "ec2:DescribeImportSnapshotTasks",
        "ec2:DescribeInstanceAttribute",
        "ec2:DescribeInstanceCreditSpecifications",
        "ec2:DescribeInstanceEventNotificationAttributes",
        "ec2:DescribeInstanceEventWindows",
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeInstanceTypeOfferings",
        "ec2:DescribeInstanceTypes",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeIpamPools",
        "ec2:DescribeIpamResourceDiscoveries",
        "ec2:DescribeIpamResourceDiscoveryAssociations",
        "ec2:DescribeIpamScopes",
        "ec2:DescribeIpams",
        "ec2:DescribeIpv6Pools",
        "ec2:DescribeKeyPairs",
        "ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeLaunchTemplates",
        "ec2:DescribeLocalGatewayRouteTablePermissions",
        "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
        "ec2:DescribeLocalGatewayRouteTables",
        "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
        "ec2:DescribeLocalGatewayVirtualInterfaces",
        "ec2:DescribeLocalGateways",
        "ec2:DescribeManagedPrefixLists",
        "ec2:DescribeMovingAddresses",
        "ec2:DescribeNatGateways",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeNetworkInsightsAccessScopeAnalyses",
        "ec2:DescribeNetworkInsightsAccessScopes",
        "ec2:DescribeNetworkInsightsAnalyses",
        "ec2:DescribeNetworkInsightsPaths",
        "ec2:DescribeNetworkInterfaceAttribute",
        "ec2:DescribeNetworkInterfacePermissions",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribePlacementGroups",
        "ec2:DescribePrefixLists",
        "ec2:DescribePrincipalIdFormat",
        "ec2:DescribePublicIpv4Pools",
        "ec2:DescribeRegions",
        "ec2:DescribeReplaceRootVolumeTasks",
        "ec2:DescribeReservedInstances",
        "ec2:DescribeReservedInstancesListings",
        "ec2:DescribeReservedInstancesModifications",
        "ec2:DescribeReservedInstancesOfferings",
        "ec2:DescribeRouteTables",
        "ec2:DescribeScheduledInstanceAvailability",
        "ec2:DescribeScheduledInstances",
        "ec2:DescribeSecurityGroupReferences",
        "ec2:DescribeSecurityGroupRules",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSnapshotAttribute",
        "ec2:DescribeSnapshotTierStatus",
        "ec2:DescribeSnapshots",
        "ec2:DescribeSpotDatafeedSubscription",
        "ec2:DescribeSpotFleetInstances",
        "ec2:DescribeSpotFleetRequestHistory",
        "ec2:DescribeSpotFleetRequests",
        "ec2:DescribeSpotInstanceRequests",
        "ec2:DescribeSpotPriceHistory",
        "ec2:DescribeStaleSecurityGroups",
        "ec2:DescribeStoreImageTasks",
        "ec2:DescribeSubnets",
        "ec2:DescribeTags",
        "ec2:DescribeTrafficMirrorFilters",
        "ec2:DescribeTrafficMirrorSessions",
        "ec2:DescribeTrafficMirrorTargets",
        "ec2:DescribeTransitGatewayAttachments",
        "ec2:DescribeTransitGatewayConnectPeers",
        "ec2:DescribeTransitGatewayConnects",
        "ec2:DescribeTransitGatewayMulticastDomains",
        "ec2:DescribeTransitGatewayPeeringAttachments",
        "ec2:DescribeTransitGatewayPolicyTables",
        "ec2:DescribeTransitGatewayRouteTableAnnouncements",
        "ec2:DescribeTransitGatewayRouteTables",
        "ec2:DescribeTransitGatewayVpcAttachments",
        "ec2:DescribeTransitGateways",
        "ec2:DescribeTrunkInterfaceAssociations",
        "ec2:DescribeVerifiedAccessEndpoints",
        "ec2:DescribeVerifiedAccessGroups",
        "ec2:DescribeVerifiedAccessInstanceLoggingConfigurations",
        "ec2:DescribeVerifiedAccessInstanceWebAclAssociations",
        "ec2:DescribeVerifiedAccessInstances",
        "ec2:DescribeVerifiedAccessTrustProviders",
        "ec2:DescribeVolumeAttribute",
        "ec2:DescribeVolumeStatus",
        "ec2:DescribeVolumes",
        "ec2:DescribeVolumesModifications",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeVpcClassicLink",
        "ec2:DescribeVpcClassicLinkDnsSupport",
        "ec2:DescribeVpcEndpointConnectionNotifications",
        "ec2:DescribeVpcEndpointConnections",
        "ec2:DescribeVpcEndpointServiceConfigurations",
        "ec2:DescribeVpcEndpointServicePermissions",
        "ec2:DescribeVpcEndpointServices",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeVpnGateways",
        "ec2:DetachClassicLinkVpc",
        "ec2:DetachInternetGateway",
        "ec2:DetachNetworkInterface",
        "ec2:DetachVerifiedAccessTrustProvider",
        "ec2:DetachVolume",
        "ec2:DetachVpnGateway",
        "ec2:DisableAddressTransfer",
        "ec2:DisableAwsNetworkPerformanceMetricSubscription",
        "ec2:DisableEbsEncryptionByDefault",
        "ec2:DisableFastLaunch",
        "ec2:DisableFastSnapshotRestores",
        "ec2:DisableImageDeprecation",
        "ec2:DisableIpamOrganizationAdminAccount",
        "ec2:DisableSerialConsoleAccess",
        "ec2:DisableTransitGatewayRouteTablePropagation",
        "ec2:DisableVgwRoutePropagation",
        "ec2:DisableVpcClassicLink",
        "ec2:DisableVpcClassicLinkDnsSupport",
        "ec2:DisassociateAddress",
        "ec2:DisassociateClientVpnTargetNetwork",
        "ec2:DisassociateEnclaveCertificateIamRole",
        "ec2:DisassociateIamInstanceProfile",
        "ec2:DisassociateInstanceEventWindow",
        "ec2:DisassociateIpamResourceDiscovery",
        "ec2:DisassociateNatGatewayAddress",
        "ec2:DisassociateRouteTable",
        "ec2:DisassociateSubnetCidrBlock",
        "ec2:DisassociateTransitGatewayMulticastDomain",
        "ec2:DisassociateTransitGatewayPolicyTable",
        "ec2:DisassociateTransitGatewayRouteTable",
        "ec2:DisassociateTrunkInterface",
        "ec2:DisassociateVerifiedAccessInstanceWebAcl",
        "ec2:DisassociateVpcCidrBlock",
        "ec2:EnableAddressTransfer",
        "ec2:EnableAwsNetworkPerformanceMetricSubscription",
        "ec2:EnableEbsEncryptionByDefault",
        "ec2:EnableFastLaunch",
        "ec2:EnableFastSnapshotRestores",
        "ec2:EnableImageDeprecation",
        "ec2:EnableIpamOrganizationAdminAccount",
        "ec2:EnableReachabilityAnalyzerOrganizationSharing",
        "ec2:EnableSerialConsoleAccess",
        "ec2:EnableTransitGatewayRouteTablePropagation",
        "ec2:EnableVgwRoutePropagation",
        "ec2:EnableVolumeIO",
        "ec2:EnableVpcClassicLink",
        "ec2:EnableVpcClassicLinkDnsSupport",
        "ec2:ExportClientVpnClientCertificateRevocationList",
        "ec2:ExportClientVpnClientConfiguration",
        "ec2:ExportImage",
        "ec2:ExportTransitGatewayRoutes",
        "ec2:GetAssociatedEnclaveCertificateIamRoles",
        "ec2:GetAssociatedIpv6PoolCidrs",
        "ec2:GetAwsNetworkPerformanceData",
        "ec2:GetCapacityReservationUsage",
        "ec2:GetCoipPoolUsage",
        "ec2:GetConsoleOutput",
        "ec2:GetConsoleScreenshot",
        "ec2:GetDefaultCreditSpecification",
        "ec2:GetEbsDefaultKmsKeyId",
        "ec2:GetEbsEncryptionByDefault",
        "ec2:GetFlowLogsIntegrationTemplate",
        "ec2:GetGroupsForCapacityReservation",
        "ec2:GetHostReservationPurchasePreview",
        "ec2:GetInstanceTypesFromInstanceRequirements",
        "ec2:GetInstanceUefiData",
        "ec2:GetIpamAddressHistory",
        "ec2:GetIpamDiscoveredAccounts",
        "ec2:GetIpamDiscoveredResourceCidrs",
        "ec2:GetIpamPoolAllocations",
        "ec2:GetIpamPoolCidrs",
        "ec2:GetIpamResourceCidrs",
        "ec2:GetLaunchTemplateData",
        "ec2:GetManagedPrefixListAssociations",
        "ec2:GetManagedPrefixListEntries",
        "ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
        "ec2:GetNetworkInsightsAccessScopeContent",
        "ec2:GetPasswordData",
        "ec2:GetReservedInstancesExchangeQuote",
        "ec2:GetResourcePolicy",
        "ec2:GetSerialConsoleAccessStatus",
        "ec2:GetSpotPlacementScores",
        "ec2:GetSubnetCidrReservations",
        "ec2:GetTransitGatewayAttachmentPropagations",
        "ec2:GetTransitGatewayMulticastDomainAssociations",
        "ec2:GetTransitGatewayPolicyTableAssociations",
        "ec2:GetTransitGatewayPolicyTableEntries",
        "ec2:GetTransitGatewayPrefixListReferences",
        "ec2:GetTransitGatewayRouteTableAssociations",
        "ec2:GetTransitGatewayRouteTablePropagations",
        "ec2:GetVerifiedAccessEndpointPolicy",
        "ec2:GetVerifiedAccessGroupPolicy",
        "ec2:GetVerifiedAccessInstanceWebAcl",
        "ec2:GetVpnConnectionDeviceSampleConfiguration",
        "ec2:GetVpnConnectionDeviceTypes",
        "ec2:GetVpnTunnelReplacementStatus",
        "ec2:ImportByoipCidrToIpam",
        "ec2:ImportClientVpnClientCertificateRevocationList",
        "ec2:ImportImage",
        "ec2:ImportInstance",
        "ec2:ImportKeyPair",
        "ec2:ImportSnapshot",
        "ec2:ImportVolume",
        "ec2:ListImagesInRecycleBin",
        "ec2:ListSnapshotsInRecycleBin",
        "ec2:ModifyAddressAttribute",
        "ec2:ModifyAvailabilityZoneGroup",
        "ec2:ModifyCapacityReservation",
        "ec2:ModifyCapacityReservationFleet",
        "ec2:ModifyClientVpnEndpoint",
        "ec2:ModifyDefaultCreditSpecification",
        "ec2:ModifyEbsDefaultKmsKeyId",
        "ec2:ModifyFleet",
        "ec2:ModifyFpgaImageAttribute",
        "ec2:ModifyHosts",
        "ec2:ModifyIdFormat",
        "ec2:ModifyIdentityIdFormat",
        "ec2:ModifyImageAttribute",
        "ec2:ModifyInstanceAttribute",
        "ec2:ModifyInstanceCapacityReservationAttributes",
        "ec2:ModifyInstanceCreditSpecification",
        "ec2:ModifyInstanceEventStartTime",
        "ec2:ModifyInstanceEventWindow",
        "ec2:ModifyInstanceMaintenanceOptions",
        "ec2:ModifyInstanceMetadataOptions",
        "ec2:ModifyInstancePlacement",
        "ec2:ModifyIpam",
        "ec2:ModifyIpamPool",
        "ec2:ModifyIpamResourceCidr",
        "ec2:ModifyIpamResourceDiscovery",
        "ec2:ModifyIpamScope",
        "ec2:ModifyLaunchTemplate",
        "ec2:ModifyLocalGatewayRoute",
        "ec2:ModifyManagedPrefixList",
        "ec2:ModifyNetworkInterfaceAttribute",
        "ec2:ModifyPrivateDnsNameOptions",
        "ec2:ModifyReservedInstances",
        "ec2:ModifySecurityGroupRules",
        "ec2:ModifySnapshotAttribute",
        "ec2:ModifySnapshotTier",
        "ec2:ModifySpotFleetRequest",
        "ec2:ModifySubnetAttribute",
        "ec2:ModifyTrafficMirrorFilterNetworkServices",
        "ec2:ModifyTrafficMirrorFilterRule",
        "ec2:ModifyTrafficMirrorSession",
        "ec2:ModifyTransitGateway",
        "ec2:ModifyTransitGatewayPrefixListReference",
        "ec2:ModifyTransitGatewayVpcAttachment",
        "ec2:ModifyVerifiedAccessEndpoint",
        "ec2:ModifyVerifiedAccessEndpointPolicy",
        "ec2:ModifyVerifiedAccessGroup",
        "ec2:ModifyVerifiedAccessGroupPolicy",
        "ec2:ModifyVerifiedAccessInstance",
        "ec2:ModifyVerifiedAccessInstanceLoggingConfiguration",
        "ec2:ModifyVerifiedAccessTrustProvider",
        "ec2:ModifyVolume",
        "ec2:ModifyVolumeAttribute",
        "ec2:ModifyVpcAttribute",
        "ec2:ModifyVpcEndpoint",
        "ec2:ModifyVpcEndpointConnectionNotification",
        "ec2:ModifyVpcEndpointServiceConfiguration",
        "ec2:ModifyVpcEndpointServicePayerResponsibility",
        "ec2:ModifyVpcEndpointServicePermissions",
        "ec2:ModifyVpcPeeringConnectionOptions",
        "ec2:ModifyVpcTenancy",
        "ec2:ModifyVpnConnection",
        "ec2:ModifyVpnConnectionOptions",
        "ec2:ModifyVpnTunnelCertificate",
        "ec2:ModifyVpnTunnelOptions",
        "ec2:MonitorInstances",
        "ec2:MoveAddressToVpc",
        "ec2:MoveByoipCidrToIpam",
        "ec2:PauseVolumeIO",
        "ec2:ProvisionByoipCidr",
        "ec2:ProvisionIpamPoolCidr",
        "ec2:ProvisionPublicIpv4PoolCidr",
        "ec2:PurchaseHostReservation",
        "ec2:PurchaseReservedInstancesOffering",
        "ec2:PurchaseScheduledInstances",
        "ec2:PutResourcePolicy",
        "ec2:RebootInstances",
        "ec2:RegisterImage",
        "ec2:RegisterInstanceEventNotificationAttributes",
        "ec2:RegisterTransitGatewayMulticastGroupMembers",
        "ec2:RegisterTransitGatewayMulticastGroupSources",
        "ec2:RejectTransitGatewayMulticastDomainAssociations",
        "ec2:RejectTransitGatewayPeeringAttachment",
        "ec2:RejectTransitGatewayVpcAttachment",
        "ec2:RejectVpcEndpointConnections",
        "ec2:RejectVpcPeeringConnection",
        "ec2:ReleaseAddress",
        "ec2:ReleaseHosts",
        "ec2:ReleaseIpamPoolAllocation",
        "ec2:ReplaceIamInstanceProfileAssociation",
        "ec2:ReplaceNetworkAclAssociation",
        "ec2:ReplaceNetworkAclEntry",
        "ec2:ReplaceRoute",
        "ec2:ReplaceRouteTableAssociation",
        "ec2:ReplaceTransitGatewayRoute",
        "ec2:ReplaceVpnTunnel",
        "ec2:ReportInstanceStatus",
        "ec2:RequestSpotFleet",
        "ec2:RequestSpotInstances",
        "ec2:ResetAddressAttribute",
        "ec2:ResetEbsDefaultKmsKeyId",
        "ec2:ResetFpgaImageAttribute",
        "ec2:ResetImageAttribute",
        "ec2:ResetInstanceAttribute",
        "ec2:ResetNetworkInterfaceAttribute",
        "ec2:ResetSnapshotAttribute",
        "ec2:RestoreAddressToClassic",
        "ec2:RestoreImageFromRecycleBin",
        "ec2:RestoreManagedPrefixListVersion",
        "ec2:RestoreSnapshotFromRecycleBin",
        "ec2:RestoreSnapshotTier",
        "ec2:RevokeClientVpnIngress",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:RunInstances",
        "ec2:RunScheduledInstances",
        "ec2:SearchLocalGatewayRoutes",
        "ec2:SearchTransitGatewayMulticastGroups",
        "ec2:SearchTransitGatewayRoutes",
        "ec2:SendDiagnosticInterrupt",
        "ec2:SendSpotInstanceInterruptions",
        "ec2:StartInstances",
        "ec2:StartNetworkInsightsAccessScopeAnalysis",
        "ec2:StartNetworkInsightsAnalysis",
        "ec2:StartVpcEndpointServicePrivateDnsVerification",
        "ec2:StopInstances",
        "ec2:TerminateClientVpnConnections",
        "ec2:TerminateInstances",
        "ec2:UnassignIpv6Addresses",
        "ec2:UnassignPrivateIpAddresses",
        "ec2:UnassignPrivateNatGatewayAddress",
        "ec2:UnmonitorInstances",
        "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
        "ec2:WithdrawByoipCidr"
      ]
    },
    "removedActions": {
      "Amazon EC2": [
        "ec2:AcceptAddressTransfer",
        "ec2:AcceptReservedInstancesExchangeQuote",
        "ec2:AcceptTransitGatewayMulticastDomainAssociations",
        "ec2:AcceptTransitGatewayPeeringAttachment",
        "ec2:AcceptTransitGatewayVpcAttachment",
        "ec2:AcceptVpcEndpointConnections",
        "ec2:AcceptVpcPeeringConnection",
        "ec2:AdvertiseByoipCidr",
        "ec2:AllocateAddress",
        "ec2:AllocateHosts",
        "ec2:AllocateIpamPoolCidr",
        "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
        "ec2:AssignIpv6Addresses",
        "ec2:AssignPrivateIpAddresses",
        "ec2:AssignPrivateNatGatewayAddress",
        "ec2:AssociateAddress",
        "ec2:AssociateClientVpnTargetNetwork",
        "ec2:AssociateDhcpOptions",
        "ec2:AssociateEnclaveCertificateIamRole",
        "ec2:AssociateIamInstanceProfile",
        "ec2:AssociateInstanceEventWindow",
        "ec2:AssociateIpamResourceDiscovery",
        "ec2:AssociateNatGatewayAddress",
        "ec2:AssociateRouteTable",
        "ec2:AssociateSubnetCidrBlock",
        "ec2:AssociateTransitGatewayMulticastDomain",
        "ec2:AssociateTransitGatewayPolicyTable",
        "ec2:AssociateTransitGatewayRouteTable",
        "ec2:AssociateTrunkInterface",
        "ec2:AssociateVerifiedAccessInstanceWebAcl",
        "ec2:AssociateVpcCidrBlock",
        "ec2:AttachClassicLinkVpc",
        "ec2:AttachInternetGateway",
        "ec2:AttachNetworkInterface",
        "ec2:AttachVerifiedAccessTrustProvider",
        "ec2:AttachVolume",
        "ec2:AttachVpnGateway",
        "ec2:AuthorizeClientVpnIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:BundleInstance",
        "ec2:CancelBundleTask",
        "ec2:CancelCapacityReservation",
        "ec2:CancelCapacityReservationFleets",
        "ec2:CancelConversionTask",
        "ec2:CancelExportTask",
        "ec2:CancelImageLaunchPermission",
        "ec2:CancelImportTask",
        "ec2:CancelReservedInstancesListing",
        "ec2:CancelSpotFleetRequests",
        "ec2:CancelSpotInstanceRequests",
        "ec2:ConfirmProductInstance",
        "ec2:CopyFpgaImage",
        "ec2:CopyImage",
        "ec2:CopySnapshot",
        "ec2:CreateCapacityReservation",
        "ec2:CreateCapacityReservationFleet",
        "ec2:CreateCarrierGateway",
        "ec2:CreateClientVpnEndpoint",
        "ec2:CreateClientVpnRoute",
        "ec2:CreateCoipCidr",
        "ec2:CreateCoipPool",
        "ec2:CreateCoipPoolPermission",
        "ec2:CreateCustomerGateway",
        "ec2:CreateDefaultSubnet",
        "ec2:CreateDefaultVpc",
        "ec2:CreateDhcpOptions",
        "ec2:CreateEgressOnlyInternetGateway",
        "ec2:CreateFleet",
        "ec2:CreateFlowLogs",
        "ec2:CreateFpgaImage",
        "ec2:CreateImage",
        "ec2:CreateInstanceEventWindow",
        "ec2:CreateInstanceExportTask",
        "ec2:CreateInternetGateway",
        "ec2:CreateIpam",
        "ec2:CreateIpamPool",
        "ec2:CreateIpamResourceDiscovery",
        "ec2:CreateIpamScope",
        "ec2:CreateKeyPair",
        "ec2:CreateLaunchTemplate",
        "ec2:CreateLaunchTemplateVersion",
        "ec2:CreateLocalGatewayRoute",
        "ec2:CreateLocalGatewayRouteTable",
        "ec2:CreateLocalGatewayRouteTablePermission",
        "ec2:CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
        "ec2:CreateLocalGatewayRouteTableVpcAssociation",
        "ec2:CreateManagedPrefixList",
        "ec2:CreateNatGateway",
        "ec2:CreateNetworkAcl",
        "ec2:CreateNetworkAclEntry",
        "ec2:CreateNetworkInsightsAccessScope",
        "ec2:CreateNetworkInsightsPath",
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:CreatePlacementGroup",
        "ec2:CreatePublicIpv4Pool",
        "ec2:CreateReplaceRootVolumeTask",
        "ec2:CreateReservedInstancesListing",
        "ec2:CreateRestoreImageTask",
        "ec2:CreateRoute",
        "ec2:CreateRouteTable",
        "ec2:CreateSecurityGroup",
        "ec2:CreateSnapshot",
        "ec2:CreateSnapshots",
        "ec2:CreateSpotDatafeedSubscription",
        "ec2:CreateStoreImageTask",
        "ec2:CreateSubnet",
        "ec2:CreateSubnetCidrReservation",
        "ec2:CreateTags",
        "ec2:CreateTrafficMirrorFilter",
        "ec2:CreateTrafficMirrorFilterRule",
        "ec2:CreateTrafficMirrorSession",
        "ec2:CreateTrafficMirrorTarget",
        "ec2:CreateTransitGateway",
        "ec2:CreateTransitGatewayConnect",
        "ec2:CreateTransitGatewayConnectPeer",
        "ec2:CreateTransitGatewayMulticastDomain",
        "ec2:CreateTransitGatewayPeeringAttachment",
        "ec2:CreateTransitGatewayPolicyTable",
        "ec2:CreateTransitGatewayPrefixListReference",
        "ec2:CreateTransitGatewayRoute",
        "ec2:CreateTransitGatewayRouteTable",
        "ec2:CreateTransitGatewayRouteTableAnnouncement",
        "ec2:CreateTransitGatewayVpcAttachment",
        "ec2:CreateVerifiedAccessEndpoint",
        "ec2:CreateVerifiedAccessGroup",
        "ec2:CreateVerifiedAccessInstance",
        "ec2:CreateVerifiedAccessTrustProvider",
        "ec2:CreateVolume",
        "ec2:CreateVpc",
        "ec2:CreateVpcEndpoint",
        "ec2:CreateVpcEndpointConnectionNotification",
        "ec2:CreateVpcEndpointServiceConfiguration",
        "ec2:CreateVpcPeeringConnection",
        "ec2:CreateVpnConnection",
        "ec2:CreateVpnConnectionRoute",
        "ec2:CreateVpnGateway",
        "ec2:DeleteCarrierGateway",
        "ec2:DeleteClientVpnEndpoint",
        "ec2:DeleteClientVpnRoute",
        "ec2:DeleteCoipCidr",
        "ec2:DeleteCoipPool",
        "ec2:DeleteCoipPoolPermission",
        "ec2:DeleteCustomerGateway",
        "ec2:DeleteDhcpOptions",
        "ec2:DeleteEgressOnlyInternetGateway",
        "ec2:DeleteFleets",
        "ec2:DeleteFlowLogs",
        "ec2:DeleteFpgaImage",
        "ec2:DeleteInstanceEventWindow",
        "ec2:DeleteInternetGateway",
        "ec2:DeleteIpam",
        "ec2:DeleteIpamPool",
        "ec2:DeleteIpamResourceDiscovery",
        "ec2:DeleteIpamScope",
        "ec2:DeleteKeyPair",
        "ec2:DeleteLaunchTemplate",
        "ec2:DeleteLaunchTemplateVersions",
        "ec2:DeleteLocalGatewayRoute",
        "ec2:DeleteLocalGatewayRouteTable",
        "ec2:DeleteLocalGatewayRouteTablePermission",
        "ec2:DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
        "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
        "ec2:DeleteManagedPrefixList",
        "ec2:DeleteNatGateway",
        "ec2:DeleteNetworkAcl",
        "ec2:DeleteNetworkAclEntry",
        "ec2:DeleteNetworkInsightsAccessScope",
        "ec2:DeleteNetworkInsightsAccessScopeAnalysis",
        "ec2:DeleteNetworkInsightsAnalysis",
        "ec2:DeleteNetworkInsightsPath",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:DeletePlacementGroup",
        "ec2:DeletePublicIpv4Pool",
        "ec2:DeleteQueuedReservedInstances",
        "ec2:DeleteResourcePolicy",
        "ec2:DeleteRoute",
        "ec2:DeleteRouteTable",
        "ec2:DeleteSecurityGroup",
        "ec2:DeleteSnapshot",
        "ec2:DeleteSpotDatafeedSubscription",
        "ec2:DeleteSubnet",
        "ec2:DeleteSubnetCidrReservation",
        "ec2:DeleteTags",
        "ec2:DeleteTrafficMirrorFilter",
        "ec2:DeleteTrafficMirrorFilterRule",
        "ec2:DeleteTrafficMirrorSession",
        "ec2:DeleteTrafficMirrorTarget",
        "ec2:DeleteTransitGateway",
        "ec2:DeleteTransitGatewayConnect",
        "ec2:DeleteTransitGatewayConnectPeer",
        "ec2:DeleteTransitGatewayMulticastDomain",
        "ec2:DeleteTransitGatewayPeeringAttachment",
        "ec2:DeleteTransitGatewayPolicyTable",
        "ec2:DeleteTransitGatewayPrefixListReference",
        "ec2:DeleteTransitGatewayRoute",
        "ec2:DeleteTransitGatewayRouteTable",
        "ec2:DeleteTransitGatewayRouteTableAnnouncement",
        "ec2:DeleteTransitGatewayVpcAttachment",
        "ec2:DeleteVerifiedAccessEndpoint",
        "ec2:DeleteVerifiedAccessGroup",
        "ec2:DeleteVerifiedAccessInstance",
        "ec2:DeleteVerifiedAccessTrustProvider",
        "ec2:DeleteVolume",
        "ec2:DeleteVpc",
        "ec2:DeleteVpcEndpointConnectionNotifications",
        "ec2:DeleteVpcEndpointServiceConfigurations",
        "ec2:DeleteVpcEndpoints",
        "ec2:DeleteVpcPeeringConnection",
        "ec2:DeleteVpnConnection",
        "ec2:DeleteVpnConnectionRoute",
        "ec2:DeleteVpnGateway",
        "ec2:DeprovisionByoipCidr",
        "ec2:DeprovisionIpamPoolCidr",
        "ec2:DeprovisionPublicIpv4PoolCidr",
        "ec2:DeregisterImage",
        "ec2:DeregisterInstanceEventNotificationAttributes",
        "ec2:DeregisterTransitGatewayMulticastGroupMembers",
        "ec2:DeregisterTransitGatewayMulticastGroupSources",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddressTransfers",
        "ec2:DescribeAddresses",
        "ec2:DescribeAddressesAttribute",
        "ec2:DescribeAggregateIdFormat",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeAwsNetworkPerformanceMetricSubscriptions",
        "ec2:DescribeBundleTasks",
        "ec2:DescribeByoipCidrs",
        "ec2:DescribeCapacityReservationFleets",
        "ec2:DescribeCapacityReservations",
        "ec2:DescribeCarrierGateways",
        "ec2:DescribeClassicLinkInstances",
        "ec2:DescribeClientVpnAuthorizationRules",
        "ec2:DescribeClientVpnConnections",
        "ec2:DescribeClientVpnEndpoints",
        "ec2:DescribeClientVpnRoutes",
        "ec2:DescribeClientVpnTargetNetworks",
        "ec2:DescribeCoipPools",
        "ec2:DescribeConversionTasks",
        "ec2:DescribeCustomerGateways",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeEgressOnlyInternetGateways",
        "ec2:DescribeElasticGpus",
        "ec2:DescribeExportImageTasks",
        "ec2:DescribeExportTasks",
        "ec2:DescribeFastLaunchImages",
        "ec2:DescribeFastSnapshotRestores",
        "ec2:DescribeFleetHistory",
        "ec2:DescribeFleetInstances",
        "ec2:DescribeFleets",
        "ec2:DescribeFlowLogs",
        "ec2:DescribeFpgaImageAttribute",
        "ec2:DescribeFpgaImages",
        "ec2:DescribeHostReservationOfferings",
        "ec2:DescribeHostReservations",
        "ec2:DescribeHosts",
        "ec2:DescribeIamInstanceProfileAssociations",
        "ec2:DescribeIdFormat",
        "ec2:DescribeIdentityIdFormat",
        "ec2:DescribeImageAttribute",
        "ec2:DescribeImages",
        "ec2:DescribeImportImageTasks",
        "ec2:DescribeImportSnapshotTasks",
        "ec2:DescribeInstanceAttribute",
        "ec2:DescribeInstanceCreditSpecifications",
        "ec2:DescribeInstanceEventNotificationAttributes",
        "ec2:DescribeInstanceEventWindows",
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeInstanceTypeOfferings",
        "ec2:DescribeInstanceTypes",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeIpamPools",
        "ec2:DescribeIpamResourceDiscoveries",
        "ec2:DescribeIpamResourceDiscoveryAssociations",
        "ec2:DescribeIpamScopes",
        "ec2:DescribeIpams",
        "ec2:DescribeIpv6Pools",
        "ec2:DescribeKeyPairs",
        "ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeLaunchTemplates",
        "ec2:DescribeLocalGatewayRouteTablePermissions",
        "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
        "ec2:DescribeLocalGatewayRouteTables",
        "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
        "ec2:DescribeLocalGatewayVirtualInterfaces",
        "ec2:DescribeLocalGateways",
        "ec2:DescribeManagedPrefixLists",
        "ec2:DescribeMovingAddresses",
        "ec2:DescribeNatGateways",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeNetworkInsightsAccessScopeAnalyses",
        "ec2:DescribeNetworkInsightsAccessScopes",
        "ec2:DescribeNetworkInsightsAnalyses",
        "ec2:DescribeNetworkInsightsPaths",
        "ec2:DescribeNetworkInterfaceAttribute",
        "ec2:DescribeNetworkInterfacePermissions",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribePlacementGroups",
        "ec2:DescribePrefixLists",
        "ec2:DescribePrincipalIdFormat",
        "ec2:DescribePublicIpv4Pools",
        "ec2:DescribeRegions",
        "ec2:DescribeReplaceRootVolumeTasks",
        "ec2:DescribeReservedInstances",
        "ec2:DescribeReservedInstancesListings",
        "ec2:DescribeReservedInstancesModifications",
        "ec2:DescribeReservedInstancesOfferings",
        "ec2:DescribeRouteTables",
        "ec2:DescribeScheduledInstanceAvailability",
        "ec2:DescribeScheduledInstances",
        "ec2:DescribeSecurityGroupReferences",
        "ec2:DescribeSecurityGroupRules",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSnapshotAttribute",
        "ec2:DescribeSnapshotTierStatus",
        "ec2:DescribeSnapshots",
        "ec2:DescribeSpotDatafeedSubscription",
        "ec2:DescribeSpotFleetInstances",
        "ec2:DescribeSpotFleetRequestHistory",
        "ec2:DescribeSpotFleetRequests",
        "ec2:DescribeSpotInstanceRequests",
        "ec2:DescribeSpotPriceHistory",
        "ec2:DescribeStaleSecurityGroups",
        "ec2:DescribeStoreImageTasks",
        "ec2:DescribeSubnets",
        "ec2:DescribeTags",
        "ec2:DescribeTrafficMirrorFilters",
        "ec2:DescribeTrafficMirrorSessions",
        "ec2:DescribeTrafficMirrorTargets",
        "ec2:DescribeTransitGatewayAttachments",
        "ec2:DescribeTransitGatewayConnectPeers",
        "ec2:DescribeTransitGatewayConnects",
        "ec2:DescribeTransitGatewayMulticastDomains",
        "ec2:DescribeTransitGatewayPeeringAttachments",
        "ec2:DescribeTransitGatewayPolicyTables",
        "ec2:DescribeTransitGatewayRouteTableAnnouncements",
        "ec2:DescribeTransitGatewayRouteTables",
        "ec2:DescribeTransitGatewayVpcAttachments",
        "ec2:DescribeTransitGateways",
        "ec2:DescribeTrunkInterfaceAssociations",
        "ec2:DescribeVerifiedAccessEndpoints",
        "ec2:DescribeVerifiedAccessGroups",
        "ec2:DescribeVerifiedAccessInstanceLoggingConfigurations",
        "ec2:DescribeVerifiedAccessInstanceWebAclAssociations",
        "ec2:DescribeVerifiedAccessInstances",
        "ec2:DescribeVerifiedAccessTrustProviders",
        "ec2:DescribeVolumeAttribute",
        "ec2:DescribeVolumeStatus",
        "ec2:DescribeVolumes",
        "ec2:DescribeVolumesModifications",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeVpcClassicLink",
        "ec2:DescribeVpcClassicLinkDnsSupport",
        "ec2:DescribeVpcEndpointConnectionNotifications",
        "ec2:DescribeVpcEndpointConnections",
        "ec2:DescribeVpcEndpointServiceConfigurations",
        "ec2:DescribeVpcEndpointServicePermissions",
        "ec2:DescribeVpcEndpointServices",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeVpnGateways",
        "ec2:DetachClassicLinkVpc",
        "ec2:DetachInternetGateway",
        "ec2:DetachNetworkInterface",
        "ec2:DetachVerifiedAccessTrustProvider",
        "ec2:DetachVolume",
        "ec2:DetachVpnGateway",
        "ec2:DisableAddressTransfer",
        "ec2:DisableAwsNetworkPerformanceMetricSubscription",
        "ec2:DisableEbsEncryptionByDefault",
        "ec2:DisableFastLaunch",
        "ec2:DisableFastSnapshotRestores",
        "ec2:DisableImageDeprecation",
        "ec2:DisableIpamOrganizationAdminAccount",
        "ec2:DisableSerialConsoleAccess",
        "ec2:DisableTransitGatewayRouteTablePropagation",
        "ec2:DisableVgwRoutePropagation",
        "ec2:DisableVpcClassicLink",
        "ec2:DisableVpcClassicLinkDnsSupport",
        "ec2:DisassociateAddress",
        "ec2:DisassociateClientVpnTargetNetwork",
        "ec2:DisassociateEnclaveCertificateIamRole",
        "ec2:DisassociateIamInstanceProfile",
        "ec2:DisassociateInstanceEventWindow",
        "ec2:DisassociateIpamResourceDiscovery",
        "ec2:DisassociateNatGatewayAddress",
        "ec2:DisassociateRouteTable",
        "ec2:DisassociateSubnetCidrBlock",
        "ec2:DisassociateTransitGatewayMulticastDomain",
        "ec2:DisassociateTransitGatewayPolicyTable",
        "ec2:DisassociateTransitGatewayRouteTable",
        "ec2:DisassociateTrunkInterface",
        "ec2:DisassociateVerifiedAccessInstanceWebAcl",
        "ec2:DisassociateVpcCidrBlock",
        "ec2:EnableAddressTransfer",
        "ec2:EnableAwsNetworkPerformanceMetricSubscription",
        "ec2:EnableEbsEncryptionByDefault",
        "ec2:EnableFastLaunch",
        "ec2:EnableFastSnapshotRestores",
        "ec2:EnableImageDeprecation",
        "ec2:EnableIpamOrganizationAdminAccount",
        "ec2:EnableReachabilityAnalyzerOrganizationSharing",
        "ec2:EnableSerialConsoleAccess",
        "ec2:EnableTransitGatewayRouteTablePropagation",
        "ec2:EnableVgwRoutePropagation",
        "ec2:EnableVolumeIO",
        "ec2:EnableVpcClassicLink",
        "ec2:EnableVpcClassicLinkDnsSupport",
        "ec2:ExportClientVpnClientCertificateRevocationList",
        "ec2:ExportClientVpnClientConfiguration",
        "ec2:ExportImage",
        "ec2:ExportTransitGatewayRoutes",
        "ec2:GetAssociatedEnclaveCertificateIamRoles",
        "ec2:GetAssociatedIpv6PoolCidrs",
        "ec2:GetAwsNetworkPerformanceData",
        "ec2:GetCapacityReservationUsage",
        "ec2:GetCoipPoolUsage",
        "ec2:GetConsoleOutput",
        "ec2:GetConsoleScreenshot",
        "ec2:GetDefaultCreditSpecification",
        "ec2:GetEbsDefaultKmsKeyId",
        "ec2:GetEbsEncryptionByDefault",
        "ec2:GetFlowLogsIntegrationTemplate",
        "ec2:GetGroupsForCapacityReservation",
        "ec2:GetHostReservationPurchasePreview",
        "ec2:GetInstanceTypesFromInstanceRequirements",
        "ec2:GetInstanceUefiData",
        "ec2:GetIpamAddressHistory",
        "ec2:GetIpamDiscoveredAccounts",
        "ec2:GetIpamDiscoveredResourceCidrs",
        "ec2:GetIpamPoolAllocations",
        "ec2:GetIpamPoolCidrs",
        "ec2:GetIpamResourceCidrs",
        "ec2:GetLaunchTemplateData",
        "ec2:GetManagedPrefixListAssociations",
        "ec2:GetManagedPrefixListEntries",
        "ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
        "ec2:GetNetworkInsightsAccessScopeContent",
        "ec2:GetPasswordData",
        "ec2:GetReservedInstancesExchangeQuote",
        "ec2:GetResourcePolicy",
        "ec2:GetSerialConsoleAccessStatus",
        "ec2:GetSpotPlacementScores",
        "ec2:GetSubnetCidrReservations",
        "ec2:GetTransitGatewayAttachmentPropagations",
        "ec2:GetTransitGatewayMulticastDomainAssociations",
        "ec2:GetTransitGatewayPolicyTableAssociations",
        "ec2:GetTransitGatewayPolicyTableEntries",
        "ec2:GetTransitGatewayPrefixListReferences",
        "ec2:GetTransitGatewayRouteTableAssociations",
        "ec2:GetTransitGatewayRouteTablePropagations",
        "ec2:GetVerifiedAccessEndpointPolicy",
        "ec2:GetVerifiedAccessGroupPolicy",
        "ec2:GetVerifiedAccessInstanceWebAcl",
        "ec2:GetVpnConnectionDeviceSampleConfiguration",
        "ec2:GetVpnConnectionDeviceTypes",
        "ec2:GetVpnTunnelReplacementStatus",
        "ec2:ImportByoipCidrToIpam",
        "ec2:ImportClientVpnClientCertificateRevocationList",
        "ec2:ImportImage",
        "ec2:ImportInstance",
        "ec2:ImportKeyPair",
        "ec2:ImportSnapshot",
        "ec2:ImportVolume",
        "ec2:ListImagesInRecycleBin",
        "ec2:ListSnapshotsInRecycleBin",
        "ec2:ModifyAddressAttribute",
        "ec2:ModifyAvailabilityZoneGroup",
        "ec2:ModifyCapacityReservation",
        "ec2:ModifyCapacityReservationFleet",
        "ec2:ModifyClientVpnEndpoint",
        "ec2:ModifyDefaultCreditSpecification",
        "ec2:ModifyEbsDefaultKmsKeyId",
        "ec2:ModifyFleet",
        "ec2:ModifyFpgaImageAttribute",
        "ec2:ModifyHosts",
        "ec2:ModifyIdFormat",
        "ec2:ModifyIdentityIdFormat",
        "ec2:ModifyImageAttribute",
        "ec2:ModifyInstanceAttribute",
        "ec2:ModifyInstanceCapacityReservationAttributes",
        "ec2:ModifyInstanceCreditSpecification",
        "ec2:ModifyInstanceEventStartTime",
        "ec2:ModifyInstanceEventWindow",
        "ec2:ModifyInstanceMaintenanceOptions",
        "ec2:ModifyInstanceMetadataOptions",
        "ec2:ModifyInstancePlacement",
        "ec2:ModifyIpam",
        "ec2:ModifyIpamPool",
        "ec2:ModifyIpamResourceCidr",
        "ec2:ModifyIpamResourceDiscovery",
        "ec2:ModifyIpamScope",
        "ec2:ModifyLaunchTemplate",
        "ec2:ModifyLocalGatewayRoute",
        "ec2:ModifyManagedPrefixList",
        "ec2:ModifyNetworkInterfaceAttribute",
        "ec2:ModifyPrivateDnsNameOptions",
        "ec2:ModifyReservedInstances",
        "ec2:ModifySecurityGroupRules",
        "ec2:ModifySnapshotAttribute",
        "ec2:ModifySnapshotTier",
        "ec2:ModifySpotFleetRequest",
        "ec2:ModifySubnetAttribute",
        "ec2:ModifyTrafficMirrorFilterNetworkServices",
        "ec2:ModifyTrafficMirrorFilterRule",
        "ec2:ModifyTrafficMirrorSession",
        "ec2:ModifyTransitGateway",
        "ec2:ModifyTransitGatewayPrefixListReference",
        "ec2:ModifyTransitGatewayVpcAttachment",
        "ec2:ModifyVerifiedAccessEndpoint",
        "ec2:ModifyVerifiedAccessEndpointPolicy",
        "ec2:ModifyVerifiedAccessGroup",
        "ec2:ModifyVerifiedAccessGroupPolicy",
        "ec2:ModifyVerifiedAccessInstance",
        "ec2:ModifyVerifiedAccessInstanceLoggingConfiguration",
        "ec2:ModifyVerifiedAccessTrustProvider",
        "ec2:ModifyVolume",
        "ec2:ModifyVolumeAttribute",
        "ec2:ModifyVpcAttribute",
        "ec2:ModifyVpcEndpoint",
        "ec2:ModifyVpcEndpointConnectionNotification",
        "ec2:ModifyVpcEndpointServiceConfiguration",
        "ec2:ModifyVpcEndpointServicePayerResponsibility",
        "ec2:ModifyVpcEndpointServicePermissions",
        "ec2:ModifyVpcPeeringConnectionOptions",
        "ec2:ModifyVpcTenancy",
        "ec2:ModifyVpnConnection",
        "ec2:ModifyVpnConnectionOptions",
        "ec2:ModifyVpnTunnelCertificate",
        "ec2:ModifyVpnTunnelOptions",
        "ec2:MonitorInstances",
        "ec2:MoveAddressToVpc",
        "ec2:MoveByoipCidrToIpam",
        "ec2:PauseVolumeIO",
        "ec2:ProvisionByoipCidr",
        "ec2:ProvisionIpamPoolCidr",
        "ec2:ProvisionPublicIpv4PoolCidr",
        "ec2:PurchaseHostReservation",
        "ec2:PurchaseReservedInstancesOffering",
        "ec2:PurchaseScheduledInstances",
        "ec2:PutResourcePolicy",
        "ec2:RebootInstances",
        "ec2:RegisterImage",
        "ec2:RegisterInstanceEventNotificationAttributes",
        "ec2:RegisterTransitGatewayMulticastGroupMembers",
        "ec2:RegisterTransitGatewayMulticastGroupSources",
        "ec2:RejectTransitGatewayMulticastDomainAssociations",
        "ec2:RejectTransitGatewayPeeringAttachment",
        "ec2:RejectTransitGatewayVpcAttachment",
        "ec2:RejectVpcEndpointConnections",
        "ec2:RejectVpcPeeringConnection",
        "ec2:ReleaseAddress",
        "ec2:ReleaseHosts",
        "ec2:ReleaseIpamPoolAllocation",
        "ec2:ReplaceIamInstanceProfileAssociation",
        "ec2:ReplaceNetworkAclAssociation",
        "ec2:ReplaceNetworkAclEntry",
        "ec2:ReplaceRoute",
        "ec2:ReplaceRouteTableAssociation",
        "ec2:ReplaceTransitGatewayRoute",
        "ec2:ReplaceVpnTunnel",
        "ec2:ReportInstanceStatus",
        "ec2:RequestSpotFleet",
        "ec2:RequestSpotInstances",
        "ec2:ResetAddressAttribute",
        "ec2:ResetEbsDefaultKmsKeyId",
        "ec2:ResetFpgaImageAttribute",
        "ec2:ResetImageAttribute",
        "ec2:ResetInstanceAttribute",
        "ec2:ResetNetworkInterfaceAttribute",
        "ec2:ResetSnapshotAttribute",
        "ec2:RestoreAddressToClassic",
        "ec2:RestoreImageFromRecycleBin",
        "ec2:RestoreManagedPrefixListVersion",
        "ec2:RestoreSnapshotFromRecycleBin",
        "ec2:RestoreSnapshotTier",
        "ec2:RevokeClientVpnIngress",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:RunInstances",
        "ec2:RunScheduledInstances",
        "ec2:SearchLocalGatewayRoutes",
        "ec2:SearchTransitGatewayMulticastGroups",
        "ec2:SearchTransitGatewayRoutes",
        "ec2:SendDiagnosticInterrupt",
        "ec2:SendSpotInstanceInterruptions",
        "ec2:StartInstances",
        "ec2:StartNetworkInsightsAccessScopeAnalysis",
        "ec2:StartNetworkInsightsAnalysis",
        "ec2:StartVpcEndpointServicePrivateDnsVerification",
        "ec2:StopInstances",
        "ec2:TerminateClientVpnConnections",
        "ec2:TerminateInstances",
        "ec2:UnassignIpv6Addresses",
        "ec2:UnassignPrivateIpAddresses",
        "ec2:UnassignPrivateNatGatewayAddress",
        "ec2:UnmonitorInstances",
        "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
        "ec2:WithdrawByoipCidr"
      ]
    }
  },
  {
    "dateOfChange": "2023-06-03",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS Database Migration Service": [
        "dms:CreateDataMigration",
        "dms:CreateReplicationConfig",
        "dms:DeleteDataMigration",
        "dms:DeleteReplicationConfig",
        "dms:DescribeDataMigrations",
        "dms:DescribeReplicationConfigs",
        "dms:DescribeReplicationTableStatistics",
        "dms:DescribeReplications",
        "dms:ModifyDataMigration",
        "dms:ModifyReplicationConfig",
        "dms:ReloadReplicationTables",
        "dms:StartDataMigration",
        "dms:StartReplication",
        "dms:StopDataMigration",
        "dms:StopReplication"
      ],
      "AWS Marketplace Management Portal": [
        "aws-marketplace-management:GetAdditionalSellerNotificationRecipients",
        "aws-marketplace-management:GetBankAccountVerificationDetails",
        "aws-marketplace-management:GetSecondaryUserVerificationDetails",
        "aws-marketplace-management:GetSellerVerificationDetails",
        "aws-marketplace-management:PutAdditionalSellerNotificationRecipients",
        "aws-marketplace-management:PutBankAccountVerificationDetails",
        "aws-marketplace-management:PutSecondaryUserVerificationDetails",
        "aws-marketplace-management:PutSellerVerificationDetails"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-06-02",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon AppFlow": [
        "appflow:CancelFlowExecutions",
        "appflow:UseConnectorProfile"
      ],
      "Amazon WorkSpaces Web": [
        "workspaces-web:AssociateIpAccessSettings",
        "workspaces-web:CreateIpAccessSettings",
        "workspaces-web:DeleteIpAccessSettings",
        "workspaces-web:DisassociateIpAccessSettings",
        "workspaces-web:GetIpAccessSettings",
        "workspaces-web:ListIpAccessSettings",
        "workspaces-web:UpdateIpAccessSettings"
      ]
    },
    "removedActions": {
      "Amazon AppFlow": [
        "appflow:\n"
      ]
    }
  },
  {
    "dateOfChange": "2023-06-01",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "Amazon Security Lake": [
        "securitylake:CreateDataLake",
        "securitylake:CreateDataLakeExceptionSubscription",
        "securitylake:CreateDataLakeOrganizationConfiguration",
        "securitylake:CreateSubscriberNotification",
        "securitylake:DeleteDataLake",
        "securitylake:DeleteDataLakeExceptionSubscription",
        "securitylake:DeleteDataLakeOrganizationConfiguration",
        "securitylake:DeleteSubscriberNotification",
        "securitylake:DeregisterDataLakeDelegatedAdministrator",
        "securitylake:GetDataLakeExceptionSubscription",
        "securitylake:GetDataLakeOrganizationConfiguration",
        "securitylake:GetDataLakeSources",
        "securitylake:ListDataLakeExceptions",
        "securitylake:ListDataLakes",
        "securitylake:RegisterDataLakeDelegatedAdministrator",
        "securitylake:UpdateDataLake",
        "securitylake:UpdateDataLakeExceptionSubscription",
        "securitylake:UpdateSubscriberNotification"
      ]
    },
    "removedActions": {
      "Amazon Security Lake": [
        "securitylake:CreateDatalake",
        "securitylake:CreateDatalakeAutoEnable",
        "securitylake:CreateDatalakeDelegatedAdmin",
        "securitylake:CreateDatalakeExceptionsSubscription",
        "securitylake:CreateSubscriptionNotificationConfiguration",
        "securitylake:DeleteDatalake",
        "securitylake:DeleteDatalakeAutoEnable",
        "securitylake:DeleteDatalakeDelegatedAdmin",
        "securitylake:DeleteDatalakeExceptionsSubscription",
        "securitylake:DeleteSubscriptionNotificationConfiguration",
        "securitylake:GetDatalake",
        "securitylake:GetDatalakeAutoEnable",
        "securitylake:GetDatalakeExceptionsExpiry",
        "securitylake:GetDatalakeExceptionsSubscription",
        "securitylake:GetDatalakeStatus",
        "securitylake:GetSubscriptionNotificationConfiguration",
        "securitylake:ListDatalakeExceptions",
        "securitylake:UpdateDatalake",
        "securitylake:UpdateDatalakeExceptionsExpiry",
        "securitylake:UpdateDatalakeExceptionsSubscription",
        "securitylake:UpdateSubscriptionNotificationConfiguration"
      ]
    }
  },
  {
    "dateOfChange": "2023-05-31",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS IQ": [
        "iq:DownloadAttachment",
        "iq:GetRequest",
        "iq:ListAttachments"
      ],
      "Amazon QuickSight": [
        "quicksight:DescribeAssetBundleExportJob",
        "quicksight:DescribeAssetBundleImportJob",
        "quicksight:ListAssetBundleExportJobs",
        "quicksight:ListAssetBundleImportJobs",
        "quicksight:StartAssetBundleExportJob",
        "quicksight:StartAssetBundleImportJob"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-05-27",
    "addedServices": [
      "AWS Elemental MediaPackage V2"
    ],
    "removedServices": [],
    "addedActions": {
      "Amazon CodeGuru Security": [
        "codeguru-security:GetAccountConfiguration"
      ],
      "AWS Identity and Access Management Roles Anywhere": [
        "rolesanywhere:PutNotificationSettings",
        "rolesanywhere:ResetNotificationSettings"
      ],
      "AWS Elemental MediaPackage V2": [
        "mediapackagev2:CreateChannel",
        "mediapackagev2:CreateChannelGroup",
        "mediapackagev2:CreateOriginEndpoint",
        "mediapackagev2:DeleteChannel",
        "mediapackagev2:DeleteChannelGroup",
        "mediapackagev2:DeleteChannelPolicy",
        "mediapackagev2:DeleteOriginEndpoint",
        "mediapackagev2:DeleteOriginEndpointPolicy",
        "mediapackagev2:GetChannel",
        "mediapackagev2:GetChannelGroup",
        "mediapackagev2:GetChannelPolicy",
        "mediapackagev2:GetHeadObject",
        "mediapackagev2:GetObject",
        "mediapackagev2:GetOriginEndpoint",
        "mediapackagev2:GetOriginEndpointPolicy",
        "mediapackagev2:ListChannelGroups",
        "mediapackagev2:ListChannels",
        "mediapackagev2:ListOriginEndpoints",
        "mediapackagev2:ListTagsForResource",
        "mediapackagev2:PutChannelPolicy",
        "mediapackagev2:PutObject",
        "mediapackagev2:PutOriginEndpointPolicy",
        "mediapackagev2:TagResource",
        "mediapackagev2:UntagResource",
        "mediapackagev2:UpdateChannel",
        "mediapackagev2:UpdateChannelGroup",
        "mediapackagev2:UpdateOriginEndpoint"
      ]
    },
    "removedActions": {}
  },
  {
    "dateOfChange": "2023-05-26",
    "addedServices": [],
    "removedServices": [],
    "addedActions": {
      "AWS AppSync": [
        "appsync:AssociateMergedGraphqlApi",
        "appsync:AssociateSourceGraphqlApi",
        "appsync:DeleteResourcePolicy",
        "appsync:DisassociateMergedGraphqlApi",
        "appsync:DisassociateSourceGraphqlApi",
        "appsync:GetResourcePolicy",
        "appsync:GetSourceApiAssociation",
        "appsync:ListSourceApiAssociations",
        "appsync:ListTypesByAssociation",
        "appsync:PutResourcePolicy",
        "appsync:SourceGraphQL",
        "appsync:StartSchemaMerge",
        "appsync:UpdateSourceApiAssociation"
      ],
      "Amazon Translate": [
        "translate:TranslateDocument"
      ]
    },
    "removedActions": {}
  }
]